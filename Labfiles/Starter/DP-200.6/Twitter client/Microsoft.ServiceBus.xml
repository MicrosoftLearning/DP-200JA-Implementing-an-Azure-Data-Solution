<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.ServiceBus</name>
  </assembly>
  <members>
    <member name="T:Microsoft.ServiceBus.AuthorizationFailedException">
      <summary>承認の試行が失敗したときに発生する例外。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.AuthorizationFailedException.ErrorCode">
      <summary>承認試行失敗の原因を説明するエラー コードを取得または設定します。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode" /> リストの値の 1 つ。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.AuthorizationFailedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>ターゲット オブジェクトのシリアル化に必要なデータを <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクトに設定します。</summary>
      <param name="info">データを設定する <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクト。</param>
      <param name="context">のシリアル化の宛先 (<see cref="T:System.Runtime.Serialization.StreamingContext" />こ を参照)。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode">
      <summary>承認試行中の失敗の可能な原因を列挙します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode.ExpiredToken">
      <summary>トークンの有効期限が切れていることを指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode.Generic">
      <summary>エラーが一般的であることを指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode.InvalidAudience">
      <summary>オーディエンスが無効であることを指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode.InvalidClaim">
      <summary>クレームが無効であることを指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode.InvalidSignature">
      <summary>シグネチャが無効であることを指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode.MalformedToken">
      <summary>トークンの形式が誤りであることを指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode.MissingAudience">
      <summary>オーディエンスが見つからないことを指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode.MissingExpiresOn">
      <summary>&apos;有効期限が切れる&apos; 日付が見つからないことを指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode.MissingIssuer">
      <summary>発行者が見つからないことを指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode.MissingSignature">
      <summary>シグネチャが見つからないことを指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode.MissingToken">
      <summary>トークンが見つからないことを指定します。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.BasicHttpRelayBinding">
      <summary>クライアントが、ASMX ベースの Web サービスおよび WS-I Basic Profile 1.1 に準拠するその他のサービスと通信できるエンドポイントの構成に使用できるバインディングを表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.BasicHttpRelayBinding.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.BasicHttpRelayBinding.#ctor(Microsoft.ServiceBus.EndToEndBasicHttpSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType)">
      <summary>バインディングで使用されるセキュリティの指定されたタイプと、クライアントが使用する認証タイプを使用して、<see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="securityMode">SOAP メッセージを使用してクライアントのために使用されるセキュリティのタイプ。</param>
      <param name="relayClientAuthenticationType">クライアントが使用する認証のタイプ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.BasicHttpRelayBinding.#ctor(System.String)">
      <summary>指定された構成を使用して、<see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="configurationName">使用する構成。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.AllowCookies">
      <summary>クライアントが Cookie を許可するかどうかを判定する値を取得または設定します。</summary>
      <returns>Cookie を許可するには <see cref="T:System.Boolean" />.true、それ以外の場合は false を返します。既定値は false です。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.BasicHttpRelayBinding.CreateBindingElements">
      <summary>現在のバインディングに含まれるバインディング要素の順序付きコレクションを返します。</summary>
      <returns><see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> を返します。<see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" /> で説明されるバインディング要素の順序付きスタックが含まれます。下から始まるバインディング要素の順序は、トランスポート、エンコード、およびセキュリティです。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.EnvelopeVersion">
      <summary>このバインディングによって処理されるメッセージに使用される SOAP のバージョンを取得します。</summary>
      <returns><see cref="T:System.ServiceModel.EnvelopeVersion" /> を返します。このバインディングで使用される値です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.HostNameComparisonMode">
      <summary>ホスト名の比較方法を取得または設定します。</summary>
      <returns>ホスト名で使用される比較方法。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.IsDynamic">
      <summary>バインディング要素が動的であるかどうかを取得または設定します。</summary>
      <returns>バインディング要素が動的な場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.MaxBufferPoolSize">
      <summary>バインディングによって処理される TCP メッセージを格納するバッファー プールで許可される最大サイズを取得または設定します。</summary>
      <returns>バインディングによって処理される TCP メッセージを格納するバッファー プールで許可される最大サイズ。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.MaxBufferSize">
      <summary>チャネルからメッセージを受信するバッファーの最大サイズを取得または設定します。</summary>
      <returns><see cref="T:System.Int32" /> を返します。このバインディングで構成されたエンドポイントに対してメッセージが処理されている間にメッセージを格納するバッファーの最大サイズ (バイト) です。既定値は 65,536 バイトです。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.MaxReceivedMessageSize">
      <summary>このバインディングで構成されたチャネルで受信できるメッセージの最大サイズを取得または設定します。</summary>
      <returns><see cref="T:System.Int64" /> を返します。バインディングによって処理されるメッセージの最大サイズ (バイト) です。既定値は 65,536 バイトです。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.MessageEncoding">
      <summary>メッセージ エンコードのタイプを取得または設定します。</summary>
      <returns>メッセージ エンコードのタイプを含む <see cref="T:System.ServiceModel.WSMessageEncoding" /> を返します。既定値は Text です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.ProxyAddress">
      <summary>プロキシ アドレスを取得または設定します。</summary>
      <returns>プロキシ アドレスを含む <see cref="T:System.Uri" /> を返します。既定値は null です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.ReaderQuotas">
      <summary>閲覧者クォータを取得または設定します。</summary>
      <returns>交換される SOAP メッセージの複雑さの制約を指定する <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> を返します。これらの制約の既定値は、次の「備考」セクションで提供されます。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.Scheme">
      <summary>このバインディングで構成されているチャネルとリスナーの URI トランスポート スキームを取得します。</summary>
      <returns>このバインディングで構成されるチャネルとリスナーの URI トランスポート スキーム。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.Security">
      <summary>このバインディングで使用されるセキュリティ バインディングのコレクションを取得します。</summary>
      <returns>バインディングで使用されるセキュリティ設定を含む <see cref="T:Microsoft.ServiceBus.BasicHttpRelaySecurity" /> を返します。既定値は、Transport に設定されている EndToEndBasicSecurityMode、RelayAccessToken に設定されている RelayClientAuthenticationType、HttypProxyCredentialType が None の HttpRelayTransportSecurity、ClientCredentialType が BasicHttpMessageCredentialType.UserName の BasicHttpRelayMessageSecurity、SecurityAlgorithmSuite.Basic256 の AlgorithmSuite です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
      <summary>着信要求が同期的に処理されるか、非同期に処理されるかを示す値を取得します。</summary>
      <returns>着信要求が同期的に処理される場合は <see cref="T:System.Boolean" />.true、着信要求が非同期的に処理される場合は false を返します。既定値は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.TextEncoding">
      <summary>メッセージ テキストに使用される文字エンコードを取得または設定します。</summary>
      <returns>使用される文字エンコードを示す <see cref="T:System.Text.Encoding" /> を返します。既定値は UTF8Encoding です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.TransferMode">
      <summary>転送モードを取得または設定します。</summary>
      <returns>バインディングで構成されたサービスがメッセージ転送のストリームモードまたはバッファーリングモード (またはその両方) を使用するかどうかを示す <see cref="T:System.ServiceModel.TransferMode" /> を返します。既定で、HTTP、TCP/IP、および名前付きパイプ トランスポートは、バッファー付きメッセージ転送を使用します。既定値はバッファーリングされます。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.UseDefaultWebProxy">
      <summary>クライアントが既定の Web プロキシを使用するかどうかを判定する値を取得または設定します。</summary>
      <returns>クライアントが既定の Web プロキシを使用する場合は true、それ以外の場合は false を返します。既定値は true です。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.BasicHttpRelayMessageSecurity">
      <summary><see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" /> のメッセージ レベルのセキュリティ設定の構成に使用されるプロパティを提供します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayMessageSecurity.AlgorithmSuite">
      <summary><see cref="T:Microsoft.ServiceBus.BasicHttpRelayMessageSecurity" /> で使用するアルゴリズム スイートを指定します。</summary>
      <returns>対称暗号化アルゴリズムとして 256 ビットの高度暗号化標準 (AES) を指定する <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />  を返します。既定値は Base256 です。このプロパティを null にすることはできません。</returns>
      <exception cref="ArgumentNullException"><see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> の値は null です。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayMessageSecurity.ClientCredentialType">
      <summary>クライアントが認証する資格情報のタイプを指定します。</summary>
      <returns><see cref="T:System.ServiceModel.BasicHttpMessageCredentialType" /> を返します。この中には <see cref="T:System.ServiceModel.BasicHttpMessageCredentialType" /> リストのメンバーが含まれます。既定値は UserName. です。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.BasicHttpRelaySecurity">
      <summary><see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" /> バインディングのセキュリティ設定の構成に使用するプロパティを提供します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelaySecurity.Message">
      <summary><see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" /> バインディングのメッセージ レベルのセキュリティ設定を取得します。</summary>
      <returns>このバインディングのメッセージ レベルのセキュリティ設定を表す <see cref="T:Microsoft.ServiceBus.BasicHttpRelayMessageSecurity" /> を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelaySecurity.Mode">
      <summary><see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" /> バインディングのセキュリティ モードを取得または設定します。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.EndToEndBasicHttpSecurityMode" /> リストの値の 1 つ。既定値は None です。</returns>
      <exception cref="ArgumentOutOfRangeException">この値は、 <see cref="T:Microsoft.ServiceBus.EndToEndBasicHttpSecurityMode" /> の法的な値ではありません。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelaySecurity.RelayClientAuthenticationType">
      <summary>Windows Azure Service Bus サービスで使用される認証のタイプを取得または設定します。</summary>
      <returns>このサービスで使用される認証のタイプを含む <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" /> を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelaySecurity.Transport">
      <summary><see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" /> バインディングのトランスポート レベルのセキュリティ設定を取得します。</summary>
      <returns>セキュリティ設定を含む <see cref="T:Microsoft.ServiceBus.HttpRelayTransportSecurity" /> を返します。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.ConnectionStatusBehavior">
      <summary>Windows Azure Service Bus でリッスンするサービスの接続状態へのアクセスを提供するエンドポイントの動作。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.ConnectionStatusBehavior.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.ConnectionStatusBehavior" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="E:Microsoft.ServiceBus.ConnectionStatusBehavior.Connecting">
      <summary>接続中に発生します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.ConnectionStatusBehavior.IsOnline">
      <summary>接続がオンラインかどうかを判断する値を取得します。</summary>
      <returns>接続がオンラインの場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ConnectionStatusBehavior.LastError">
      <summary>最後のエラーを取得します。</summary>
      <returns>最後のエラーを含む <see cref="T:System.Exception" /> を返します。</returns>
    </member>
    <member name="E:Microsoft.ServiceBus.ConnectionStatusBehavior.Offline">
      <summary>接続がオフラインの場合に発生します。</summary>
    </member>
    <member name="E:Microsoft.ServiceBus.ConnectionStatusBehavior.Online">
      <summary>接続がオンラインの場合に発生します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.ConnectionStatusBehavior.Retry">
      <summary>接続を再試行します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.ConnectionStatusBehavior.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>指定したバインディング パラメーターをエンドポイントに追加します。</summary>
      <param name="serviceEndpoint">更新するエンドポイント。</param>
      <param name="bindingParameters">追加するバインディング パラメーター。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.ConnectionStatusBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>指定したクライアントの動作を、指定したエンドポイントに適用します。</summary>
      <param name="serviceEndpoint">更新するエンドポイント。</param>
      <param name="behavior">追加する動作。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.ConnectionStatusBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>指定したディスパッチ動作をサービス エンドポイントに適用します。</summary>
      <param name="serviceEndpoint">更新するエンドポイント。</param>
      <param name="endpointDispatcher">エンドポイント ディスパッチャー。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.ConnectionStatusBehavior.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>指定したエンドポイントを検証します。</summary>
      <param name="serviceEndpoint">検証するエンドポイント。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.ConnectivityMode">
      <summary>接続モードについて説明します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ConnectivityMode.AutoDetect">
      <summary>自動検出モード。現在のネットワーク環境でどの接続オプションを使用できるかどうかをプローブする自動検出メカニズムに基づいて、TCP、HTTP、HTTPS モードのいずれかを自動的に選択します。両方を使用できる場合、システムは既定で TCP を選択します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ConnectivityMode.Http">
      <summary>HTTP モード。リスナーは HTTP 接続を試行し、その後に Windows Azure Service Bus サービスとの HTTPS 接続およびメッセージのポーリングを行います。これにより、TCP ポートの制約をより簡単に回避できます。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ConnectivityMode.Tcp">
      <summary>TCP モード (既定)。リスナーは、9350 から 9354 の範囲の宛先ポートへの Windows Azure Service Bus サービスへの TCP 接続を作成します。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.ConnectivitySettings">
      <summary>現在のアプリケーション ドメインでアクティブなすべての Windows Azure Service Bus ベースのエンドポイントに対して有効な接続設定を保持します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.ConnectivitySettings.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.ConnectivitySettings" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ConnectivitySettings.connectivityMode">
      <summary>現在のインスタンスの <see cref="T:Microsoft.ServiceBus.ConnectivityMode" /> が含まれます。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.ConnectivitySettings.IsReadOnly">
      <summary>接続設定が読み取り専用かどうかを決定する値を取得します。</summary>
      <returns>接続設定が読み取り専用の場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ConnectivitySettings.Mode">
      <summary>現在のアプリケーション ドメインの接続モードを取得または設定します。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.ConnectivityMode" /> を返します。接続モードが含まれています。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.DiscoveryType">
      <summary>サービス レジストリ内のサービスの公開動作について説明します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.DiscoveryType.Private">
      <summary>サービスはサービス レジストリに公開されません。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.DiscoveryType.Public">
      <summary>サービスはサービス レジストリに公開されます。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.EndToEndBasicHttpSecurityMode">
      <summary><see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" /> で使用できるセキュリティ モードを指定するリストのタイプ。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.EndToEndBasicHttpSecurityMode.Message">
      <summary>セキュリティは、WS-Security SOAP メッセージ セキュリティを使用して提供されます。<see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" /> では、システムはサーバー証明書をクライアントに個別に提供する必要があります。このバインディングの有効なクライアント資格情報のタイプは、UserName と Certificate です。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.EndToEndBasicHttpSecurityMode.None">
      <summary>転送中、メッセージはセキュリティで保護されません。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.EndToEndBasicHttpSecurityMode.Transport">
      <summary>セキュリティは HTTPS を使用して提供されます。サービスは SSL 証明書で構成する必要があります。SOAP メッセージは、HTTPS を使用して全体的に保護されます。サービスは、サービスの SSL 証明書を使用してクライアントによって認証されます。クライアント認証は、Client CredentialType を介して制御されます。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.EndToEndBasicHttpSecurityMode.TransportWithMessageCredential">
      <summary>整合性、機密性、およびサーバー認証は HTTPS によって提供されます。サービスは証明書で構成する必要があります。クライアント認証は、SOAP メッセージ セキュリティによって提供されます。このモードは、ユーザーが UserName または Certificate 資格情報を使用して認証され、メッセージ転送をセキュリティで保護するための既存の HTTPS デプロイがある場合に適用されます。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.EndToEndSecurityMode">
      <summary>Windows Azure Service Bus バインディングのセキュリティ設定を決定し、クライアントとサービス エンドポイント間のセキュリティ関係について説明します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.EndToEndSecurityMode.Message">
      <summary>セキュリティは、SOAP メッセージ セキュリティを使用して提供されます。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.EndToEndSecurityMode.None">
      <summary>セキュリティは無効になっています。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.EndToEndSecurityMode.Transport">
      <summary>セキュリティは、トランスポート セキュリティ (通常は SSL) を使用して提供されます。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.EndToEndSecurityMode.TransportWithMessageCredential">
      <summary>セキュリティで保護されたトランスポート (HTTPS など) は整合性、機密性、および認証を提供し、SOAP メッセージ セキュリティはクライアント認証を提供します。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.EndToEndWebHttpSecurityMode">
      <summary><see cref="T:Microsoft.ServiceBus.WebHttpRelayBinding" /> で使用できるセキュリティのタイプを指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.EndToEndWebHttpSecurityMode.None">
      <summary>HTTP 要求でセキュリティが使用されていないことを示します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.EndToEndWebHttpSecurityMode.Transport">
      <summary>トランスポート レベルのセキュリティが必要であることを示します。クライアントは HTTPS を使用してサービス エンドポイントと通信する必要があります。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.ExceptionErrorCodes">
      <summary>例外のエラー コードを指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.AudienceNotFound">
      <summary>オーディエンスが見つかりません。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.BadGatewayFailure">
      <summary>このエラーは、ゲートウェイの不良が原因で発生します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.BadRequest">
      <summary>要求の処理中に解析エラーが発生しました。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.ConflictGeneric">
      <summary>一般的な競合エラー。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.ConflictOperationInProgress">
      <summary>操作が進行中です。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.CorrelationFiltersExceeded">
      <summary>関連付けフィルターが許容最大数を超えました。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.DataCommunicationError">
      <summary>データ通信のエラー。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.EndpointNotFound">
      <summary>エンドポイントが見つかりません。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.EntityGone">
      <summary>エンティティが見つかりません。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.ExpiredToken">
      <summary>トークンの有効期限が切れています。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.ExpiresOnNotFound">
      <summary>有効期限が見つかりません。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.ForbiddenGeneric">
      <summary>一般的な禁止エラー。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.GatewayTimeoutFailure">
      <summary>ゲートウェイは、上流サーバーからタイムリーな応答を受信しませんでした。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.InternalFailure">
      <summary>内部エラー。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.InvalidAudience">
      <summary>オーディエンスが無効です。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.InvalidDestination">
      <summary>宛先が無効です。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.InvalidSignature">
      <summary>シグネチャが無効です。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.IssuerNotFound">
      <summary>発行者が見つかりません。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.MalformedToken">
      <summary>不正な形式のトークン。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.MissingToken">
      <summary>トークンが見つかりません。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.NamespaceNotFound">
      <summary>名前空間が見つかりません。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.NoTransportSecurity">
      <summary>Service Bus にはトランスポート セキュリティがありません。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.ProviderUnreachable">
      <summary>プロバイダーに到達できません。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.ServerBusy">
      <summary>サーバーがビジー状態です。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.SignatureNotFound">
      <summary>シグネチャが見つかりません。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.SqlFiltersExceeded">
      <summary>SQL フィルターが許容最大数を超えました。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.StoreLockLost">
      <summary>ストア ロックが失われました。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.SubscriptionsExceeded">
      <summary>サブスクリプションが許容最大数を超えました。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.UnauthorizedGeneric">
      <summary>一般的な未承認エラー。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.UnknownExceptionDetail">
      <summary>不明な例外の詳細。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.UnspecifiedInternalError">
      <summary>指定されていない内部エラー。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.UpdateConflict">
      <summary>更新中に競合が発生しました。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.HttpRelayTransportBindingElement">
      <summary>Windows Azure Service Bus でメッセージを送信する HTTP トランスポートを指定するために使用されるバインディング要素を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.HttpRelayTransportBindingElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.#ctor(Microsoft.ServiceBus.HttpRelayTransportBindingElement)">
      <summary>クローンする指定要素を使用して、<see cref="T:Microsoft.ServiceBus.HttpRelayTransportBindingElement" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="elementToBeCloned">クローンする要素。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.#ctor(Microsoft.ServiceBus.RelayClientAuthenticationType)">
      <summary>指定されたクライアント認証タイプを使用して、<see cref="T:Microsoft.ServiceBus.HttpRelayTransportBindingElement" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="relayClientAuthenticationType">クライアント認証タイプ。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.AllowCookies">
      <summary>クライアントが Cookie を受け入れ、将来の要求でこれを伝達するかどうかを示す値を取得または設定します。</summary>
      <returns>Cookie が許可されている場合は true、それ以外の場合は false です。既定値は false です。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>チャネルの作成に使用できるチャネル ファクトリを作成します。</summary>
      <returns>指定したタイプのチャネル ファクトリ。</returns>
      <param name="context">チャネルのバインディング コンテキスト。</param>
      <typeparam name="TChannel">チャネル ファクトリのタイプ。</typeparam>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>指定した一般的なタイプのチャネルのチャネル リスナーを作成します。</summary>
      <returns>チャネル リスナー。</returns>
      <param name="context">バインディング コンテキスト。</param>
      <typeparam name="TChannel">リッスンするチャネルのタイプ。</typeparam>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>指定したタイプのチャネル ファクトリを構築できるかどうかを判定します。</summary>
      <returns>チャネル ファクトリを構築できる場合は true、それ以外の場合は false です。</returns>
      <param name="context">チャネルのバインディング コンテキスト。</param>
      <typeparam name="TChannel">チェックするチャネルのタイプ。</typeparam>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>バインディング要素が特定のタイプのチャネルのリスナーを構築できるかどうかを示す値を返します。</summary>
      <returns>IChannel タイプの IChannelListener&lt;TChannel&gt; をバインディング要素で構築できる場合は true、それ以外の場合は false です。</returns>
      <param name="context">バインディング要素のコンテキストを提供するバインディング コンテキスト。</param>
      <typeparam name="TChannel">リスナーが受け入れるチャネルのタイプ。</typeparam>
      <exception cref="ArgumentNullException">コンテキストは null です。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.Clone">
      <summary>バインディング要素オブジェクトのコピーを返します。</summary>
      <returns>元のディープ クローンを含む <see cref="T:System.ServiceModel.Channels.BindingElement" /> を返します。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.CreateInnerChannelBindingElement">
      <summary>内部チャネルの <see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" /> を作成します。</summary>
      <returns>内部チャネルの <see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" />。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>指定されたバインディング コンテキストから指定されたプロパティを取得します。</summary>
      <returns>指定されたバインディング コンテキストのプロパティ。</returns>
      <param name="context">バインディング コンテキスト。</param>
      <typeparam name="T">取得するプロパティのタイプ。</typeparam>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.GetTransportTokenAssertion">
      <summary>セキュリティ バインディングで使用されるトランスポート トークンを表す XML 要素を取得します。</summary>
      <returns>セキュリティ バインディングで使用されるトランスポート トークン。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.HostNameComparisonMode">
      <summary>ホスト名で使用する比較モードを取得または設定します。</summary>
      <returns>ホスト名で使用する比較モード。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.InitializeInnerChannelBindingElement(System.ServiceModel.Channels.HttpTransportBindingElement)">
      <summary><see cref="T:Microsoft.ServiceBus.HttpRelayTransportBindingElement" />  バインディング要素の現在のインスタンスの設定を使用して、指定されたバインディング要素を初期化します。</summary>
      <param name="httpTransportElement">初期化するバインディング要素。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.IsDynamic">
      <summary>バインディング要素が動的であるかどうかを取得または設定します。</summary>
      <returns>バインディング要素が動的な場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.KeepAliveEnabled">
      <summary>サービス エンドポイントへの永続的な接続を行うかどうかを示す値を取得または設定します。</summary>
      <returns>サービス エンドポイントへの要求に Keep-alive 値のある Connection HTTP ヘッダーを含める必要がある場合は true、それ以外の場合は false です。既定値は true です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.MaxBufferSize">
      <summary>使用するバッファーの最大サイズを取得または設定します。</summary>
      <returns>バッファーの最大サイズをバイト数で返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.ProxyAddress">
      <summary>HTTP 要求に使用するプロキシのアドレスを含む URI を取得または設定します。</summary>
      <returns>プロキシのアドレスを含む <see cref="T:System.Uri" /> を返します。既定値は null です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.ProxyAuthenticationScheme">
      <summary>HTTP プロキシによって処理されるクライアント要求の認証に使用される認証スキームを取得または設定します。</summary>
      <returns>プロキシのクライアント認証に使用されるプロトコルを指定する <see cref="T:System.Net.AuthenticationSchemes" /> リストの値の1 つ。既定は Anonymous です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.RelayClientAuthenticationType">
      <summary>リレー クライアント認証タイプを取得または設定します。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" /> を返します。認証タイプが含まれます。既定値は RelayClientAuthenticationType.RelayAccessToken です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.Scheme">
      <summary>トランスポートの URI スキームを取得します。</summary>
      <returns>URI スキームを返します。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>バインディングに関するカスタム ポリシー アサーションをエクスポートします。</summary>
      <param name="exporter">エクスポート プロセスの変更に使用できるメタデータ エクスポーター。</param>
      <param name="context">カスタム ポリシー アサーションの挿入に使用できるポリシー変換コンテキスト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>カスタム Web サービス記述言語 (WSDL) 要素をコントラクト向けに生成された WSDL に書き込みます。</summary>
      <param name="exporter">コントラクト情報をエクスポートする WSDL エクスプローラー。</param>
      <param name="context">エクスポートされた WSDL 要素からコントラクトの説明へのマッピングを提供します。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>カスタム Web サービス記述言語 (WSDL) 要素をエンドポイント向けに生成された WSDL に書き込みます。</summary>
      <param name="exporter">コントラクト情報をエクスポートする WSDL エクスプローラー。</param>
      <param name="context">エクスポートされた WSDL 要素からエンドポイント記述へのマッピングを提供します。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.TransferMode">
      <summary>転送モードを取得または設定します。</summary>
      <returns>転送モードを含む <see cref="T:System.ServiceModel.TransferMode" /> を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.UseDefaultWebProxy">
      <summary>ユーザー固有の設定ではなく、コンピュータ全体のプロキシ設定を使用するかどうかを示す値を取得または設定します。</summary>
      <returns>コンピューター全体のプロキシ設定が使用されている場合は true、それ以外の場合は false です。既定値は true です。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.HttpRelayTransportSecurity">
      <summary><see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" /> のトランスポート レベルのセキュリティ設定を表します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.HttpRelayTransportSecurity.ProxyCredentialType">
      <summary>プロキシに対する認証に使用するクライアント資格情報のタイプを取得または設定します。</summary>
      <returns>クライアント資格情報を含む <see cref="T:System.ServiceModel.HttpProxyCredentialType" /> を返します。</returns>
      <exception cref="ArgumentOutOfRangeException">プロパティを未定義の値に設定します。</exception>
    </member>
    <member name="T:Microsoft.ServiceBus.HttpsRelayTransportBindingElement">
      <summary>メッセージを送信するための HTTPS リレー トランスポートを指定するために使用されるバインディング要素を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpsRelayTransportBindingElement.#ctor">
      <summary>既定の設定を使用して、<see cref="T:Microsoft.ServiceBus.HttpsRelayTransportBindingElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpsRelayTransportBindingElement.#ctor(Microsoft.ServiceBus.HttpsRelayTransportBindingElement)">
      <summary>指定された要素を使用して、<see cref="T:Microsoft.ServiceBus.HttpsRelayTransportBindingElement" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="elementToBeCloned">クローンする要素。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpsRelayTransportBindingElement.#ctor(Microsoft.ServiceBus.RelayClientAuthenticationType)">
      <summary>指定されたタイプのクライアント認証を使用して、<see cref="T:Microsoft.ServiceBus.HttpsRelayTransportBindingElement" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="relayClientAuthenticationType">リレー クライアント認証タイプ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpsRelayTransportBindingElement.Clone">
      <summary>現在のバインディング要素のディープ コピーを作成します。</summary>
      <returns>現在のバインディング要素のディープ コピー。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpsRelayTransportBindingElement.CreateInnerChannelBindingElement">
      <summary>内部チャネルの <see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" /> バインディング要素を作成します。</summary>
      <returns>内部チャネルのバインディング要素。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpsRelayTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>指定されたバインディング コンテキストから指定されたプロパティを取得します。</summary>
      <returns>プロパティを含むバインディング要素。</returns>
      <param name="context">バインディング コンテキスト。</param>
      <typeparam name="T">取得するプロパティのタイプ。</typeparam>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpsRelayTransportBindingElement.InitializeInnerChannelBindingElement(System.ServiceModel.Channels.HttpTransportBindingElement)">
      <summary><see cref="T:Microsoft.ServiceBus.HttpsRelayTransportBindingElement" /> バインディング要素の現在のインスタンスの設定を使用して、指定されたバインディング要素を初期化します。</summary>
      <param name="httpTransportElement">初期化するバインディング要素。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.HttpsRelayTransportBindingElement.Scheme">
      <summary>トランスポートの URI スキームを取得します。</summary>
      <returns>トランスポートの URI スキーム (&quot;HTTPS&quot;)。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.HybridConnectionState">
      <summary>ハイブリッド接続の現在の接続状態について説明します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.HybridConnectionState.Direct">
      <summary>直接接続。通信当事者は、Windows Azure Service Bus インフラストラクチャを経由するのではなく、最も直接的なネットワーク パスにルーティングされたソケットを使用して接続します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.HybridConnectionState.Relayed">
      <summary>リレー型接続。通信当事者は、リレー型ソケットと Windows Azure Service Bus  インフラストラクチャを介して接続します。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.HybridConnectionStateChangedArgs">
      <summary>ハイブリッド接続状態の変更に対する引数を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.HybridConnectionStateChangedArgs.#ctor(Microsoft.ServiceBus.HybridConnectionState)">
      <summary><see cref="T:Microsoft.ServiceBus.HybridConnectionStateChangedArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="state">ハイブリッド接続の状態。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.HybridConnectionStateChangedArgs.ConnectionState">
      <summary>ハイブリッド接続の現在の接続状態を取得します。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.HybridConnectionState" /> を返します。接続状態を含みます。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.IConnectionStatus">
      <summary>一方通行接続の現在の状態について説明します。</summary>
    </member>
    <member name="E:Microsoft.ServiceBus.IConnectionStatus.Connecting">
      <summary>接続が確立されているときに発生します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.IConnectionStatus.IsOnline">
      <summary>接続がオンラインかどうかを判定する値を取得します。</summary>
      <returns>接続がオンラインの場合は true。現在のネットワークの場所から Windows Azure Servie Bus に接続されていない場合は false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.IConnectionStatus.LastError">
      <summary>オフライン状態から接続を再確立しようとしたときに発生した最後のエラーを取得します。</summary>
      <returns>最後のエラーを含む <see cref="T:System.Exception" /> を返します。</returns>
    </member>
    <member name="E:Microsoft.ServiceBus.IConnectionStatus.Offline">
      <summary>接続がオフラインになったときに発生します。</summary>
    </member>
    <member name="E:Microsoft.ServiceBus.IConnectionStatus.Online">
      <summary>接続がオンラインになったときに発生します。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.IHybridConnectionStatus">
      <summary>ハイブリッド接続チャネルの現在の接続状態へのアクセスを提供します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.IHybridConnectionStatus.ConnectionState">
      <summary>ハイブリッド接続の現在の接続状態を取得します。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.HybridConnectionState" /> を返します。接続状態を含みます。</returns>
    </member>
    <member name="E:Microsoft.ServiceBus.IHybridConnectionStatus.ConnectionStateChanged">
      <summary>接続状態が変更されたときに発生します。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.InvalidRequestException">
      <summary>無効な要求が発生したときにスローされる例外。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.InvalidRequestException.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.InvalidRequestException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.InvalidRequestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>指定された情報とコンテキストを使用して、<see cref="T:Microsoft.ServiceBus.InvalidRequestException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info">スローされる例外に関するシリアル化されたオブジェクト データを保持します。</param>
      <param name="context">送信元または宛先に関するコンテキスト情報が含まれます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.InvalidRequestException.#ctor(System.String)">
      <summary>指定されたメッセージを使用して、<see cref="T:Microsoft.ServiceBus.InvalidRequestException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">エラーを説明するメッセージ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.InvalidRequestException.#ctor(System.String,System.Exception)">
      <summary>指定されたメッセージと内部例外を使用して、<see cref="T:Microsoft.ServiceBus.InvalidRequestException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外の理由を説明するエラー メッセージ。</param>
      <param name="innerException">現在の例外の原因である例外、または内部例外が指定されていない場合は null。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.MessageSecurityOverRelayConnection">
      <summary>バインディングのリレー接続のメッセージ セキュリティについて説明します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.MessageSecurityOverRelayConnection.AlgorithmSuite">
      <summary>SOAP レベルでメッセージ セキュリティに使用されるアルゴリズム スイートを設定または取得します。</summary>
      <returns>アルゴリズム スイートを含む <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> を返します。既定値は Base256 です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.MessageSecurityOverRelayConnection.ClientCredentialType">
      <summary>クライアント認証に使用されるクライアント資格情報のタイプを取得または設定します。</summary>
      <returns>資格情報を含む <see cref="T:System.ServiceModel.MessageCredentialType" /> を返します。既定値は Windows です。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.MessageSecurityOverRelayHttp">
      <summary><see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" /> バインディングでメッセージ レベルのセキュリティ プロパティを設定できます。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.MessageSecurityOverRelayHttp.AlgorithmSuite">
      <summary>SOAP レベルのセキュリティ メッセージに使用するアルゴリズム スイートを指定します。</summary>
      <returns><see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.MessageSecurityOverRelayHttp.ClientCredentialType">
      <summary>クライアント認証に使用するクライアント資格情報のタイプを指定します。</summary>
      <returns>アルゴリズム スイートを含む <see cref="T:System.ServiceModel.MessageCredentialType" /> を返します。既定値は Basic256 です。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.MessageSecurityOverRelayHttp.IsSecureConversationEnabled">
      <summary><see cref="T:Microsoft.ServiceBus.MessageSecurityOverRelayHttp" /> から派生したクラスのインスタンス がセキュリティで保護された会話を実行するように構成されているかどうかを示すために拡張シナリオでのみ使用されます。</summary>
      <returns>派生クラスでオーバーライドされない限り、常に true を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.MessageSecurityOverRelayHttp.NegotiateServiceCredential">
      <summary>サービス資格情報が帯域外でクライアントでプロビジョニングされているか、またはネゴシエーションのプロセスを通じてサービスから取得されるかを示す値を取得または設定します。</summary>
      <returns>サービス資格情報がネゴシエーションのプロセスを通じて取得された場合に true,それ以外の場合は false を返します。既定値は true です。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.MessageSecurityOverRelayOneway">
      <summary>Windows Azure Service Bus リレーを通る一方通行の接続のメッセージ セキュリティ。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.MessageSecurityOverRelayOneway.AlgorithmSuite">
      <summary>SOAP レベルでメッセージをセキュリティで保護するために使用するアルゴリズム スイートを取得または設定します。</summary>
      <returns>アルゴリズム スイートを含む <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> を返します。既定は Basic256 で、対称暗号化アルゴリズムとして 256 ビットの高度暗号化標準 (AES) を指定します。</returns>
      <exception cref="T:System.ArgumentNullException"><see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> の値は null です。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.MessageSecurityOverRelayOneway.ClientCredentialType">
      <summary>クライアントが SOAP レベルでサービスに対して自身を認証するために使用するクライアント資格情報のタイプを取得または設定します。</summary>
      <returns>資格情報のタイプを含む <see cref="T:System.ServiceModel.MessageCredentialType" /> を返します。既定は Certificate です。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:Microsoft.ServiceBus.MessageSecurityOverRelayOneway.ClientCredentialType" /> の値は有効な <see cref="T:System.ServiceModel.MessageCredentialType" /> ではありません。</exception>
    </member>
    <member name="T:Microsoft.ServiceBus.NamespaceManager">
      <summary>サービス名前空間で、キュー、トピック、サブスクリプション、ルールなどのエンティティの管理に使用されるアンカー クラスを表します。サービス名前空間を管理するには、サービス名前空間アドレスとアクセス資格情報を指定する必要があります。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.#ctor(System.Collections.Generic.IEnumerable{System.String})">
      <summary>特定のアドレスで <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="addresses">サービス名前空間の完全なアドレス。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.#ctor(System.Collections.Generic.IEnumerable{System.String},Microsoft.ServiceBus.NamespaceManagerSettings)">
      <summary>特定のアドレスと設定で <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="addresses">サービス名前空間の完全なアドレス。</param>
      <param name="settings"><see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> および <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> プロパティを含む <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.#ctor(System.Collections.Generic.IEnumerable{System.String},Microsoft.ServiceBus.TokenProvider)">
      <summary>特定のアドレスとトークン プロバイダーで <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="addresses">サービス名前空間の完全なアドレス。</param>
      <param name="tokenProvider">セキュリティ トークン プロバイダー。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.#ctor(System.Collections.Generic.IEnumerable{System.Uri})">
      <summary>特定のサービス名前空間 URI ベース アドレスで <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="addresses">サービス名前空間の完全な URI アドレス。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.#ctor(System.Collections.Generic.IEnumerable{System.Uri},Microsoft.ServiceBus.NamespaceManagerSettings)">
      <summary>特定のサービス名前空間 URI ベース アドレスと設定で <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="addresses">サービス名前空間の完全な URI アドレス。</param>
      <param name="settings"><see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> および <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> プロパティを含む <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.#ctor(System.Collections.Generic.IEnumerable{System.Uri},Microsoft.ServiceBus.TokenProvider)">
      <summary>特定のサービス名前空間 URI ベース アドレスとトークン プロバイダーで <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="addresses">サービス名前空間の完全な URI アドレス。</param>
      <param name="tokenProvider">セキュリティ トークン プロバイダー。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.#ctor(System.String)">
      <summary>特定のサービス名前空間アドレスで <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="address">サービス名前空間の完全なアドレス。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.#ctor(System.String,Microsoft.ServiceBus.NamespaceManagerSettings)">
      <summary>特定のサービス名前空間ベース アドレスと <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> オブジェクトで <see cref="T:Microsoft.ServiceBus.NamespaceManager" />  クラスの新しいインスタンスを初期化します。</summary>
      <param name="address">サービス名前空間の完全なアドレス。</param>
      <param name="settings"><see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> および <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> プロパティを含む <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentException"><paramref name="address" /> には、サービス名前空間の完全なアドレスに追加されたパスが含まれています。</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="address" /> または <paramref name="settings" /> は null です。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.#ctor(System.String,Microsoft.ServiceBus.TokenProvider)">
      <summary>特定のサービス名前空間ベース アドレスとトークン プロバイダーで <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="address">サービス名前空間の完全なアドレス。</param>
      <param name="tokenProvider">セキュリティ トークン プロバイダー。</param>
      <exception cref="T:System.ArgumentException"><paramref name="address" /> には、サービス名前空間の完全なアドレスに追加されたパスが含まれています。</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="address" /> または <paramref name="token provider" /> は null です。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.#ctor(System.Uri)">
      <summary>特定のサービス名前空間 URI ベース アドレスで <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="address">サービス名前空間の完全な URI アドレス。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.#ctor(System.Uri,Microsoft.ServiceBus.NamespaceManagerSettings)">
      <summary>特定のサービス名前空間 URI ベース アドレスと <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> オブジェクトで <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="address">サービス名前空間の完全な URI アドレス。</param>
      <param name="settings"><see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> および <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> プロパティを含む <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentException"><paramref name="address" /> には、サービス名前空間の完全なアドレスに追加されたパスが含まれています。</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="address" /> または <paramref name="settings" /> は null です。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.#ctor(System.Uri,Microsoft.ServiceBus.TokenProvider)">
      <summary>特定のサービス名前空間 URI ベース アドレスと <see cref="T:Microsoft.ServiceBus.TokenProvider" /> オブジェクトで <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="address">サービス名前空間の完全な URI アドレス。</param>
      <param name="tokenProvider">セキュリティ トークン プロバイダー オブジェクト。</param>
      <exception cref="T:System.ArgumentException"><paramref name="address" /> には、サービス名前空間の完全なアドレスに追加されたパスが含まれています。</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="address" /> または <paramref name="token provider" /> は null です。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.NamespaceManager.Address">
      <summary>サービス名前空間のベース アドレスを取得します。</summary>
      <returns>サービス名前空間のベース アドレスを表わす <see cref="T:System.Uri" />。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginCreateQueue(Microsoft.ServiceBus.Messaging.QueueDescription,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.CreateQueue(Microsoft.ServiceBus.Messaging.QueueDescription)" /> の非同期バージョン。</summary>
      <returns>非同期操作を参照してキューを作成する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="description">キュー記述オブジェクト。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。このオブジェクトは、操作の完了時に <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndCreateQueue(System.IAsyncResult)" /> デリゲートに渡されます。</param>
      <exception cref="T:System.TimeoutException">操作がタイムアウトします。タイムアウト期間は、 <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> クラスを通じて初期化されます。タイムアウト値が比較的低い場合は、この例外を回避するために <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" />プロパティの値を増やす必要があるかもしれません。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">同じ名前とパスのキューが、同じサービス名前空間にあります。</exception>
      <exception cref="T:System.UnauthorizedAccessException"><see cref="T:Microsoft.ServiceBus.NamespaceManager" />オブジェクトには、この操作を実行するための十分なアクセス許可がありません。<see cref="T:Microsoft.ServiceBus.NamespaceManager" /> に、この操作を実行するための正しい <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> 資格情報があることを確認する必要があります。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.QuotaExceededException">説明内の指定されたサイズがサポートされていないか、最大許容クォータに達しています。サポートされているサイズ値のいずれかを指定するか、既存のエンティティを削除するか、クォータ サイズを大きくする必要があります。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">内部エラーまたは予期しない例外が発生します。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException">サーバーは論理操作で過負荷になっています。この関数の呼び出しを待機して再試行するか、再試行前にエンティティを削除する (たとえば、メッセージを受信してから送信) というアクションのいずれかを検討できます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginCreateQueue(System.String,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.CreateQueue(System.String)" /> の非同期バージョン。</summary>
      <returns>非同期操作を参照してキューを作成する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="path">サービス名前空間ベース アドレスに対するキューのパス。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。このオブジェクトは、操作の完了時に <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndCreateQueue(System.IAsyncResult)" /> デリゲートに渡されます。</param>
      <exception cref="T:System.ArgumentException"><paramref name="path" /> は null または空です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="path" /> の長さは <see cref="F:Microsoft.ServiceBus.Messaging.Constants.QueueNameMaximumLength" /> を超えています。</exception>
      <exception cref="T:System.TimeoutException">操作がタイムアウトします。タイムアウト期間は、 <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> クラスを通じて初期化されます。タイムアウト値が比較的低い場合は、この例外を回避するために <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" />プロパティの値を増やす必要があるかもしれません。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">同じ名前とパスのキューが、同じサービス名前空間にあります。</exception>
      <exception cref="T:System.UnauthorizedAccessException"><see cref="T:Microsoft.ServiceBus.NamespaceManager" />オブジェクトには、この操作を実行するための十分なアクセス許可がありません。<see cref="T:Microsoft.ServiceBus.NamespaceManager" /> に、この操作を実行するための正しい <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> 資格情報があることを確認する必要があります。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.QuotaExceededException">説明内の指定されたサイズがサポートされていないか、最大許容クォータに達しています。サポートされているサイズ値のいずれかを指定するか、既存のエンティティを削除するか、クォータ サイズを大きくする必要があります。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">内部エラーまたは予期しない例外が発生します。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginCreateSubscription(Microsoft.ServiceBus.Messaging.SubscriptionDescription,Microsoft.ServiceBus.Messaging.Filter,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscription(Microsoft.ServiceBus.Messaging.SubscriptionDescription,Microsoft.ServiceBus.Messaging.Filters.FilterExpression)" /> メソッドの非同期バージョン。</summary>
      <returns>非同期作成サブスクリプション アクションの状態を表す <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="description">サブスクリプションの説明オブジェクト。</param>
      <param name="filter">フィルター式の値を満たすメッセージをキャプチャするために使用されるフィルター式。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。このオブジェクトは、操作の完了時に <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndCreateSubscription(System.IAsyncResult)" /> デリゲートに渡されます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginCreateSubscription(Microsoft.ServiceBus.Messaging.SubscriptionDescription,Microsoft.ServiceBus.Messaging.RuleDescription,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscription(Microsoft.ServiceBus.Messaging.SubscriptionDescription,Microsoft.ServiceBus.Messaging.RuleDescription)" /> メソッドの非同期バージョン。</summary>
      <returns>非同期作成サブスクリプション アクションの状態を表す <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="description">サブスクリプションの説明オブジェクト。</param>
      <param name="ruleDescription">ルール記述オブジェクト。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。このオブジェクトは、操作の完了時に <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndCreateSubscription(System.IAsyncResult)" /> デリゲートに渡されます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginCreateSubscription(Microsoft.ServiceBus.Messaging.SubscriptionDescription,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscription(Microsoft.ServiceBus.Messaging.SubscriptionDescription)" /> メソッドの非同期バージョン。</summary>
      <returns>非同期作成サブスクリプション アクションの状態を表す <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="description">サブスクリプションの説明オブジェクト。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。このオブジェクトは、操作の完了時に <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndCreateSubscription(System.IAsyncResult)" /> デリゲートに渡されます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginCreateSubscription(System.String,System.String,Microsoft.ServiceBus.Messaging.Filter,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscription(System.String,System.String,Microsoft.ServiceBus.Messaging.Filters.FilterExpression)" /> メソッドの非同期バージョン。</summary>
      <returns>非同期作成サブスクリプション アクションの状態を表す <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="topicPath">サービス名前空間のベース アドレスに関連したトピック パス。</param>
      <param name="name">サブスクリプションの名前。</param>
      <param name="filter">フィルター式の値を満たすメッセージをキャプチャするために使用されるフィルター式。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。このオブジェクトは、操作の完了時に <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndCreateSubscription(System.IAsyncResult)" /> デリゲートに渡されます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginCreateSubscription(System.String,System.String,Microsoft.ServiceBus.Messaging.RuleDescription,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscription(System.String,System.String,Microsoft.ServiceBus.Messaging.RuleDescription)" /> メソッドの非同期バージョン。</summary>
      <returns>非同期作成サブスクリプション アクションの状態を表す <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="topicPath">サービス名前空間のベース アドレスに関連したトピック パス。</param>
      <param name="name">サブスクリプションの名前。</param>
      <param name="ruleDescription">ルール記述オブジェクト。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。このオブジェクトは、操作の完了時に <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndCreateSubscription(System.IAsyncResult)" /> デリゲートに渡されます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginCreateSubscription(System.String,System.String,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscription(System.String,System.String)" /> メソッドの非同期バージョン。</summary>
      <returns>非同期作成サブスクリプション アクションの状態を表す <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="topicPath">サービス名前空間のベース アドレスに関連したトピック パス。</param>
      <param name="name">サブスクリプションの名前。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。このオブジェクトは、操作の完了時に <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndCreateSubscription(System.IAsyncResult)" /> デリゲートに渡されます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginCreateTopic(Microsoft.ServiceBus.Messaging.TopicDescription,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.CreateTopic(Microsoft.ServiceBus.Messaging.TopicDescription)" /> メソッドの非同期バージョン。</summary>
      <returns>非同期作成トピック アクションの状態を表す <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="description">トピック記述オブジェクト。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。このオブジェクトは、操作の完了時に <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndCreateTopic(System.IAsyncResult)" /> デリゲートに渡されます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginCreateTopic(System.String,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.CreateTopic(System.String)" /> メソッドの非同期バージョン。</summary>
      <returns>非同期作成トピック アクションの状態を表す <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="path">サービス名前空間ベース アドレスに対するトピックのパス。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。このオブジェクトは、操作の完了時に <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndCreateTopic(System.IAsyncResult)" /> デリゲートに渡されます。</param>
      <exception cref="T:System.ArgumentException"><paramref name="path" /> は null または空です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="path" /> の長さは <see cref="F:Microsoft.ServiceBus.Messaging.Constants.QueueNameMaximumLength" /> を超えています。</exception>
      <exception cref="T:System.TimeoutException">操作がタイムアウトします。タイムアウト期間は、 <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> クラスを通じて初期化されます。タイムアウト値が比較的低い場合は、この例外を回避するために <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" />プロパティの値を増やす必要があるかもしれません。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">同じ名前とパスのキューが、同じサービス名前空間にあります。</exception>
      <exception cref="T:System.UnauthorizedAccessException"><see cref="T:Microsoft.ServiceBus.NamespaceManager" />オブジェクトには、この操作を実行するための十分なアクセス許可がありません。<see cref="T:Microsoft.ServiceBus.NamespaceManager" /> に、この操作を実行するための正しい <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> 資格情報があることを確認する必要があります。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.QuotaExceededException">説明内の指定されたサイズがサポートされていないか、最大許容クォータに達しています。サポートされているサイズ値のいずれかを指定するか、既存のエンティティを削除するか、クォータ サイズを大きくする必要があります。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">内部エラーまたは予期しない例外が発生します。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException">サーバーは論理操作で過負荷になっています。この関数の呼び出しを待機して再試行するか、再試行前にエンティティを削除する (たとえば、メッセージを受信してから送信) というアクションのいずれかを検討できます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginDeleteQueue(System.String,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.DeleteQueue(System.String)" /> メソッドの非同期バージョン。</summary>
      <returns>非同期操作を参照してキューを削除する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="path">サービス名前空間ベース アドレスに対するキューのパス。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。このオブジェクトは、操作の完了時に <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndDeleteQueue(System.IAsyncResult)" /> デリゲートに渡されます。</param>
      <exception cref="T:System.ArgumentException"><paramref name="path" /> が空または null、あるいは <paramref name="path" /> が &quot;/&quot; で始まるか終了しています。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="path" /> の長さは <see cref="F:Microsoft.ServiceBus.Messaging.Constants.QueueNameMaximumLength" /> を超えています。</exception>
      <exception cref="T:System.TimeoutException">操作がタイムアウトします。タイムアウト期間は、 <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> クラスを通じて初期化されます。タイムアウト値が比較的低い場合は、この例外を回避するために <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" />プロパティの値を増やす必要があるかもしれません。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">このパスにはキューがありません。</exception>
      <exception cref="T:System.UnauthorizedAccessException"><see cref="T:Microsoft.ServiceBus.NamespaceManager" />オブジェクトには、この操作を実行するための十分なアクセス許可がありません。<see cref="T:Microsoft.ServiceBus.NamespaceManager" /> に、この操作を実行するための正しい <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> 資格情報があることを確認する必要があります。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">内部エラーまたは予期しない例外が発生します。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginDeleteSubscription(System.String,System.String,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.DeleteSubscription(System.String,System.String)" /> メソッドの非同期バージョン。</summary>
      <returns>非同期操作を参照してサブスクリプションを削除する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="topicPath">サービス名前空間ベース アドレスに対するキューのパス。</param>
      <param name="name">サブスクリプションの名前。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。このオブジェクトは、操作の完了時に <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndDeleteSubscription(System.IAsyncResult)" /> デリゲートに渡されます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginDeleteTopic(System.String,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.DeleteTopic(System.String)" /> メソッドの非同期バージョン。</summary>
      <returns>非同期操作を参照してトピックを削除する<see cref="T:System.IAsyncResult" />。</returns>
      <param name="path">サービス名前空間ベース アドレスに対するトピックのパス。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。このオブジェクトは、操作の完了時に <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndDeleteTopic(System.IAsyncResult)" /> デリゲートに渡されます。</param>
      <exception cref="T:System.ArgumentException"><paramref name="path" /> が空または null、あるいは <paramref name="path" /> が &quot;/&quot; で始まるか終了しています。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginGetQueue(System.String,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.GetQueue(System.String)" /> メソッドの非同期バージョン。</summary>
      <returns>非同期操作を参照してキューを取得する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="path">サービス名前空間ベース アドレスに対するキューのパス。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。このオブジェクトは、操作の完了時に <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndGetQueue(System.IAsyncResult)" /> デリゲートに渡されます。</param>
      <exception cref="T:System.ArgumentException"><paramref name="path" /> は空または null です。</exception>
      <exception cref="T:System.TimeoutException">操作がタイムアウトします。タイムアウト期間は、 <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> クラスを通じて初期化されます。タイムアウト値が比較的低い場合は、この例外を回避するために <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" />プロパティの値を増やす必要があるかもしれません。</exception>
      <exception cref="T:System.UnauthorizedAccessException"><see cref="T:Microsoft.ServiceBus.NamespaceManager" />オブジェクトには、この操作を実行するための十分なアクセス許可がありません。<see cref="T:Microsoft.ServiceBus.NamespaceManager" /> に、この操作を実行するための正しい <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> 資格情報があることを確認する必要があります。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">内部エラーまたは予期しない例外が発生します。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginGetQueues(System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.GetQueues" /> の非同期バージョン。</summary>
      <returns>非同期操作を参照してキュー コレクションを取得する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。このオブジェクトは、操作の完了時に <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndGetQueues(System.IAsyncResult)" /> デリゲートに渡されます。</param>
      <exception cref="T:System.TimeoutException">操作がタイムアウトします。タイムアウト期間は、 <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> クラスを通じて初期化されます。タイムアウト値が比較的低い場合は、この例外を回避するために <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" />プロパティの値を増やす必要があるかもしれません。</exception>
      <exception cref="T:System.UnauthorizedAccessException"><see cref="T:Microsoft.ServiceBus.NamespaceManager" />オブジェクトには、この操作を実行するための十分なアクセス許可がありません。<see cref="T:Microsoft.ServiceBus.NamespaceManager" /> に、この操作を実行するための正しい <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> 資格情報があることを確認する必要があります。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">内部エラーまたは予期しない例外が発生します。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginGetQueues(System.String,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.GetQueues(System.String)" /> メソッドの非同期バージョン。</summary>
      <returns>非同期操作を参照してキュー コレクションを取得する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="filter">キューのフィルター処理に使用されるスティング。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。このオブジェクトは、操作の完了時に <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndGetQueues(System.IAsyncResult)" /> デリゲートに渡されます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginGetRules(System.String,System.String,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.GetRules(System.String,System.String)" /> メソッドの非同期バージョン。</summary>
      <returns>サービス名前空間ですべてのルールを取得する非同期操作を参照する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="topicPath">サービス名前空間ベース アドレスに対するトピックのパス。</param>
      <param name="subscriptionName">サブスクリプションの名前。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。このオブジェクトは、操作の完了時に <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndGetRules(System.IAsyncResult)" /> デリゲートに渡されます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginGetRules(System.String,System.String,System.String,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.GetRules(System.String,System.String,System.String)" /> メソッドの非同期バージョン。</summary>
      <returns>サービス名前空間ですべてのルールを取得する非同期操作を参照する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="topicPath">サービス名前空間ベース アドレスに対するトピックのパス。</param>
      <param name="subscriptionName">サブスクリプションの名前。</param>
      <param name="filter">ルールのフィルター処理に使用される文字列。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。このオブジェクトは、操作の完了時に <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndGetRules(System.IAsyncResult)" /> デリゲートに渡されます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginGetSubscription(System.String,System.String,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.GetSubscription(System.String,System.String)" /> メソッドの非同期バージョン。</summary>
      <returns>非同期操作を参照してサブスクリプションを取得する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="topicPath">サービス名前空間ベース アドレスに対するトピックのパス。</param>
      <param name="name">サブスクリプションの名前。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。このオブジェクトは、操作の完了時に <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndGetSubscription(System.IAsyncResult)" /> デリゲートに渡されます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginGetSubscriptions(System.String,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.GetSubscriptions(System.String)" /> メソッドの非同期バージョン。</summary>
      <returns>非同期操作を参照してサービス名前空間ですべてのサブスクリプションを取得する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="topicPath">サービス名前空間ベース アドレスに対するトピックのパス。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。このオブジェクトは、操作の完了時に <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndGetSubscriptions(System.IAsyncResult)" /> デリゲートに渡されます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginGetSubscriptions(System.String,System.String,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.GetSubscriptions(System.String,System.String)" /> の非同期バージョン。</summary>
      <returns>非同期操作を参照してサービス名前空間ですべてのサブスクリプションを取得する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="topicPath">サービス名前空間ベース アドレスに対するトピックのパス。</param>
      <param name="filter">サブスクリプションのフィルター処理に使用される文字列。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。このオブジェクトは、操作の完了時に <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndGetSubscriptions(System.IAsyncResult)" /> デリゲートに渡されます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginGetTopic(System.String,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.GetTopic(System.String)" /> メソッドの非同期バージョン。</summary>
      <returns>非同期操作を参照してトピックを取得する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="path">サービス名前空間ベース アドレスに対するトピックのパス。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。このオブジェクトは、操作の完了時に <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndGetTopic(System.IAsyncResult)" /> デリゲートに渡されます。</param>
      <exception cref="T:System.ArgumentException"><paramref name="path" /> が空または null、あるいは <paramref name="path" /> が &quot;/&quot; で始まるか終了しています。</exception>
      <exception cref="T:System.TimeoutException">操作がタイムアウトします。タイムアウト期間は、 <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> クラスを通じて初期化されます。タイムアウト値が比較的低い場合は、この例外を回避するために <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" />プロパティの値を増やす必要があるかもしれません。</exception>
      <exception cref="T:System.UnauthorizedAccessException"><see cref="T:Microsoft.ServiceBus.NamespaceManager" />オブジェクトには、この操作を実行するための十分なアクセス許可がありません。<see cref="T:Microsoft.ServiceBus.NamespaceManager" /> に、この操作を実行するための正しい <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> 資格情報があることを確認する必要があります。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">内部エラーまたは予期しない例外が発生します。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginGetTopics(System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.GetTopics" /> メソッドの非同期バージョン。</summary>
      <returns>非同期操作を参照してサービス名前空間ですべてのトピックを取得する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。このオブジェクトは、操作の完了時に <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndGetTopics(System.IAsyncResult)" /> デリゲートに渡されます。</param>
      <exception cref="T:System.TimeoutException">操作がタイムアウトします。タイムアウト期間は、 <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> クラスを通じて初期化されます。タイムアウト値が比較的低い場合は、この例外を回避するために <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" />プロパティの値を増やす必要があるかもしれません。</exception>
      <exception cref="T:System.UnauthorizedAccessException"><see cref="T:Microsoft.ServiceBus.NamespaceManager" />オブジェクトには、この操作を実行するための十分なアクセス許可がありません。<see cref="T:Microsoft.ServiceBus.NamespaceManager" /> に、この操作を実行するための正しい <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> 資格情報があることを確認する必要があります。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">内部エラーまたは予期しない例外が発生します。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginGetTopics(System.String,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.GetTopics(System.String)" /> メソッドの非同期バージョン。</summary>
      <returns>非同期操作を参照してサービス名前空間ですべてのトピックを取得する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="filter">取得するトピックをフィルター処理するために使用される文字列。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。このオブジェクトは、操作の完了時に <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndGetTopics(System.IAsyncResult)" /> デリゲートに渡されます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginGetVersionInfo(System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.GetVersionInfo(System.String)" /> メソッドの非同期バージョン。</summary>
      <returns>非同期操作を参照してバージョン情報を取得する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。このオブジェクトは、操作の完了時に <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndGetVersioninfo(System.IAsyncResult)" /> デリゲートに渡されます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginQueueExists(System.String,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.QueueExists(System.String)" /> メソッドの非同期バージョン。</summary>
      <returns>非同期操作を参照してサービス名前空間でキューの存在をチェックする  <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="path">サービス名前空間ベース アドレスに対するキューのパス。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。このオブジェクトは、操作の完了時に <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndQueueExists(System.IAsyncResult)" /> デリゲートに渡されます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginSubscriptionExists(System.String,System.String,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.SubscriptionExists(System.String,System.String)" /> メソッドの非同期バージョン。</summary>
      <returns>非同期操作を参照してサービス名前空間でサブスクリプションの存在をチェックする <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="topicPath">サービス名前空間ベース アドレスに対するトピックのパス。</param>
      <param name="name">サブスクリプションの名前。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。このオブジェクトは、操作の完了時に <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndSubscriptionExists(System.IAsyncResult)" /> デリゲートに渡されます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginTopicExists(System.String,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.TopicExists(System.String)" /> メソッドの非同期バージョン。</summary>
      <returns>非同期操作を参照してサービス名前空間でトピックの存在をチェックする <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="path">サービス名前空間ベース アドレスに対するトピックのパス。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。このオブジェクトは、操作の完了時に <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndTopicExists(System.IAsyncResult)" /> デリゲートに渡されます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginUpdateQueue(Microsoft.ServiceBus.Messaging.QueueDescription,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.UpdateQueue(System.String)" /> メソッドの非同期バージョン。</summary>
      <returns>非同期操作を参照してキューを更新する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="description">キューの説明。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。このオブジェクトは、操作の完了時に <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndUpdateQueue(System.IAsyncResult)" /> デリゲートに渡されます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginUpdateSubscription(Microsoft.ServiceBus.Messaging.SubscriptionDescription,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.UpdateSubscription(System.String)" /> メソッドの非同期バージョン。</summary>
      <returns>非同期操作を参照してサブスクリプションを更新する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="description">サブスクリプションの説明。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。このオブジェクトは、操作の完了時に <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndUpdateSubscription(System.IAsyncResult)" /> デリゲートに渡されます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginUpdateTopic(Microsoft.ServiceBus.Messaging.TopicDescription,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.UpdateTopic(System.String)" /> メソッドの非同期バージョン。</summary>
      <returns>非同期操作を参照してトピックを更新する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="description">トピックの説明。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。このオブジェクトは、操作の完了時に <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndUpdateTopic(System.IAsyncResult)" /> デリゲートに渡されます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.Create">
      <summary><see cref="T:Microsoft.ServiceBus.NamespaceManager" /> の新しいインスタンスを作成します。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.NamespaceManager" /> の新しいインスタンス。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateFromConnectionString(System.String)">
      <summary>指定した接続文字列を使用して <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> の新しいインスタンスを作成します。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.NamespaceManager" /> の新しいインスタンス。</returns>
      <param name="connectionString">使用される接続スティング。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateNotificationHub(Microsoft.ServiceBus.Notifications.NotificationHubDescription)">
      <summary><paramref name="description" /> パラメーターで指定されたプロパティのある新しい通知ハブを作成します。</summary>
      <returns>新しく作成された通知ハブの説明を含む <see cref="T:Microsoft.ServiceBus.Notifications.NotificationHubDescription" /> オブジェクト。</returns>
      <param name="description">新しい通知ハブが作成される属性を記述する説明オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateNotificationHubAsync(Microsoft.ServiceBus.Notifications.NotificationHubDescription)">
      <summary><paramref name="description" /> パラメーターで指定されたプロパティのある新しい通知ハブを非同期的に作成します。</summary>
      <returns>新しく作成された通知ハブの説明を含む <see cref="T:Microsoft.ServiceBus.Notifications.NotificationHubDescription" /> オブジェクト。</returns>
      <param name="description">新しい通知ハブが作成される属性を記述する説明オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateQueue(Microsoft.ServiceBus.Messaging.QueueDescription)">
      <summary>指定されたキューの説明を含む新しいキューをサービス名前空間に作成します。</summary>
      <returns>新しく作成されたキューの <see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" />。</returns>
      <param name="description">新しいキューが作成される属性を説明する <see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" /> オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateQueue(System.String)">
      <summary>指定されたパスを使用して、サービス名前空間に新しいキューを作成します。</summary>
      <returns>新しく作成されたキューの <see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" />。</returns>
      <param name="path">サービス名前空間ベース アドレスに対するキューのパス。</param>
      <exception cref="T:System.ArgumentException"><paramref name="path" /> は null または空です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="path" /> の長さは 290 字を超えています。</exception>
      <exception cref="T:System.TimeoutException">操作がタイムアウトします。タイムアウト期間は、 <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> クラスを通じて初期化されます。タイムアウト値が比較的低い場合は、この例外を回避するために <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" />プロパティの値を増やす必要があるかもしれません。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">同じサービス名前空間に同じ名前とパスのキューまたはトピックがあります。</exception>
      <exception cref="T:System.UnauthorizedAccessException"><see cref="T:Microsoft.ServiceBus.NamespaceManager" />オブジェクトには、この操作を実行するための十分なアクセス許可がありません。<see cref="T:Microsoft.ServiceBus.NamespaceManager" /> に、この操作を実行するための正しい <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> 資格情報があることを確認する必要があります。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.QuotaExceededException">説明内の指定されたサイズがサポートされていないか、最大許容クォータに達しています。サポートされているサイズ値のいずれかを指定するか、既存のエンティティを削除するか、クォータ サイズを大きくする必要があります。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">内部エラーまたは予期しない例外が発生します。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException">サーバーは論理操作で過負荷になっています。この関数の呼び出しを待機して再試行するか、再試行前にエンティティを削除する (たとえば、メッセージを受信してから送信) というアクションのいずれかを検討できます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateQueueAsync(Microsoft.ServiceBus.Messaging.QueueDescription)">
      <summary>指定されたキューの説明を使い、サービス名前空間で新しいキューを非同期的に作成します。</summary>
      <returns>新しく作成されたキューの <see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" />。</returns>
      <param name="description">新しいキューが作成される属性を説明する <see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" /> オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateQueueAsync(System.String)">
      <summary>特定のパスを使用して、サービス名前空間で新しいキューを非同期的に作成します。</summary>
      <returns>新しく作成されたキューの <see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" />。</returns>
      <param name="path">サービス名前空間のベース アドレスに対するキューのパス。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateRelayAsync(Microsoft.ServiceBus.Messaging.RelayDescription)">
      <summary>指定されたキューの説明を使用して、サービス名前空間で新しいリレーを非同期的に作成します。</summary>
      <returns>新しく作成されたリレーの <see cref="T:Microsoft.ServiceBus.Messaging.RelayDescription" />。</returns>
      <param name="description">新しいリレーが作成される属性を記述する説明オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateRelayAsync(System.String,Microsoft.ServiceBus.RelayType)">
      <summary>特定のパスとタイプを使用して、サービス名前空間で新しいキューを非同期的に作成します。</summary>
      <returns>新しく作成されたリレーの <see cref="T:Microsoft.ServiceBus.Messaging.RelayDescription" />。</returns>
      <param name="path">サービス名前空間のベース アドレスに対するキューのパス。</param>
      <param name="type">リレー タイプ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscription(Microsoft.ServiceBus.Messaging.SubscriptionDescription)">
      <summary>指定されたサブスクリプションの説明を使用して、サービス名前空間で新しいサブスクリプションを作成します。</summary>
      <returns>新しく作成されたサブスクリプションの <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" />。</returns>
      <param name="description">新しいサブスクリプションが作成される属性を説明する <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscription(Microsoft.ServiceBus.Messaging.SubscriptionDescription,Microsoft.ServiceBus.Messaging.Filter)">
      <summary>指定されたサブスクリプションの説明とフィルター式を使用して、サービス名前空間で新しいサブスクリプションを作成します。</summary>
      <returns>新しく作成されたサブスクリプションの <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" />。</returns>
      <param name="description">新しいサブスクリプションが作成される属性を説明する <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> オブジェクト。</param>
      <param name="filter">フィルター式の値を満たすメッセージをキャプチャするために使用されるフィルター式。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscription(Microsoft.ServiceBus.Messaging.SubscriptionDescription,Microsoft.ServiceBus.Messaging.RuleDescription)">
      <summary>指定されたサブスクリプションの説明とルールの説明を使用して、サービス名前空間で新しいサブスクリプションを作成します。</summary>
      <returns>新しく作成されたサブスクリプションの <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" />。</returns>
      <param name="description">新しいサブスクリプションが作成される属性を説明する <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> オブジェクト。</param>
      <param name="ruleDescription">メッセージが一致し、処理される属性を説明する <see cref="T:Microsoft.ServiceBus.Messaging.RuleDescription" /> オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscription(System.String,System.String)">
      <summary>指定されたトピックのパスとサブスクリプション名を使用して、サービス名前空間で新しいサブスクリプションを作成します。</summary>
      <returns>新しく作成されたサブスクリプションの <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" />。</returns>
      <param name="topicPath">サービス名前空間のベース アドレスに関連したトピック パス。</param>
      <param name="name">サブスクリプションの名前。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscription(System.String,System.String,Microsoft.ServiceBus.Messaging.Filter)">
      <summary>指定されたトピックのパス、サブスクリプション名、およびフィルター式を使用して、サービス名空間で新しいサブスクリプションを作成します。</summary>
      <returns>新しく作成されたサブスクリプションの <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" />。</returns>
      <param name="topicPath">サービス名前空間のベース アドレスに関連したトピック パス。</param>
      <param name="name">サブスクリプションの名前。</param>
      <param name="filter">フィルター式の値を満たすメッセージをキャプチャするために使用されるフィルター式。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscription(System.String,System.String,Microsoft.ServiceBus.Messaging.RuleDescription)">
      <summary>指定されたトピックのパス、サブスクリプション名、およびルール記述を使用して、サービス名空間で新しいサブスクリプションを作成します。</summary>
      <returns>新しく作成されたサブスクリプションの <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" />。</returns>
      <param name="topicPath">サービス名前空間のベース アドレスに関連したトピック パス。</param>
      <param name="name">サブスクリプションの名前。</param>
      <param name="ruleDescription">メッセージが一致し、処理される属性を説明する <see cref="T:Microsoft.ServiceBus.Messaging.RuleDescription" /> オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscriptionAsync(Microsoft.ServiceBus.Messaging.SubscriptionDescription)">
      <summary>指定されたサブスクリプションの説明を使用して、サービス名前空間で新しいサブスクリプションを非同期的に作成します。</summary>
      <returns>非同期的に作成されたサブスクリプション。</returns>
      <param name="description">新しいサブスクリプションが作成される属性を説明する <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscriptionAsync(Microsoft.ServiceBus.Messaging.SubscriptionDescription,Microsoft.ServiceBus.Messaging.Filter)">
      <summary>指定されたサブスクリプションの説明とフィルター式を使用して、サービス名前空間で新しいサブスクリプションを非同期的に作成します。</summary>
      <returns>非同期的に作成されたサブスクリプション。</returns>
      <param name="description">新しいサブスクリプションが作成される属性を説明する <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> オブジェクト。</param>
      <param name="filter">フィルター式の値を満たすメッセージをキャプチャするために使用されるフィルター式。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscriptionAsync(Microsoft.ServiceBus.Messaging.SubscriptionDescription,Microsoft.ServiceBus.Messaging.RuleDescription)">
      <summary>指定されたサブスクリプションの説明とルールの説明を使用して、サービス名前空間で新しいサブスクリプションを非同期的に作成します。</summary>
      <returns>非同期的に作成されたサブスクリプション。</returns>
      <param name="description">新しいサブスクリプションが作成される属性を説明する <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> オブジェクト。</param>
      <param name="ruleDescription">メッセージが一致し、処理される属性を説明する <see cref="T:Microsoft.ServiceBus.Messaging.RuleDescription" /> オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscriptionAsync(System.String,System.String)">
      <summary>指定されたトピックのパスとサブスクリプション名を使用して、サービス名空間で新しいサブスクリプションを非同期的に作成します。</summary>
      <returns>非同期的に作成されたサブスクリプション。</returns>
      <param name="topicPath">サービス名前空間のベース アドレスに関連したトピック パス。</param>
      <param name="name">サブスクリプションの名前。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscriptionAsync(System.String,System.String,Microsoft.ServiceBus.Messaging.Filter)">
      <summary>指定されたトピックのパス、サブスクリプション名、およびフィルター式を使用して、サービス名空間で新しいサブスクリプションを非同期的に作成します。</summary>
      <returns>非同期的に作成されたサブスクリプション。</returns>
      <param name="topicPath">サービス名前空間のベース アドレスに関連したトピック パス。</param>
      <param name="name">サブスクリプションの名前。</param>
      <param name="filter">フィルター式の値を満たすメッセージをキャプチャするために使用されるフィルター式。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscriptionAsync(System.String,System.String,Microsoft.ServiceBus.Messaging.RuleDescription)">
      <summary>指定されたトピックのパス、サブスクリプション名、およびルールの説明を使用して、サービス名空間で新しいサブスクリプションを非同期的に作成します。</summary>
      <returns>非同期的に作成されたサブスクリプション。</returns>
      <param name="topicPath">サービス名前空間のベース アドレスに関連したトピック パス。</param>
      <param name="name">サブスクリプションの名前。</param>
      <param name="ruleDescription">メッセージが一致し、処理される属性を説明する <see cref="T:Microsoft.ServiceBus.Messaging.RuleDescription" /> オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateTopic(Microsoft.ServiceBus.Messaging.TopicDescription)">
      <summary>指定されたトピックの説明を使用して、サービス名前空間で新しいトピックを作成します。</summary>
      <returns>新しく作成されたトピックの <see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription" />。</returns>
      <param name="description">新しいトピックが作成される属性を説明する <see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription" /> オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateTopic(System.String)">
      <summary>指定されたサービス名前空間パスを使用して、サービス名前空間で新しいトピックを作成します。</summary>
      <returns>新しく作成されたトピックの <see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription" />。</returns>
      <param name="path">サービス名前空間ベース アドレスに対するトピックのパス。</param>
      <exception cref="T:System.ArgumentException"><paramref name="path" /> が null または空、あるいは <paramref name="path" /> が &quot;/&quot; で始まるか終了しています。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="path" /> の長さが <see cref="F:Microsoft.ServiceBus.Messaging.Constants.QueueNameMaximumLength" /> を超えています。</exception>
      <exception cref="T:System.TimeoutException">操作がタイムアウトします。タイムアウト期間は、 <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> クラスを通じて初期化されます。タイムアウト値が比較的低い場合は、この例外を回避するために <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" />プロパティの値を増やす必要があるかもしれません。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">同じサービス名前空間に同じ名前とパスのキューまたはトピックがあります。</exception>
      <exception cref="T:System.UnauthorizedAccessException"><see cref="T:Microsoft.ServiceBus.NamespaceManager" />オブジェクトには、この操作を実行するための十分なアクセス許可がありません。<see cref="T:Microsoft.ServiceBus.NamespaceManager" /> に、この操作を実行するための正しい <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> 資格情報があることを確認する必要があります。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.QuotaExceededException">説明内の指定されたサイズがサポートされていないか、最大許容クォータに達しています。サポートされているサイズ値のいずれかを指定するか、既存のエンティティを削除するか、クォータ サイズを大きくする必要があります。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">内部エラーまたは予期しない例外が発生します。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateTopicAsync(Microsoft.ServiceBus.Messaging.TopicDescription)">
      <summary>指定されたトピックの説明を使用して、サービス名前空間内で新しいトピックを非同期的に作成します。</summary>
      <returns>非同期操作。</returns>
      <param name="description">新しいトピックが作成される属性を説明する <see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription" /> オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateTopicAsync(System.String)">
      <summary>特定のサービス名前空間パスを使用して、サービス名前空間内で新しいトピックを非同期的に作成します。</summary>
      <returns>非同期操作。</returns>
      <param name="path">サービス名前空間ベース アドレスに対するトピックのパス。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.DeleteNotificationHub(System.String)">
      <summary>提供された <paramref name="path" /> で通知ハブを削除します。</summary>
      <param name="path">通知ハブへのパス。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.DeleteNotificationHubAsync(System.String)">
      <summary>提供された <paramref name="path" /> で通知ハブを非同期的に削除します。</summary>
      <returns>非同期操作。</returns>
      <param name="path">通知ハブへのパス。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.DeleteQueue(System.String)">
      <summary>サービス名前空間のベース アドレスに対するパスで説明されているキューを削除します。</summary>
      <param name="path">サービス名前空間のベース アドレスに対するキューのパス。</param>
      <exception cref="T:System.ArgumentException"><paramref name="path" /> が空または null、あるいは <paramref name="path" /> が &quot;/&quot; で始まるか終了しています。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="path" /> の長さは <see cref="F:Microsoft.ServiceBus.Messaging.Constants.QueueNameMaximumLength" /> を超えています。</exception>
      <exception cref="T:System.TimeoutException">操作がタイムアウトします。タイムアウト期間は、 <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> クラスを通じて初期化されます。タイムアウト値が比較的低い場合は、この例外を回避するために <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" />プロパティの値を増やす必要があるかもしれません。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">このパスにはキューがありません。</exception>
      <exception cref="T:System.UnauthorizedAccessException"><see cref="T:Microsoft.ServiceBus.NamespaceManager" />オブジェクトには、この操作を実行するための十分なアクセス許可がありません。<see cref="T:Microsoft.ServiceBus.NamespaceManager" /> に、この操作を実行するための正しい <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> 資格情報があることを確認する必要があります。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">内部エラーまたは予期しない例外が発生します。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.DeleteQueueAsync(System.String)">
      <summary>サービス名前空間のベース アドレスに対するパスで説明されているキューを非同期的に削除します。</summary>
      <returns>非同期キュー削除操作。</returns>
      <param name="path">サービス名前空間のベース アドレスに対するキューのパス。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.DeleteRelayAsync(System.String)">
      <summary>サービス名前空間のベース アドレスに対するパスで説明されているリレーを非同期的に削除します。</summary>
      <returns>非同期的なリレー削除操作。</returns>
      <param name="path">サービス名前空間ベース アドレスに対するリレーのパス。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.DeleteSubscription(System.String,System.String)">
      <summary>指定されたトピックのパスとサブスクリプション名を使用してサブスクリプションを削除します。</summary>
      <param name="topicPath">サービス名前空間のベース アドレスに関連したトピック パス。</param>
      <param name="name">削除するサブスクリプションの名前。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.DeleteSubscriptionAsync(System.String,System.String)">
      <summary>指定されたトピックのパスとサブスクリプション名を使用してサブスクリプションを非同期的に削除します。</summary>
      <returns>非同期サブスクリプション削除操作。</returns>
      <param name="topicPath">サービス名前空間のベース アドレスに関連したトピック パス。</param>
      <param name="name">削除するサブスクリプションの名前。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.DeleteTopic(System.String)">
      <summary>サービス名前空間のベース アドレスに対するパスで説明されているトピックを削除します。</summary>
      <param name="path">サービス名前空間ベース アドレスに対するトピックのパス。</param>
      <exception cref="T:System.ArgumentException"><paramref name="path" /> は null または空、あるいは <paramref name="path" /> が &quot;/&quot; で始まるか終了しています。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.DeleteTopicAsync(System.String)">
      <summary>サービス名前空間のベース アドレスに対するパスで説明されているトピックを非同期的に削除します。</summary>
      <returns>非同期トピック削除操作。</returns>
      <param name="path">サービス名前空間ベース アドレスに対するトピックのパス。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndCreateQueue(System.IAsyncResult)">
      <summary>キューを作成する非同期要求を終了します。</summary>
      <returns>新しく作成されたキューの <see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" />。</returns>
      <param name="result">キュー作成操作の結果を表す <see cref="T:System.IAsyncResult" /> オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndCreateSubscription(System.IAsyncResult)">
      <summary>サブスクリプションを作成する非同期要求を終了します。</summary>
      <returns>新しく作成されたサブスクリプションの <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" />。</returns>
      <param name="result">サブスクリプション作成操作の結果を表す <see cref="T:System.IAsyncResult" /> オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndCreateTopic(System.IAsyncResult)">
      <summary>トピックを作成する非同期要求を終了します。</summary>
      <returns>新しく作成されたトピックの <see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription" />。</returns>
      <param name="result">トピック作成操作の結果を表す <see cref="T:System.IAsyncResult" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException"><paramref name="result" /> は null です。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndDeleteQueue(System.IAsyncResult)">
      <summary>キューを削除する非同期要求を終了します。</summary>
      <param name="result">キュー削除操作の結果を表す <see cref="T:System.IAsyncResult" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentException"><paramref name="path" /> が空または null、あるいは <paramref name="path" /> が &quot;/&quot; で始まるか終了しています。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="path" /> の長さは <see cref="F:Microsoft.ServiceBus.Messaging.Constants.QueueNameMaximumLength" /> を超えています。</exception>
      <exception cref="T:System.TimeoutException">操作がタイムアウトします。タイムアウト期間は、 <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> クラスを通じて初期化されます。タイムアウト値が比較的低い場合は、この例外を回避するために <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" />プロパティの値を増やす必要があるかもしれません。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">このパスにはキューがありません。</exception>
      <exception cref="T:System.UnauthorizedAccessException"><see cref="T:Microsoft.ServiceBus.NamespaceManager" />オブジェクトには、この操作を実行するための十分なアクセス許可がありません。<see cref="T:Microsoft.ServiceBus.NamespaceManager" /> に、この操作を実行するための正しい <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> 資格情報があることを確認する必要があります。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">内部エラーまたは予期しない例外が発生します。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndDeleteRegistration(System.IAsyncResult)">
      <summary>登録を削除する非同期要求を終了します。</summary>
      <param name="result">登録削除操作の結果を表す <see cref="T:System.IAsyncResult" /> オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndDeleteSubscription(System.IAsyncResult)">
      <summary>サブスクリプションを削除する非同期要求を終了します。</summary>
      <param name="result">サブスクリプション削除操作の結果を表す <see cref="T:System.IAsyncResult" /> オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndDeleteTopic(System.IAsyncResult)">
      <summary>トピックを削除する非同期要求を終了します。</summary>
      <param name="result">トピック削除操作の結果を表す <see cref="T:System.IAsyncResult" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="path" /> の長さは <see cref="F:Microsoft.ServiceBus.Messaging.Constants.QueueNameMaximumLength" /> を超えています。</exception>
      <exception cref="T:System.TimeoutException">操作がタイムアウトします。タイムアウト期間は、 <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> クラスを通じて初期化されます。タイムアウト値が比較的低い場合は、この例外を回避するために <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" />プロパティの値を増やす必要があるかもしれません。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">このパスにはキューがありません。</exception>
      <exception cref="T:System.UnauthorizedAccessException"><see cref="T:Microsoft.ServiceBus.NamespaceManager" />オブジェクトには、この操作を実行するための十分なアクセス許可がありません。<see cref="T:Microsoft.ServiceBus.NamespaceManager" /> に、この操作を実行するための正しい <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> 資格情報があることを確認する必要があります。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">内部エラーまたは予期しない例外が発生します。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndGetQueue(System.IAsyncResult)">
      <summary>キューを取得する非同期要求を終了します。</summary>
      <returns>キューへの <see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" /> ハンドル、またはキューがサービス名前空間にない場合は null。</returns>
      <param name="result">キュー取得操作の結果を表す <see cref="T:System.IAsyncResult" /> オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndGetQueues(System.IAsyncResult)">
      <summary>サービス名前空間からすべてのキューを取得する非同期要求を終了します。</summary>
      <returns>サービス名前空間内のすべてのキューのコレクションを表す <see cref="T:System.Collections.Generic.IEnumerable`1" /> オブジェクト。このサービス名前空間にキューがない場合は、空のコレクションを返します。</returns>
      <param name="result">未処理の非同期要求を参照して、サービス名前空間からすべてのキューを取得する <see cref="T:System.IAsyncResult" /> オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndGetRules(System.IAsyncResult)">
      <summary>サービス名前空間からすべてのルールを取得する非同期要求を終了します。</summary>
      <returns>サービス名前空間内のすべてのルールのコレクションを表す <see cref="T:System.Collections.Generic.IEnumerable`1" /> オブジェクト。このサービス名前空間にルールがない場合は、空のコレクションを返します。</returns>
      <param name="result">ルール取得操作の結果を表す <see cref="T:System.IAsyncResult" /> オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndGetSubscription(System.IAsyncResult)">
      <summary>サブスクリプションを取得する非同期要求を終了します。</summary>
      <returns>サブスクリプションへの <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> ハンドル、またはサブスクリプションがサービス名前空間にない場合は null。</returns>
      <param name="result">サブスクリプション取得操作の結果を表す <see cref="T:System.IAsyncResult" /> オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndGetSubscriptions(System.IAsyncResult)">
      <summary>サービス名前空間からすべてのサブスクリプションを取得する非同期要求を終了します。</summary>
      <returns>サービス名前空間内のすべてのサブスクリプションのコレクションを表す <see cref="T:System.Collections.Generic.IEnumerable`1" /> オブジェクト。このサービス名前空間にサブスクリプションがない場合は、空のコレクションを返します。</returns>
      <param name="result">未処理の非同期要求を参照して、サービス名前空間からすべてのサブスクリプションを取得する <see cref="T:System.IAsyncResult" /> オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndGetTopic(System.IAsyncResult)">
      <summary>トピックを取得する非同期要求を終了します。</summary>
      <returns>トピックへの <see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription" /> ハンドル、またはトピックがサービス名前空間にない場合は null。</returns>
      <param name="result">トピック取得操作の結果を表す <see cref="T:System.IAsyncResult" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException"><paramref name="result" /> は null です。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndGetTopics(System.IAsyncResult)">
      <summary>サービス名前空間からすべてのトピックを取得する非同期要求を終了します。</summary>
      <returns>このサービス名前空間内のトピックのコレクションを表す <see cref="T:System.Collections.Generic.IEnumerable`1" /> オブジェクト。このサービス名前空間にトピックがない場合は、空のコレクションを返します。</returns>
      <param name="result">未処理の非同期要求を参照して、サービス名前空間からすべてのトピックを取得する <see cref="T:System.IAsyncResult" /> オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndGetVersionInfo(System.IAsyncResult)">
      <summary>バージョン情報を取得する非同期要求を終了します。</summary>
      <returns>バージョン情報。</returns>
      <param name="result">バージョン取得情報の結果を表す <see cref="T:System.IAsyncResult" /> オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndQueueExists(System.IAsyncResult)">
      <summary>サービス名前空間からキューが存在するかどうかを判断する非同期要求を終了します。</summary>
      <returns>サービス名前空間にキューが存在する場合は true、それ以外の場合は false です。</returns>
      <param name="result">キュー存在チェック操作の結果を表す <see cref="T:System.IAsyncResult" /> オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndSubscriptionExists(System.IAsyncResult)">
      <summary>サービス名前空間からサブスクリプションが存在するかどうかを判断する非同期要求を終了します。</summary>
      <returns>サービス名前空間にサブスクリプションが存在する場合は true、それ以外の場合は false です。</returns>
      <param name="result">サブスクリプション存在チェック操作の結果を表す <see cref="T:System.IAsyncResult" /> オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndTopicExists(System.IAsyncResult)">
      <summary>サービス名前空間からトピックが存在するかどうかを判断する非同期要求を終了します。</summary>
      <returns>サービス名前空間にサブスクリプションが存在する場合は true、それ以外の場合は false です。</returns>
      <param name="result">トピックの存在チェック操作の結果を表す <see cref="T:System.IAsyncResult" /> オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndUpdateQueue(System.IAsyncResult)">
      <summary>キューを更新する非同期要求を終了します。</summary>
      <returns>キューへの <see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" /> ハンドル、またはキューがサービス名前空間にない場合は null。</returns>
      <param name="result">キュー更新操作の結果を表す <see cref="T:System.IAsyncResult" /> オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndUpdateSubscription(System.IAsyncResult)">
      <summary>サブスクリプションを更新する非同期要求を終了します。</summary>
      <returns>サブスクリプションへの <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> ハンドル、またはサブスクリプションがサービス名前空間にない場合は null。</returns>
      <param name="result">サブスクリプション更新操作の結果を表す <see cref="T:System.IAsyncResult" /> オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndUpdateTopic(System.IAsyncResult)">
      <summary>トピックを更新する非同期要求を終了します。</summary>
      <returns>トピックへの <see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription" /> ハンドル、またはトピックがサービス名前空間にない場合は null。</returns>
      <param name="result">トピック更新操作の結果を表す <see cref="T:System.IAsyncResult" /> オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetNotificationHub(System.String)">
      <summary>サービス名前空間から通知ハブの説明を取得します。</summary>
      <returns>サービス名前空間からの <see cref="T:Microsoft.ServiceBus.Notifications.NotificationHubDescription" />。</returns>
      <param name="path">サービス名前空間へのパス。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetNotificationHubAsync(System.String)">
      <summary>サービス名前空間から通知ハブの説明を非同期的に取得します。</summary>
      <returns>サービス名前空間から通知ハブの説明を取得する非同期操作。</returns>
      <param name="path">サービス名前空間へのパス。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetNotificationHubs">
      <summary>サービス名前空間から通知ハブの説明を取得します。</summary>
      <returns>サービス名前空間からの通知ハブの説明の一覧。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetNotificationHubsAsync">
      <summary>サービス名前空間から通知ハブの説明を非同期的に取得します。</summary>
      <returns>非同期操作。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetQueue(System.String)">
      <summary>サービス名前空間からキューを取得します。</summary>
      <returns>キューへの <see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" /> ハンドル、またはサービス名前空間にキューがない場合は <see cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException" /> 例外。</returns>
      <param name="path">サービス名前空間のベース アドレスに対するキューのパス。</param>
      <exception cref="T:System.ArgumentException"><paramref name="path" /> が空または null、あるいは <paramref name="path" /> が &quot;/&quot; で始まるか終了しています。</exception>
      <exception cref="T:System.TimeoutException">操作がタイムアウトします。タイムアウト期間は、 <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> クラスを通じて初期化されます。タイムアウト値が比較的低い場合は、この例外を回避するために <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" />プロパティの値を増やす必要があるかもしれません。</exception>
      <exception cref="T:System.UnauthorizedAccessException"><see cref="T:Microsoft.ServiceBus.NamespaceManager" />オブジェクトには、この操作を実行するための十分なアクセス許可がありません。<see cref="T:Microsoft.ServiceBus.NamespaceManager" /> に、この操作を実行するための正しい <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> 資格情報があることを確認する必要があります。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">サービス名前空間にはキューがありません。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">内部エラーまたは予期しない例外が発生します。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetQueueAsync(System.String)">
      <summary>サービス名前空間からキューを非同期的に取得します。</summary>
      <returns>非同期操作。</returns>
      <param name="path">サービス名前空間のベース アドレスに対するキューのパス。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetQueues">
      <summary>サービス名前空間内のすべてのキューの列挙可能なコレクションを取得します。</summary>
      <returns>サービス名前空間内のすべてのキューのコレクションを表すか、キューがない場合は空のコレクションを返す <see cref="T:System.Collections.Generic.IEnumerable`1" /> オブジェクト。</returns>
      <exception cref="T:System.TimeoutException">操作がタイムアウトします。タイムアウト期間は、 <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> クラスを通じて初期化されます。タイムアウト値が比較的低い場合は、この例外を回避するために <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" />プロパティの値を増やす必要があるかもしれません。</exception>
      <exception cref="T:System.UnauthorizedAccessException"><see cref="T:Microsoft.ServiceBus.NamespaceManager" />オブジェクトには、この操作を実行するための十分なアクセス許可がありません。<see cref="T:Microsoft.ServiceBus.NamespaceManager" /> に、この操作を実行するための正しい <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> 資格情報があることを確認する必要があります。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">内部エラーまたは予期しない例外が発生します。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetQueues(System.String)">
      <summary>指定されたフィルターを使用して、サービス名前空間のすべてのキューの列挙可能なコレクションを取得します。エンティティ名 (開始名を含む)、エンティティの長さ (Gt または Lt)、作成、更新、およびアクセス時間 (Gt または Lt) の組み合わせでフィルター処理できます。</summary>
      <returns>サービス名前空間内のすべてのキューのコレクションを表すか、キューがない場合は空のコレクションを返す <see cref="T:System.Collections.Generic.IEnumerable`1" /> オブジェクト。</returns>
      <param name="filter">取得するキューをフィルター処理するために使用される文字列。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetQueuesAsync">
      <summary>サービス名前空間内のすべてのキューの列挙可能なコレクションを非同期的に取得します。</summary>
      <returns>非同期操作。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetQueuesAsync(System.String)">
      <summary>指定されたフィルターを使用して、サービス名前空間内のすべてのキューの列挙可能なコレクションを非同期的に取得します。</summary>
      <returns>非同期操作。</returns>
      <param name="filter">取得するキューをフィルター処理するために使用される文字列。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetRelayAsync(System.String)">
      <summary>指定されたパスを使用して、サービス名前空間内のすべてのリレーの列挙可能なコレクションを非同期的に取得します。</summary>
      <returns>非同期操作。</returns>
      <param name="path">リレー パス。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetRelaysAsync">
      <summary>サービス名前空間内のすべてのリレーの列挙可能なコレクションを非同期的に取得します。</summary>
      <returns>非同期操作。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetRules(System.String,System.String)">
      <summary>サービス名前空間内のすべてのルールの列挙可能なコレクションを取得します。</summary>
      <returns>サービス名前空間内のすべてのルールのコレクションを表すか、ルールが存在しない場合は空のコレクションを返す <see cref="T:System.Collections.Generic.IEnumerable`1" /> オブジェクト。</returns>
      <param name="topicPath">サービス名前空間ベース アドレスに対するトピックのパス。</param>
      <param name="subscriptionName">サブスクリプションの名前。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetRules(System.String,System.String,System.String)">
      <summary>指定されたトピックのパス、サブスクリプション名、およびフィルターを使用して、サービス名前空間内のすべてのルールの列挙可能なコレクションを取得します。</summary>
      <returns>サービス名前空間内のすべてのルールのコレクションを表すか、ルールが存在しない場合は空のコレクションを返す <see cref="T:System.Collections.Generic.IEnumerable`1" /> オブジェクト。</returns>
      <param name="topicPath">サービス名前空間のベース アドレスに関連したトピック パス。</param>
      <param name="subscriptionName">サブスクリプションの名前。</param>
      <param name="filter">取得するルールをフィルター処理するために使用される文字列。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetRulesAsync(System.String,System.String)">
      <summary>サービス名前空間内のすべてのルールの列挙可能なコレクションを非同期的に取得します。</summary>
      <returns>非同期操作。</returns>
      <param name="topicPath">サービス名前空間のベース アドレスに関連したトピック パス。</param>
      <param name="subscriptionName">サブスクリプションの名前。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetRulesAsync(System.String,System.String,System.String)">
      <summary>指定されたトピックのパス、サブスクリプション名、およびフィルターを使用して、サービス名前空間内のすべてのルールの列挙可能なコレクションを非同期的に取得します。</summary>
      <returns>非同期操作。</returns>
      <param name="topicPath">サービス名前空間のベース アドレスに関連したトピック パス。</param>
      <param name="subscriptionName">サブスクリプションの名前。</param>
      <param name="filter">取得するルールをフィルター処理するために使用される文字列。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetSubscription(System.String,System.String)">
      <summary>サービス名前空間からトピックを取得します。</summary>
      <returns>サブスクリプションへの <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> ハンドル、またはサブスクリプションがサービス名前空間にない場合は <see cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException" /> 例外。</returns>
      <param name="topicPath">サービス名前空間ベース アドレスに対するトピックのパス。</param>
      <param name="name">サブスクリプションの名前。</param>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">サブスクリプションはサービス名前空間にありません。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetSubscriptionAsync(System.String,System.String)">
      <summary>サービス名前空間からトピックを非同期的に取得します。</summary>
      <returns>非同期操作。</returns>
      <param name="topicPath">サービス名前空間ベース アドレスに対するトピックのパス。</param>
      <param name="name">サブスクリプションの名前。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetSubscriptions(System.String)">
      <summary>サービス名前空間内のすべてのサブスクリプションの列挙可能なコレクションを取得します。</summary>
      <returns>サービス名前空間内のすべてのサブスクリプションのコレクションを表すか、サブスクリプションがない場合は空のコレクションを返す <see cref="T:System.Collections.Generic.IEnumerable`1" />オブジェクト。</returns>
      <param name="topicPath">サービス名前空間ベース アドレスに対するトピックのパス。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetSubscriptions(System.String,System.String)">
      <summary>指定されたトピックのパスとフィルターを使用して、サービス名前空間内のすべてのサブスクリプションの列挙可能なコレクションを取得します。</summary>
      <returns>サービス名前空間内のすべてのサブスクリプションのコレクションを表すか、サブスクリプションがない場合は空のコレクションを返す <see cref="T:System.Collections.Generic.IEnumerable`1" />オブジェクト。</returns>
      <param name="topicPath">サービス名前空間ベース アドレスに対するトピックのパス。</param>
      <param name="filter">取得するサブスクリプションをフィルター処理するために使用される文字列。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetSubscriptionsAsync(System.String)">
      <summary>サービス名前空間内のすべてのサブスクリプションの列挙可能なコレクションを非同期的に取得します。</summary>
      <returns>非同期操作。</returns>
      <param name="topicPath">サービス名前空間ベース アドレスに対するトピックのパス。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetSubscriptionsAsync(System.String,System.String)">
      <summary>サービス名前空間内のすべてのサブスクリプションの列挙可能なコレクションを非同期的に取得します。</summary>
      <returns>非同期操作。</returns>
      <param name="topicPath">サービス名前空間ベース アドレスに対するトピックのパス。</param>
      <param name="filter">取得するサブスクリプションをフィルター処理するために使用される文字列。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetTopic(System.String)">
      <summary>サービス名前空間からトピックを取得します。</summary>
      <returns>トピックへの <see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription" /> 参照、またはトピックがサービス名前空間にない場合は <see cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException" /> 例外。</returns>
      <param name="path">サービス名前空間ベース アドレスに対するトピックのパス。</param>
      <exception cref="T:System.ArgumentException"><paramref name="path" /> は空または null です。</exception>
      <exception cref="T:System.TimeoutException">操作がタイムアウトします。タイムアウト期間は、 <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> クラスを通じて初期化されます。タイムアウト値が比較的低い場合は、この例外を回避するために <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" />プロパティの値を増やす必要があるかもしれません。</exception>
      <exception cref="T:System.UnauthorizedAccessException"><see cref="T:Microsoft.ServiceBus.NamespaceManager" />オブジェクトには、この操作を実行するための十分なアクセス許可がありません。<see cref="T:Microsoft.ServiceBus.NamespaceManager" /> に、この操作を実行するための正しい <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> 資格情報があることを確認する必要があります。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">トピックはサービス名前空間にありません。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">内部エラーまたは予期しない例外が発生します。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetTopicAsync(System.String)">
      <summary>サービス名前空間からトピックを非同期的に取得します。</summary>
      <returns>非同期操作。</returns>
      <param name="path">サービス名前空間ベース アドレスに対するトピックのパス。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetTopics">
      <summary>サービス名前空間内のトピックのコレクションを取得します。</summary>
      <returns>現在の名前空間でトピックのコレクションを表すか、トピックがない場合は空のコレクションを返す <see cref="T:System.Collections.Generic.IEnumerable`1" /> オブジェクト。</returns>
      <exception cref="T:System.TimeoutException">操作がタイムアウトします。タイムアウト期間は、 <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> クラスを通じて初期化されます。タイムアウト値が比較的低い場合は、この例外を回避するために <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" />プロパティの値を増やす必要があるかもしれません。</exception>
      <exception cref="T:System.UnauthorizedAccessException"><see cref="T:Microsoft.ServiceBus.NamespaceManager" />オブジェクトには、この操作を実行するための十分なアクセス許可がありません。<see cref="T:Microsoft.ServiceBus.NamespaceManager" /> に、この操作を実行するための正しい <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> 資格情報があることを確認する必要があります。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">内部エラーまたは予期しない例外が発生します。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetTopics(System.String)">
      <summary>指定されたフィルターを使用して、サービス名前空間内のトピックのコレクションを取得します。エンティティ名 (開始名を含む)、エンティティの長さ (Gt または Lt)、作成、更新、およびアクセス時間 (Gt または Lt) の組み合わせでフィルター処理できます。</summary>
      <returns>現在の名前空間でトピックのコレクションを表すか、トピックがない場合は空のコレクションを返す <see cref="T:System.Collections.Generic.IEnumerable`1" /> オブジェクト。</returns>
      <param name="filter">取得するトピックをフィルター処理するために使用される文字列。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetTopicsAsync">
      <summary>サービス名前空間内のトピックのコレクションを非同期的に取得します。</summary>
      <returns>非同期操作。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetTopicsAsync(System.String)">
      <summary>サービス名前空間内のトピックのコレクションを非同期的に取得します。</summary>
      <returns>非同期操作。</returns>
      <param name="filter">取得するトピックをフィルター処理するために使用される文字列。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetVersionInfo">
      <summary>サーバーまたはサービスが処理でき、サポートされている最大プロトコル バージョンを示す形式 &quot;YYYY-MM&quot; の文字列を取得します。</summary>
      <returns>サーバーまたはサービスが処理でき、サポートされている最大プロトコル バージョンを示す文字列。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetVersionInfoAsync">
      <summary>サーバーまたはサービスが処理でき、サポートされている最大プロトコル バージョンを示す形式 &quot;YYYY-MM&quot; の文字列を非同期的に取得します。</summary>
      <returns>非同期操作。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.NotificationHubExists(System.String)">
      <summary>サービス名前空間で指定された <paramref name="path" /> で通知ハブがあるかどうかを指定します。</summary>
      <returns>サービス名前空間で指定された <paramref name="path" /> で通知ハブがある場合は true、それ以外の場合は false です。</returns>
      <param name="path">通知ハブへのパス。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.NotificationHubExistsAsync(System.String)">
      <summary>サービス名前空間で指定された <paramref name="path" /> で通知ハブがあるかどうかを非同期的に決定します。</summary>
      <returns>非同期操作。</returns>
      <param name="path">通知ハブへのパス。</param>
    </member>
    <member name="F:Microsoft.ServiceBus.NamespaceManager.ProtocolVersion">
      <summary>クライアントのプロトコル バージョンを示す形式 &quot;YYYY-MM&quot; の文字列を指定します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.QueueExists(System.String)">
      <summary>サービス名前空間にキューがあるかどうかを判定します。</summary>
      <returns>サービス名前空間にキューが存在する場合は true、それ以外の場合は false です。</returns>
      <param name="path">サービス名前空間のベース アドレスに対するキューのパス。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.QueueExistsAsync(System.String)">
      <summary>サービス名前空間にキューがあるかどうかを非同期的に判定します。</summary>
      <returns>非同期操作。</returns>
      <param name="path">サービス名前空間のベース アドレスに対するキューのパス。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.RelayExistsAsync(System.String)">
      <summary>サービス名前空間にリレーがあるかどうかを非同期的に判定します。</summary>
      <returns>非同期操作。</returns>
      <param name="path">サービス名前空間ベース アドレスに対するリレーのパス。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.NamespaceManager.Settings">
      <summary>サービス名前空間クライアント設定を取得します。</summary>
      <returns>サービス名前空間クライアント設定を表す <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> オブジェクト。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.SubscriptionExists(System.String,System.String)">
      <summary>サブスクリプションがサービス名前空間に存在するかどうかを判定します。</summary>
      <returns>サービス名前空間にサブスクリプションが存在する場合は true、それ以外の場合は false です。</returns>
      <param name="topicPath">サービス名前空間ベース アドレスに対するトピックのパス。</param>
      <param name="name">サブスクリプションの名前。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.SubscriptionExistsAsync(System.String,System.String)">
      <summary>サービス名前空間にサブスクリプションがあるかどうかを非同期的に判定します。</summary>
      <returns>非同期操作。</returns>
      <param name="topicPath">サービス名前空間ベース アドレスに対するトピックのパス。</param>
      <param name="name">サブスクリプションの名前。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.TopicExists(System.String)">
      <summary>サービス名前空間にトピックがあるかどうかを判定します。</summary>
      <returns>サービス名前空間にトピックがある場合は true、それ以外の場合は false です。</returns>
      <param name="path">サービス名前空間ベース アドレスに対するトピックのパス。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.TopicExistsAsync(System.String)">
      <summary>トピックがサービス名前空間にあるかどうかを非同期的に判定します。</summary>
      <returns>非同期操作。</returns>
      <param name="path">サービス名前空間ベース アドレスに対するトピックのパス。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.UpdateNotificationHub(Microsoft.ServiceBus.Notifications.NotificationHubDescription)">
      <summary><paramref name="description" /> パラメーターで指定されたパスで既存の通知ハブを更新します。すべての通知ハブ プロパティは、 <paramref name="description" /> パラメーターで指定されたプロパティで上書きされます。</summary>
      <returns>更新された通知ハブの説明を含む <see cref="T:Microsoft.ServiceBus.Notifications.NotificationHubDescription" /> オブジェクト。</returns>
      <param name="description">通知ハブが更新される属性を記述する説明オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.UpdateNotificationHubAsync(Microsoft.ServiceBus.Notifications.NotificationHubDescription)">
      <summary><paramref name="description" /> パラメーターで指定されたパスで既存の通知ハブを非同期的に更新します。すべての通知ハブ プロパティは、 <paramref name="description" /> パラメーターで指定されたプロパティで上書きされます。</summary>
      <returns>更新された通知ハブの説明を含む <see cref="T:Microsoft.ServiceBus.Notifications.NotificationHubDescription" /> オブジェクト。</returns>
      <param name="description">通知ハブが更新される属性を記述する説明オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.UpdateQueue(Microsoft.ServiceBus.Messaging.QueueDescription)">
      <summary>キューを更新できるようにします。</summary>
      <returns>更新されたキューの <see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" />。</returns>
      <param name="description">更新するキューを説明する <see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" /> オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.UpdateQueueAsync(Microsoft.ServiceBus.Messaging.QueueDescription)">
      <summary>非同期的にキューを更新できます。</summary>
      <returns>非同期操作。</returns>
      <param name="description">更新するキューを説明する <see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" /> オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.UpdateRelayAsync(Microsoft.ServiceBus.Messaging.RelayDescription)">
      <summary>非同期的にリレーを更新できるようにします。</summary>
      <returns>非同期操作。</returns>
      <param name="description">更新するリレーを説明する <see cref="T:Microsoft.ServiceBus.Messaging.RelayDescription" /> オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.UpdateSubscription(Microsoft.ServiceBus.Messaging.SubscriptionDescription)">
      <summary>サブスクリプションを更新できるようにします。</summary>
      <returns>更新されたサブスクリプションの <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" />。</returns>
      <param name="description">更新するサブスクリプションを説明する <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.UpdateSubscriptionAsync(Microsoft.ServiceBus.Messaging.SubscriptionDescription)">
      <summary>非同期的にサブスクリプションを更新できます。</summary>
      <returns>非同期操作。</returns>
      <param name="description">更新するサブスクリプションを説明する <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.UpdateTopic(Microsoft.ServiceBus.Messaging.TopicDescription)">
      <summary>トピックを更新できるようにします。</summary>
      <returns>更新されたトピックの <see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription" />。</returns>
      <param name="description">更新するトピックを説明する <see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription" /> オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.UpdateTopicAsync(Microsoft.ServiceBus.Messaging.TopicDescription)">
      <summary>トピックを非同期的に更新できるようにします。</summary>
      <returns>非同期操作。</returns>
      <param name="description">更新するトピックを説明する <see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription" /> オブジェクト。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.NamespaceManagerSettings">
      <summary>名前空間マネージャーの設定が含まれています。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManagerSettings.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout">
      <summary>GetQueue、CreateQueue など、すべてのサービス名前空間管理操作の操作タイムアウト期間を取得または設定します。</summary>
      <returns>タイムアウト期間を表す <see cref="T:System.TimeSpan" /> オブジェクト。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NamespaceManagerSettings.RetryPolicy">
      <summary>名前空間マネージャーに関連付けられた信頼性の低いアクションと一時的な条件に対する再試行メカニズムの基本的な実装を取得または設定します。</summary>
      <returns>名前空間マネージャーに関連付けられた信頼性の低いアクションと一時的な条件に対する再試行メカニズムの基本的な実装。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NamespaceManagerSettings.TokenProvider">
      <summary>セキュリティ トークン プロバイダーを取得または設定します。</summary>
      <returns>セキュリティ トークン プロバイダー。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.NetEventRelayBinding">
      <summary>一方通行のイベント マルチキャストをサポートし、任意の数のイベントパブリッシャーとイベント コンシューマーが同じエンドポイントでランデブーできるようにするバインディングを表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.NetEventRelayBinding.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.NetEventRelayBinding" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.NetEventRelayBinding.#ctor(Microsoft.ServiceBus.EndToEndSecurityMode,Microsoft.ServiceBus.RelayEventSubscriberAuthenticationType)">
      <summary>指定されたセキュリティ モードとリレー クライアント認証タイプを使用して、<see cref="T:Microsoft.ServiceBus.NetEventRelayBinding" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="securityMode">SOAP メッセージを使用してクライアントのために使用されるセキュリティのタイプ。</param>
      <param name="relayClientAuthenticationType">クライアントが使用する認証のタイプ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetEventRelayBinding.#ctor(Microsoft.ServiceBus.RelayedOnewayTransportBindingElement,System.ServiceModel.Channels.BinaryMessageEncodingBindingElement,Microsoft.ServiceBus.NetOnewayRelaySecurity)">
      <summary>指定されたトランスポート、エンコード、およびセキュリティ要素を使用して、<see cref="T:Microsoft.ServiceBus.NetEventRelayBinding" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="transport">使用するトランスポート。</param>
      <param name="encoding">使用するエンコード。</param>
      <param name="security">SOAP メッセージを使用してクライアントのために使用されるセキュリティのタイプ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetEventRelayBinding.#ctor(System.String)">
      <summary>指定された構成を使用して、<see cref="T:Microsoft.ServiceBus.NetEventRelayBinding" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="configurationName">使用する構成の名前。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetEventRelayBinding.ApplyConfiguration(System.String)">
      <summary>指定された名前に対応する構成要素の設定を、このバインディング要素の現在のインスタンスに適用します。</summary>
      <param name="configurationName">設定を取得する構成要素の名前。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetEventRelayBinding.IsBindingElementsMatch(Microsoft.ServiceBus.RelayedOnewayTransportBindingElement,System.ServiceModel.Channels.BinaryMessageEncodingBindingElement,System.ServiceModel.Channels.ReliableSessionBindingElement)">
      <summary>指定されたバインディング要素が現在のインスタンスと一致するかどうかを判定する値を取得します。</summary>
      <returns>バインディングが一致する場合は true、それ以外の場合は false を返します。</returns>
      <param name="transport">現在のインスタンスに対してチェックするトランスポート。</param>
      <param name="encoding">現在のインスタンスに対してチェックするエンコード。</param>
      <param name="session">現在のインスタンスに対してチェックするセッション。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.NetOnewayRelayBinding">
      <summary>クラウドを介した安全な一方通行接続のバインディングを表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.NetOnewayRelayBinding.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.NetOnewayRelayBinding" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.NetOnewayRelayBinding.#ctor(Microsoft.ServiceBus.EndToEndSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType)">
      <summary>指定されたセキュリティ モードと認証タイプを使用して、<see cref="T:Microsoft.ServiceBus.NetOnewayRelayBinding" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="securityMode">セキュリティ モード。</param>
      <param name="relayClientAuthenticationType">認証タイプ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetOnewayRelayBinding.#ctor(Microsoft.ServiceBus.NetOnewayRelaySecurity)">
      <summary>指定されたセキュリティ設定を使用して、<see cref="T:Microsoft.ServiceBus.NetOnewayRelayBinding" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="security">セキュリティ設定。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetOnewayRelayBinding.#ctor(Microsoft.ServiceBus.RelayedOnewayConnectionMode,Microsoft.ServiceBus.EndToEndSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType)">
      <summary>指定された接続モードとセキュリティ モード、および認証タイプを使用して、<see cref="T:Microsoft.ServiceBus.NetOnewayRelayBinding" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="connectionMode">接続モード。</param>
      <param name="securityMode">SOAP メッセージを使用してクライアントのために使用されるセキュリティのタイプ。</param>
      <param name="relayClientAuthenticationType">クライアントが使用する認証のタイプ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetOnewayRelayBinding.#ctor(Microsoft.ServiceBus.RelayedOnewayTransportBindingElement,System.ServiceModel.Channels.BinaryMessageEncodingBindingElement,Microsoft.ServiceBus.NetOnewayRelaySecurity)">
      <summary>指定されたトランスポート、エンコード、およびセキュリティを使用して、<see cref="T:Microsoft.ServiceBus.NetOnewayRelayBinding" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="transport">コア トランスポート設定を含むトランスポート要素 。</param>
      <param name="encoding">エンコード要素。</param>
      <param name="security">セキュリティ設定。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetOnewayRelayBinding.#ctor(System.String)">
      <summary>指定された構成を使用して、<see cref="T:Microsoft.ServiceBus.NetOnewayRelayBinding" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="configurationName">使用する構成の名前。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetOnewayRelayBinding.ApplyConfiguration(System.String)">
      <summary>指定された名前に対応する構成要素の設定を、このバインディング要素の現在のインスタンスに適用します。</summary>
      <param name="configurationName">設定を取得する構成要素の名前。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetOnewayRelayBinding.CreateBindingElements">
      <summary>一連のバインド要素を作成します。</summary>
      <returns>バインディング要素を含む <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> を返します。</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.NetOnewayRelayBinding.encoding">
      <summary>バインディングのエンコードを表します。セキュリティ設定およびトランスポートのタイプに加えて、エンコードはバインディングの 3 つのコア プロパティを表します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.NetOnewayRelayBinding.EnvelopeVersion">
      <summary>このバインディングで処理されるメッセージに使われる SOAP のバージョンを取得します。</summary>
      <returns>エンベロープ バージョンを含む <see cref="T:System.ServiceModel.EnvelopeVersion" /> を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetOnewayRelayBinding.ListenBacklog">
      <summary>保留できるキュー接続要求の最大数を取得または設定します。</summary>
      <returns>保留できるキュー接続要求の最大数を返します。既定値は 10 です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetOnewayRelayBinding.MaxBufferPoolSize">
      <summary>バインディングによって処理されたメッセージを格納するバッファー プールに許可される最大サイズを取得または設定します。</summary>
      <returns>バインディングによって処理されたメッセージを格納するバッファー プールに対して許可される最大サイズを返します。既定値は 65,536 バイトです。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetOnewayRelayBinding.MaxBufferSize">
      <summary>メッセージをメモリに格納するために使用されるバッファーの最大サイズをバイトで指定する値を取得または設定します。</summary>
      <returns>メッセージをメモリに格納するために使用されるバッファーの最大サイズをバイト数で返します。既定値は 65,536 バイトです。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetOnewayRelayBinding.MaxConnections">
      <summary>クライアントで後続の再利用のためにプールされる接続の最大数と、サーバー上でのディスパッチを保留中にできる接続の最大数を制御する値を取得または設定します。</summary>
      <returns>クライアントでは、後続の再利用のためにプールされる接続の最大数を返します。サーバーでは、ディスパッチを保留中にできる接続の最大数を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetOnewayRelayBinding.MaxReceivedMessageSize">
      <summary>バインディングによって処理される受信メッセージの最大サイズを取得または設定します。</summary>
      <returns>バインディングによって処理される受信メッセージの最大サイズをバイト数で返します。既定値は 65,536 バイトです。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetOnewayRelayBinding.MessageSecurityVersion">
      <summary>メッセージ セキュリティ バージョンを取得します。</summary>
      <returns>メッセージ セキュリティ バージョンを含む <see cref="T:System.ServiceModel.MessageSecurityVersion" /> を返します。これは現在、MessageSecurityVersion..::.WSSecurity11WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11 を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetOnewayRelayBinding.ReaderQuotas">
      <summary>このバインディングで構成されたエンドポイントで処理できる SOAP メッセージの複雑さに対する制約を取得または設定します。</summary>
      <returns>交換される SOAP メッセージの複雑さの制約を指定する <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> インスタンスを返します。これらの制約の既定値は、次の「備考」セクションで提供されます。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetOnewayRelayBinding.Scheme">
      <summary>トランスポートの URI スキームを取得します。</summary>
      <returns>トランスポートの URI スキームを返します。既定値は &quot;sb&quot; で、Windows Azure Service Bus を示します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetOnewayRelayBinding.Security">
      <summary>このバインディングで構成されたサービスで使用されるセキュリティのタイプを指定するオブジェクトを取得します。</summary>
      <returns>このバインディングで使用されるセキュリティのタイプを含む <see cref="T:Microsoft.ServiceBus.NetOnewayRelaySecurity" /> インスタンスを返します。このタイプには、メッセージ セキュリティ、エンド ツー エンド のセキュリティ モード、リレー クライアント認証タイプ、およびトランスポート セキュリティ設定が含まれます。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetOnewayRelayBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
      <summary>着信要求をより効率的に同期的または非同期的に処理できるかを示す値を取得します。</summary>
      <returns>要求をより効率的に同期的に処理できる場合は true、それ以外の場合は false を返します。要求を非同期的に処理するため、既定は false です。</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.NetOnewayRelayBinding.transport">
      <summary>バインディングのトランスポート タイプを指定します。エンコードとセキュリティの設定に加えて、トランスポートのタイプはバインディングの 3 つのコア プロパティを表します。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.NetOnewayRelaySecurity">
      <summary><see cref="T:Microsoft.ServiceBus.NetOnewayRelayBinding" /> バインディングのセキュリティ設定のコレクション。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.NetOnewayRelaySecurity.Message">
      <summary><see cref="T:Microsoft.ServiceBus.NetOnewayRelayBinding" /> で構成されたサービスのメッセージ レベルのセキュリティ要件のタイプを取得します。</summary>
      <returns>エンドポイントのメッセージ レベルのセキュリティ要件のタイプを示す <see cref="T:Microsoft.ServiceBus.MessageSecurityOverRelayOneway" /> を返します。既定の AlgorithmSuite は Basic256 で、既定の ClientCredentialType は Windows です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetOnewayRelaySecurity.Mode">
      <summary>メッセージ レベルとトランスポート レベルのセキュリティを <see cref="T:Microsoft.ServiceBus.NetOnewayRelayBinding" /> で構成されたエンドポイントで使用するかどうかを取得または設定 します。</summary>
      <returns>メッセージ レベルまたはトランスポート レベルのセキュリティがエンドポイントで使用されているかどうかを示す <see cref="T:Microsoft.ServiceBus.EndToEndSecurityMode" /> を返します。既定値は Transport です。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">セキュリティ モードの値が無効です。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.NetOnewayRelaySecurity.RelayClientAuthenticationType">
      <summary>リレー クライアントの認証タイプを取得または設定します。</summary>
      <returns>認証タイプを含む <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" /> を返します。既定値は <see cref="F:Microsoft.ServiceBus.RelayClientAuthenticationType.RelayAccessToken" /> です。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">値は、有効な <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" /> フィールドではありません。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.NetOnewayRelaySecurity.Transport">
      <summary><see cref="T:Microsoft.ServiceBus.NetOnewayRelayBinding" /> で構成されたエンドポイントのトランスポート レベルのセキュリティ要件のタイプを取得 します。既定値は EncryptAndSign です。</summary>
      <returns>エンドポイントのトランスポート レベルのセキュリティ要件のタイプを示す <see cref="T:Microsoft.ServiceBus.OnewayRelayTransportSecurity" /> を返します。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.NetTcpRelayBinding">
      <summary>コンピュータ間通信に適した、安全で信頼性の高いバインディングを提供します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBinding.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBinding.#ctor(Microsoft.ServiceBus.EndToEndSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType)">
      <summary>使用されるセキュリティのタイプとリレー クライアント認証が指定された <see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="securityMode">バインディングで使用されるセキュリティのタイプ。</param>
      <param name="relayClientAuthenticationType">リレーで使用されるクライアント認証のタイプ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBinding.#ctor(Microsoft.ServiceBus.EndToEndSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType,System.Boolean)">
      <summary>使用されるセキュリティのタイプ、クライアント認証のタイプ、および信頼できるセッションが明示的に有効になっているかどうかを示す値を使用して、<see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="securityMode">Windows Azure Service Bus バインディングで使用されるセキュリティのタイプ。</param>
      <param name="relayClientAuthenticationType">リレーで使用されるクライアント認証のタイプ。</param>
      <param name="reliableSessionEnabled">信頼性の高いセッションが有効になっている場合は true、それ以外の場合は false です。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBinding.#ctor(Microsoft.ServiceBus.TcpRelayTransportBindingElement,System.ServiceModel.Channels.BinaryMessageEncodingBindingElement,System.ServiceModel.Channels.ReliableSessionBindingElement,Microsoft.ServiceBus.NetTcpRelaySecurity)">
      <summary>指定されたトランスポート、エンコード、セッション情報、およびセキュリティ設定を使用して、<see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="transport">トランスポート。</param>
      <param name="encoding">使用するエンコード。</param>
      <param name="session">セッション。</param>
      <param name="security">セキュリティ設定。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBinding.#ctor(System.String)">
      <summary>指定された XML 構成を使用して、<see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="configurationName">使用する構成。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBinding.ApplyConfiguration(System.String)">
      <summary>指定された名前に対応する構成要素の設定を、このバインディング要素の現在のインスタンスに適用します。</summary>
      <param name="configurationName">設定を取得する構成要素の名前。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBinding.CreateBindingElements">
      <summary>バインディングのバインディング要素を含むコレクションを作成します。</summary>
      <returns>バインディング要素の順序付きスタックを含む <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> を返します。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBinding.CreateMessageSecurity">
      <summary>現在のインスタンスのメッセージ セキュリティ トークンを作成します。</summary>
      <returns><see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> を返します。メッセージ セキュリティ トークンが含まれます。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBinding.IsBindingElementsMatch(Microsoft.ServiceBus.TcpRelayTransportBindingElement,System.ServiceModel.Channels.BinaryMessageEncodingBindingElement,System.ServiceModel.Channels.ReliableSessionBindingElement)">
      <summary>指定されたオブジェクトに一致するバインディング要素があるかどうかを判定する値を返します。</summary>
      <returns>オブジェクトが一致する場合は <see cref="T:System.Boolean" />.true を返します。</returns>
      <param name="transport">一致するトランスポート。</param>
      <param name="encoding">一致するエンコード。</param>
      <param name="session">一致するセッション。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelayBinding.ReliableSession">
      <summary>Windows Azure Service Bus チャネルのエンドポイント間で信頼性の高いセッションが確立されているかどうかを示すオブジェクトを取得します。</summary>
      <returns><see cref="T:System.ServiceModel.OptionalReliableSession" /> を返します。チャネル エンドポイント間で WS-RM の信頼性の高いセッションが確立されるかどうかを示します。既定値は false です。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.NetTcpRelayBindingBase">
      <summary><see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" /> バインディングの一般的なメソッドの基本クラス。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBindingBase.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.NetTcpRelayBindingBase" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBindingBase.#ctor(Microsoft.ServiceBus.EndToEndSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType)">
      <summary>指定されたセキュリティ モードとリレー認証タイプを使用して、<see cref="T:Microsoft.ServiceBus.NetTcpRelayBindingBase" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="securityMode">バインディングで使用されるセキュリティのタイプ。</param>
      <param name="relayClientAuthenticationType">使用されるリレー認証のタイプ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBindingBase.#ctor(Microsoft.ServiceBus.TcpRelayTransportBindingElement,System.ServiceModel.Channels.BinaryMessageEncodingBindingElement,Microsoft.ServiceBus.NetTcpRelaySecurity)">
      <summary>指定されたトランスポート、エンコード、およびセキュリティを使用して、<see cref="T:Microsoft.ServiceBus.NetTcpRelayBindingBase" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="transport">トランスポート。</param>
      <param name="encoding">エンコード。</param>
      <param name="security">セキュリティ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBindingBase.#ctor(System.String)">
      <summary>指定された構成名を使用して、<see cref="T:Microsoft.ServiceBus.NetTcpRelayBindingBase" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="configurationName">バインディング構成名。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBindingBase.ApplyConfiguration(System.String)">
      <summary>指定された名前に対応する構成要素の設定を、このバインディング要素の現在のインスタンスに適用します。</summary>
      <param name="configurationName">設定を取得する構成要素の名前。</param>
      <exception cref="ConfigurationErrorsException">構成内の入力構成名で指定されたバインディング要素が見つかりませんでした。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.ConnectionMode">
      <summary>接続モードを取得または設定します。 <see cref="F:Microsoft.ServiceBus.TcpRelayConnectionMode.Hybrid" /> または <see cref="F:Microsoft.ServiceBus.TcpRelayConnectionMode.Relayed" /> のいずれかになります。</summary>
      <returns>接続モードを含む <see cref="T:Microsoft.ServiceBus.TcpRelayConnectionMode" />  を返します。<see cref="F:Microsoft.ServiceBus.TcpRelayConnectionMode.Hybrid" /> または <see cref="F:Microsoft.ServiceBus.TcpRelayConnectionMode.Relayed" /> のいずれかになります。既定は Relayed です。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBindingBase.CreateBindingElements">
      <summary>現在のバインディングに含まれるバインディング要素の順序付きコレクションを取得します。</summary>
      <returns>バインディングを構成する <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> を返します。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBindingBase.CreateMessageSecurity">
      <summary>現在のインスタンスのセキュリティ バインディング要素を作成します。</summary>
      <returns>セキュリティ バインディング要素を含む <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> を返します。</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.NetTcpRelayBindingBase.encoding">
      <summary>現在のインスタンスのエンコード要素。セキュリティとトランスポートの設定に加えて、エンコードはバインディングの 3 つのコア プロパティを形成します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.EnvelopeVersion">
      <summary>このバインディングで処理されるメッセージに使われる SOAP のバージョンを取得します。</summary>
      <returns>このバインディングに使用されるエンベロープ バージョンを含む <see cref="T:System.ServiceModel.EnvelopeVersion" /> を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.HostNameComparisonMode">
      <summary>ホスト名で使用される比較モードを取得または設定します。</summary>
      <returns>ホスト名で使用される比較モード。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBindingBase.IsBindingElementsMatch(Microsoft.ServiceBus.TcpRelayTransportBindingElement,System.ServiceModel.Channels.BinaryMessageEncodingBindingElement)">
      <summary>指定されたバインディング要素が、現在のインスタンスでバインディング要素の既定値と一致するかどうかを判定します。</summary>
      <returns>要素が一致する場合は true、それ以外の場合は false です。</returns>
      <param name="transport">トランスポート バインディング要素。</param>
      <param name="encoding">エンコード バインディング要素。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.IsDynamic">
      <summary>リレー バインディングが動的であるかどうかを取得または設定します。</summary>
      <returns>リレー バインディングが動的な場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.ListenBacklog">
      <summary>保留できるキュー接続要求の最大数を取得または設定します。</summary>
      <returns>保留できるキュー接続要求の最大数を返します。既定値は 10 です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.MaxBufferPoolSize">
      <summary>バインディングによって処理されたメッセージを格納するバッファー プールに許可される最大サイズを取得または設定します。</summary>
      <returns>バインディングによって処理されたメッセージを格納するバッファー プールに許可される最大サイズをバイト数で返します。既定値は 65,536 です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.MaxBufferSize">
      <summary>メッセージをメモリに格納するために使用されるバッファーの最大サイズを指定する値を取得または設定します。</summary>
      <returns>メッセージをメモリに格納するために使用されるバッファーの最大サイズをバイト数で返します。既定値は 65,536 です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.MaxConnections">
      <summary>クライアントで後続の再利用のためにプールされる接続の最大数と、サーバー上でのディスパッチを保留中にできる接続の最大数を制御する値を取得または設定します。</summary>
      <returns>クライアントでは、後続の再利用のためにプールされる接続の最大数を返します。サーバーでは、ディスパッチを保留中にできる接続の最大数を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.MaxReceivedMessageSize">
      <summary>バインディングによって処理される受信メッセージの最大サイズを取得または設定します。</summary>
      <returns>バインディングによって処理される受信メッセージの最大サイズをバイト数で返します。既定値は 65,536 です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.MessageSecurityVersion">
      <summary>メッセージ セキュリティ バージョンを取得します。</summary>
      <returns>メッセージ セキュリティ バージョンを含む <see cref="T:System.ServiceModel.MessageSecurityVersion" /> を返します。これは現在、常に MessageSecurityVersion..::.WSSecurity11WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11 を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.ReaderQuotas">
      <summary>このバインディングで構成されたエンドポイントで処理できる SOAP メッセージの複雑さに対する制約を取得または設定します。このプロパティを null にすることはできません。</summary>
      <returns>交換される SOAP メッセージの複雑さの制約を指定する <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> を返します。これらの制約の既定値は、次の「備考」セクションで提供されます。</returns>
      <exception cref="ArgumentNullException"><paramref name="ReaderQuotas" /> は null です。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.Scheme">
      <summary>トランスポートの URI スキームを取得します。</summary>
      <returns>トランスポートの URI スキームを返します。既定は &quot;sb&quot; です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.Security">
      <summary>このバインディングで構成されたサービスで使用されるセキュリティのタイプを指定するオブジェクトを取得します。</summary>
      <returns>このバインディングで使用されるセキュリティのタイプを含む <see cref="T:Microsoft.ServiceBus.NetTcpRelaySecurity" /> を返します。既定のセキュリティ モードはトランスポートです。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
      <summary>着信要求が同期的に処理されるか、非同期に処理されるかを示す値を取得します。</summary>
      <returns>要求が同期的に処理される場合は true、非同期的に処理される場合は false です。要求を非同期的に処理するため、既定は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.TransferMode">
      <summary>バインディングで構成されたサービスがメッセージ転送のストリーム モードまたはバッファーリング モード (またはその両方) を使用するかどうかを示す値を取得または設定します。</summary>
      <returns>バインディングで構成されたサービスがメッセージ転送のストリームモードまたはバッファーリングモード (またはその両方) を使用するかどうかを示す <see cref="T:System.ServiceModel.TransferMode" /> を返します。既定で、HTTP、TCP/IP、および名前付きパイプ トランスポートは、バッファー付きメッセージ転送を使用します。</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.NetTcpRelayBindingBase.transport">
      <summary>現在のインスタンスのトランスポート要素。エンコードとセキュリティに加えて、トランスポート設定がバインディングのコア プロパティを形成します。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.NetTcpRelaySecurity">
      <summary><see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" /> で構成されたエンドポイントで使用されるトランスポート レベルおよびメッセージ レベルのセキュリティのタイプを指定します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelaySecurity.Message">
      <summary><see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" /> で構成されたサービスのメッセージ レベルのセキュリティ要件のタイプを取得します。</summary>
      <returns>エンドポイントのメッセージ レベルのセキュリティ要件のタイプを示す <see cref="T:Microsoft.ServiceBus.MessageSecurityOverRelayConnection" /> を返します。既定のセキュリティ設定: UserName は ClientCredentialType、Basic256 は AlgorithmSuite。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelaySecurity.Mode">
      <summary>メッセージ レベルとトランスポート レベルのセキュリティを <see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" /> で構成されたエンドポイントで使用するかどうかを取得または設定 します。</summary>
      <returns>メッセージ レベルまたはトランスポート レベルのセキュリティがエンドポイントで使用されているかどうかを示す  <see cref="T:Microsoft.ServiceBus.EndToEndSecurityMode" /> を返します。既定値は Transport です。</returns>
      <exception cref="ArgumentOutOfRangeException">値は、有効な <see cref="T:Microsoft.ServiceBus.EndToEndSecurityMode" /> フィールドではありません。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelaySecurity.RelayClientAuthenticationType">
      <summary>リレー クライアント認証タイプを取得または設定します。</summary>
      <returns>リレー クライアント認証タイプを含む <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" /> を返します。</returns>
      <exception cref="ArgumentOutOfRangeException">値は、有効な <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" /> フィールドではありません。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelaySecurity.Transport">
      <summary><see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" /> で構成されたエンドポイントのメッセージ レベルのセキュリティ要件のタイプを取得します。</summary>
      <returns>エンドポイントのトランスポート レベルのセキュリティ要件のタイプを示す <see cref="T:Microsoft.ServiceBus.TcpRelayTransportSecurity" /> を返します。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.NonDualMessageSecurityOverRelayHttp">
      <summary>WS-Http リレー バインディングのメッセージ レベルのセキュリティ プロパティの設定を有効にします。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.NonDualMessageSecurityOverRelayHttp.EstablishSecurityContext">
      <summary>セキュリティ コンテキスト トークンが確立されているかどうかを指定する値を取得または設定します。</summary>
      <returns>セキュリティ コンテキスト トークンが確立されている場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.NoRetry">
      <summary>再試行を実行しない再試行ポリシーを表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.NoRetry.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.NoRetry" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.NoRetry.Clone">
      <summary>このインスタンスのコピーを作成します。</summary>
      <returns>このインスタンスの作成済みコピー。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.OAuthTokenProvider">
      <summary>サービス バスの認証トークンを提供します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.OAuthTokenProvider.BuildKey(System.String,System.String)">
      <summary>プロバイダーのキーを構築します。</summary>
      <returns>キー。</returns>
      <param name="appliesTo">キーが適用されるプロバイダー。</param>
      <param name="action">アクション。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.OAuthTokenProvider.NormalizeAppliesTo(System.String)">
      <summary>トークン プロバイダーに正規化を適用します。</summary>
      <returns>正規化されたトークン プロバイダー。</returns>
      <param name="appliesTo">正規化が適用されるトークン プロバイダー。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.OAuthTokenProvider.OnBeginGetToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>プロバイダーの開始時にトークンを取得します。</summary>
      <returns>操作の非同期結果。</returns>
      <param name="appliesTo">トークンが適用されるプロバイダー。</param>
      <param name="action">アクション。</param>
      <param name="timeout">期間。</param>
      <param name="callback">コールバック。</param>
      <param name="state">操作の状態。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.OAuthTokenProvider.OnBeginGetWebToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>プロバイダーの開始時に Web トークンを取得します。</summary>
      <returns>操作の非同期結果。</returns>
      <param name="appliesTo">Web トークンが適用されるプロバイダー。</param>
      <param name="action">アクション。</param>
      <param name="timeout">期間。</param>
      <param name="callback">コールバック。</param>
      <param name="state">操作の状態。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.OAuthTokenProvider.OnEndGetToken(System.IAsyncResult,System.DateTime@)">
      <summary>プロバイダーの終了時にトークンを取得します。</summary>
      <returns>取得したトークン。</returns>
      <param name="result">操作の結果。</param>
      <param name="cacheUntil">プロバイダーがデータを格納する期間。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.OAuthTokenProvider.OnEndGetWebToken(System.IAsyncResult,System.DateTime@)">
      <summary>プロバイダーの終了時に Web トークンを取得します。</summary>
      <returns>取得したトークン。</returns>
      <param name="result">操作の結果。</param>
      <param name="cacheUntil">プロバイダーがデータを格納する期間。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.RelayClientAuthenticationType">
      <summary>サービスのクライアントが、メッセージの送信時に Windows Azure Access Control の発行したセキュリティ トークンを Windows Azure Service Bus に提示する必要があるかどうかを説明します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.RelayClientAuthenticationType.None">
      <summary>リスナーによって指定されている場合、クライアントはセキュリティ トークンを提供する必要はありません。これは、リスナーがエンドポイントで Windows Azure Access Control の保護を免除できるオプトアウト メカニズムを示しています。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.RelayClientAuthenticationType.RelayAccessToken">
      <summary>リスナーによって指定されている場合、クライアントはセキュリティ トークンを提供する必要があります。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.RelayedOnewayConnectionMode">
      <summary>Windows Azure Access Control を通じて使用できるさまざまなタイプの一方通行接続を示しています。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.RelayedOnewayConnectionMode.Multicast">
      <summary>複数のサービス アプリケーションが特定のエンドポイントでリッスンすることを指定します。<see cref="T:Microsoft.ServiceBus.NetEventRelayBinding" /> によって使用されます。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.RelayedOnewayConnectionMode.Unicast">
      <summary>特定のエンドポイントでリッスンできるサービス アプリケーションを 1 つだけ指定します。<see cref="T:Microsoft.ServiceBus.NetOnewayRelayBinding" /> によって使用されます。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement">
      <summary>一方通行の通信に使用されるトランスポート バインディング要素を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.#ctor(Microsoft.ServiceBus.RelayClientAuthenticationType)">
      <summary>指定された認証タイプを使用して、<see cref="T:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="relayClientAuthenticationType">リレー クライアント認証タイプ。これは、 <see cref="F:Microsoft.ServiceBus.RelayClientAuthenticationType.RelayAccessToken" /> または <see cref="F:Microsoft.ServiceBus.RelayClientAuthenticationType.None" /> のいずれかにできます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.#ctor(Microsoft.ServiceBus.RelayClientAuthenticationType,Microsoft.ServiceBus.RelayedOnewayConnectionMode)">
      <summary>指定された認証タイプと接続モードを使用して、<see cref="T:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="relayClientAuthenticationType">リレー クライアント認証タイプ。これは、 <see cref="F:Microsoft.ServiceBus.RelayClientAuthenticationType.RelayAccessToken" /> または <see cref="F:Microsoft.ServiceBus.RelayClientAuthenticationType.None" /> のいずれかにできます。</param>
      <param name="connectionMode">接続モード。これは、 <see cref="F:Microsoft.ServiceBus.RelayedOnewayConnectionMode.Unicast" /> または <see cref="F:Microsoft.ServiceBus.RelayedOnewayConnectionMode.Multicast" /> のいずれかにできます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.#ctor(Microsoft.ServiceBus.RelayedOnewayTransportBindingElement)">
      <summary>指定された要素を使用して、<see cref="T:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="elementToClone">クローンする要素。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>指定されたタイプのチャネルを作成し、指定されたバインディング コンテキストから初期化されるチャネル ファクトリを作成します。</summary>
      <returns>指定されたタイプのチャネルを作成し、指定されたバインディング コンテキストから初期化されるチャネル ファクトリ。</returns>
      <param name="context">バインディング要素のコンテキストを提供するバインディング コンテキスト。</param>
      <typeparam name="TChannel">ファクトリが構築するチャネルのタイプ。</typeparam>
    </member>
    <member name="M:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>指定されたタイプのチャネルを受け入れ、指定されたバインディング コンテキストから初期化されるチャネル リスナーを作成します。</summary>
      <returns>指定されたタイプのチャネルを受け入れ、指定されたバインディング コンテキストから初期化されるチャネル リスナー。</returns>
      <param name="context">バインディング要素のコンテキストを提供するバインディング コンテキスト。</param>
      <typeparam name="TChannel">リスナーが受け入れるように構築されるチャネルのタイプ。</typeparam>
    </member>
    <member name="M:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>このバインディング要素が指定されたタイプのチャネル ファクトリを構築できるかどうかを示す値を返します。</summary>
      <returns>チャネル ファクトリを構築できる場合は true、それ以外の場合は false です。</returns>
      <param name="context">このバインディング要素のコンテキストを提供するバインディング コンテキスト。</param>
      <typeparam name="TChannel">チャネル ファクトリが構築されるチャネルのタイプ。</typeparam>
    </member>
    <member name="M:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>バインディング要素が指定されたタイプのチャネルのチャネル リスナーを構築できるかどうかを示す値を返します。</summary>
      <returns>指定されたタイプのチャネルに対してチャネル リスナーを構築できる場合は true、それ以外の場合は false です。</returns>
      <param name="context">このバインディング要素のコンテキストを提供するバインディング コンテキスト。</param>
      <typeparam name="TChannel">リスナーが受け入れるチャネルのタイプ。</typeparam>
    </member>
    <member name="P:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.ChannelInitializationTimeout">
      <summary>チャネルが切断される前に初期化状態にできる最大時間を取得または設定します。</summary>
      <returns>チャネルが切断される前に初期化状態にできる最大時間。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.Clone">
      <summary><see cref="T:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement" />バインディング要素のこのインスタンスのコピーを返します。</summary>
      <returns>このバインディング要素のディープ クローンを含むバインディング要素。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.ConnectionBufferSize">
      <summary>シリアル化されたメッセージの一部をクライアントまたはサービスから接続で送信するために使用されるバッファーのサイズを取得または設定します。</summary>
      <returns>シリアル化されたメッセージの一部をクライアントまたはサービスから接続して送信するために使用されるバッファーのサイズ。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.ConnectionMode">
      <summary>このバインディング要素で使用される接続モードを取得します。接続モードは、<see cref="T:Microsoft.ServiceBus.RelayedOnewayConnectionMode" /> リスト値の 1 つにすることができます。</summary>
      <returns>このバインディング要素で使用される接続モード。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.ConnectionPoolSettings">
      <summary>現在のインスタンスの接続プール設定を取得します。</summary>
      <returns>現在のインスタンスの接続プール設定。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>バインディング スタック内の適切なレイヤーから、要求されたタイプのオブジェクト (存在する場合) を返します。</summary>
      <returns>要求されたタイプのオブジェクト (該当する場合)。それ以外の場合は null を返します。</returns>
      <param name="context">このバインディング要素のコンテキストを提供するバインディング コンテキスト。</param>
      <typeparam name="T">取得するプロパティのタイプ。</typeparam>
    </member>
    <member name="P:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.ListenBacklog">
      <summary>保留できるキュー接続要求の最大数を取得または設定します。</summary>
      <returns>キューに入れられた接続の最大数。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.MaxBufferSize">
      <summary>このバインディングによって処理される受信メッセージを保持するバッファーの最大サイズ (バイト) を取得または設定します。</summary>
      <returns>このバインディングによって処理される受信メッセージを保持するバッファーの最大サイズ (バイト) 。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.MaxOutputDelay">
      <summary>メッセージまたはメッセージの一部が送信される前にメモリ内にバッファーリングされたままにできる最大時間間隔を取得または設定します。</summary>
      <returns>メッセージまたはメッセージの一部が送信される前にメモリ内にバッフーァリングされたままにできる最大時間間隔。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.MaxPendingAccepts">
      <summary>サービスの受信接続の処理に使用できる保留中の非同期受入スレッドの最大数を取得または設定します。</summary>
      <returns>サービスの着信接続の処理に使用できる保留中の非同期受諾スレッドの最大数。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.MaxPendingConnections">
      <summary>保留中の接続の最大数を取得または設定します。</summary>
      <returns>保留中の接続の最大数。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.RelayClientAuthenticationType">
      <summary>このバインディング要素で使用される Windows Azure Access Control 認証のタイプを取得または設定します。</summary>
      <returns>このバインディング要素で使用される認証のタイプを表す <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" /> を返します。既定値は <see cref="F:Microsoft.ServiceBus.RelayClientAuthenticationType.RelayAccessToken" /> です。 </returns>
    </member>
    <member name="P:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.Scheme">
      <summary>このバインディング要素で使用される URI スキームを取得します。</summary>
      <returns>このバインディング要素で使用される URI スキーム。返される値は &quot;sb&quot; です。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>エクスポート用のバインディングに関するカスタム ポリシー アサーションが含まれます。</summary>
      <param name="exporter">エクスポート プロセスの変更に使用できるメタデータ エクスポーター。</param>
      <param name="context">カスタム ポリシー アサーションを挿入するポリシー変換コンテキスト。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.RelayedOnewayTransportSecurity">
      <summary>一方通行バインディングのトランスポート セキュリティ設定を表します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.RelayedOnewayTransportSecurity.ProtectionLevel">
      <summary>トランスポート セキュリティ保護レベルを取得または設定します。</summary>
      <returns>トランスポート セキュリティ保護レベルを含む <see cref="T:System.Net.Security.ProtectionLevel" /> を返します。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.RelayEventSubscriberAuthenticationType">
      <summary><see cref="T:Microsoft.ServiceBus.NetEventRelayBinding" /> へのサブスクライバー が、メッセージの送信時に Windows Azure Access Control サービスによって発行されたセキュリティ トークンを Windows Azure Service Bus サービスに提示する必要があるかどうかを説明します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.RelayEventSubscriberAuthenticationType.None">
      <summary>NetEventRelay サブスクライバーによって指定されている場合、クライアントはリレー アクセス トークンを提供する必要はありません。これは、リスナーがエンドポイントで Windows Azure Access Control の保護を免除し、独自のアクセス制御を実行できるオプトアウト メカニズムを表します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.RelayEventSubscriberAuthenticationType.RelayAccessToken">
      <summary>NetEventRelay リスナーによって指定されている場合、クライアントはリレー アクセス トークンを提供する必要があります。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.RelayNotFoundException">
      <summary>ServiceBus リレーが見つからない場合にスローされる例外。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.RelayNotFoundException.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.RelayNotFoundException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.RelayNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary><see cref="T:Microsoft.ServiceBus.RelayNotFoundException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info">シリアル化情報。</param>
      <param name="context">ストリーミング コンテキスト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.RelayNotFoundException.#ctor(System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.RelayNotFoundException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">エラー メッセージ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.RelayNotFoundException.#ctor(System.String,System.Exception)">
      <summary><see cref="T:Microsoft.ServiceBus.RelayNotFoundException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">エラー メッセージ。</param>
      <param name="innerException">内部例外。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.RelayTransportProtectionMode">
      <summary>トランスポート リレーの保護のタイプについて説明します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.RelayTransportProtectionMode.EndToEnd">
      <summary>サービス アプリケーションとクライアント アプリケーションの両方にセキュリティが必要です。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.RelayTransportProtectionMode.ListenerOnly">
      <summary>サービス アプリケーションにはセキュリティが必要です。クライアント アプリケーションには必要ありません。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.RelayTransportProtectionMode.None">
      <summary>セキュリティは無効になっています。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.RelayType">
      <summary>リレー タイプのリストを指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.RelayType.Http">
      <summary>HTTP リレー。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.RelayType.NetEvent">
      <summary>NetEvent リレー。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.RelayType.NetOneway">
      <summary>NetOneway リレー。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.RelayType.NetTcp">
      <summary>NetTcp リレー。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.RelayType.None">
      <summary>リレーは None です。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.RetryExponential">
      <summary>ランダムな指数バックオフ スキームを使用して、再試行間の間隔を決定し、指定された回数の再試行を実行する再試行ポリシーを表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.RetryExponential.#ctor(System.TimeSpan,System.TimeSpan,System.TimeSpan,System.TimeSpan,System.Int32)">
      <summary><see cref="T:Microsoft.ServiceBus.RetryExponential" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="minBackoff">最小バックオフ間隔。</param>
      <param name="maxBackoff">最大バックオフ間隔。</param>
      <param name="deltaBackoff">再試行に関連付けられたバックオフ間隔。</param>
      <param name="terminationTimeBuffer">再試行に関連付けられた終了時間バッファー。</param>
      <param name="maxRetryCount">許可されている再試行の最大回数。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.RetryExponential.Clone">
      <summary>このインスタンスの新しいコピーを作成します。</summary>
      <returns>このインスタンスの新しい作成済みコピー。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.RetryExponential.DeltaBackoff">
      <summary>再試行に関連付けられたバックオフ間隔を取得または設定します。</summary>
      <returns>再試行に関連付けられたバックオフ間隔。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.RetryExponential.MaximumBackoff">
      <summary>最大バックオフ間隔を取得または設定します。</summary>
      <returns>最大バックオフ間隔。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.RetryExponential.MaxRetryCount">
      <summary>許可されている再試行の最大回数を取得または設定します。</summary>
      <returns>許可されている再試行の最大回数。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.RetryExponential.MinimalBackoff">
      <summary>最小バックオフ間隔を取得または設定します。</summary>
      <returns>最小バックオフ間隔。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.RetryExponential.TerminationTimeBuffer">
      <summary>再試行に関連付けられた終了時間バッファーを取得または設定します。</summary>
      <returns>再試行に関連付けられた終了時間バッファー。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.RetryPolicy">
      <summary>信頼性の低いアクションと一時的な条件に対する再試行メカニズムの基本実装を提供します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.RetryPolicy.Clone">
      <summary><see cref="T:Microsoft.ServiceBus.RetryPolicy" /> の新しいコピーを作成します。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.RetryPolicy" /> の新しいコピー。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.RetryPolicy.Default">
      <summary>ポリシーに関連付けられた既定のポリシーを取得します。</summary>
      <returns>ポリシーに関連付けられた既定のポリシー。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.RetryPolicy.IsRetryableException(System.Exception)">
      <summary>エラーが発生した後に再試行を許可するかどうかを指定します。</summary>
      <returns>例外の後に再試行が許可されている場合は true、それ以外の場合は false です。</returns>
      <param name="lastException">発生した最新の例外。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.RetryPolicy.NoRetry">
      <summary>再試行を実行しない再試行ポリシーを取得します。</summary>
      <returns>再試行を実行しない再試行ポリシー。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.RetryPolicy.OnShouldRetry(System.TimeSpan,System.Int32,System.TimeSpan@)">
      <summary>ポリシーで再試行を許可するかどうかを指定します。</summary>
      <returns>ポリシーで再試行が許可されている場合は true、それ以外の場合は false です。</returns>
      <param name="remainingTime">残り時間。</param>
      <param name="currentRetryCount">再試行の合計回数。</param>
      <param name="retryInterval">再試行間隔。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.SamlTokenProvider">
      <summary>非同期 SAML トークン取得操作を実行する一連のメソッドを提供します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.SamlTokenProvider.BuildKey(System.String,System.String)">
      <summary>トークン プロバイダーのキーを生成します。</summary>
      <returns>トークン プロバイダー向けに生成されたキー。</returns>
      <param name="appliesTo">アクセス トークンが適用される URI。</param>
      <param name="action">要求アクション。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SamlTokenProvider.OnBeginGetToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>トークン取得開始アクションを実行します。</summary>
      <returns>トークンを取得する非同期操作を参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="appliesTo">アクセス トークンが適用される URI。</param>
      <param name="action">要求アクション。</param>
      <param name="timeout">セキュリティ トークンを取得するメッセージのタイムアウト値を指定する期間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SamlTokenProvider.OnBeginGetWebToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Web トークン取得開始アクションを実行します。</summary>
      <returns>Web トークンを取得する非同期操作を参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="appliesTo">アクセス トークンが適用される URI。</param>
      <param name="action">要求アクション。</param>
      <param name="timeout">セキュリティ トークンを取得するメッセージのタイムアウト値を指定する期間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SamlTokenProvider.OnEndGetToken(System.IAsyncResult,System.DateTime@)">
      <summary>トークン取得終了アクションを実行します。</summary>
      <returns>セキュリティ トークン。</returns>
      <param name="result">トークンを取得する非同期操作を参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</param>
      <param name="cacheUntil">このメソッドが返されると、キャッシュ内のトークン情報の有効期限日時が含まれます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SamlTokenProvider.OnEndGetWebToken(System.IAsyncResult,System.DateTime@)">
      <summary>Web トークン取得終了アクションを実行します。</summary>
      <returns>Web トークン。</returns>
      <param name="result">Web トークンを取得する非同期操作を参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</param>
      <param name="cacheUntil">このメソッドが返されると、キャッシュ内のトークン情報の有効期限日時が含まれます。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.ServerErrorException">
      <summary>要求の処理中にエラーが発生した場合に、Windows Azure Service Bus によってスローされる例外。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.ServerErrorException.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.ServerErrorException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.ServerErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>指定されたシリアル化情報とストリーミング コンテキストを使用して、<see cref="T:Microsoft.ServiceBus.ServerErrorException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info">スローされる例外に関するシリアル化されたオブジェクト データを保持します。</param>
      <param name="context">送信元または宛先に関するコンテキスト情報。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.ServerErrorException.#ctor(System.String)">
      <summary>指定されたエラー メッセージで <see cref="T:Microsoft.ServiceBus.ServerErrorException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">この例外を説明するエラー メッセージ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.ServerErrorException.#ctor(System.String,System.Exception)">
      <summary>指定されたエラー メッセージと内部例外で <see cref="T:Microsoft.ServiceBus.ServerErrorException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">この例外を説明するエラー メッセージ。</param>
      <param name="innerException">現在の例外がスローされる原因となった例外。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder">
      <summary>MessagingFactory クラスで使用される接続文字列の内容を作成および管理する簡単な方法を提供します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.#ctor(System.String)">
      <summary>指定された接続文字列で <see cref="T:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="connectionString">接続文字列。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.CreateUsingOAuthCredential(System.Collections.Generic.IEnumerable{System.Uri},System.Collections.Generic.IEnumerable{System.Uri},System.Int32,System.Int32,System.String,System.String,System.Security.SecureString)">
      <summary>認証資格情報を使用してサービス バス接続文字列を作成します。</summary>
      <returns>作成されたサービス バス接続文字列。</returns>
      <param name="endpoints">エンドポイントのセット。</param>
      <param name="stsEndpoints">セキュリティ トークン サービス エンドポイントのセット。</param>
      <param name="runtimePort">ランタイム ポート。</param>
      <param name="managementPort">管理ポート。</param>
      <param name="domain">接続が確立されるドメイン。</param>
      <param name="user">認証ユーザー。</param>
      <param name="password">認証パスワード。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.CreateUsingSharedAccessKey(System.Collections.Generic.IEnumerable{System.Uri},System.Int32,System.Int32,System.String,System.String)">
      <summary>共有アクセス キーを使用して接続を作成します。</summary>
      <returns>共有アクセス キーを使用して作成された接続。</returns>
      <param name="endpoints">エンドポイントのセット。</param>
      <param name="runtimePort">ランタイム ポート。</param>
      <param name="managementPort">管理ポート。</param>
      <param name="keyName">共有アクセス キーの名前。</param>
      <param name="key">共有アクセスキー</param>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.CreateUsingSharedAccessKey(System.Uri,System.String,System.String)">
      <summary>共有アクセス キーを使用して接続を作成します。</summary>
      <returns>共有アクセス キーを使用して作成された接続。</returns>
      <param name="endpoint">エンドポイント。</param>
      <param name="keyName">共有アクセス キーの名前。</param>
      <param name="key">共有アクセスキー。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.CreateUsingSharedSecret(System.Collections.Generic.IEnumerable{System.Uri},System.Collections.Generic.IEnumerable{System.Uri},System.Int32,System.Int32,System.String,System.String)">
      <summary>共有シークレット資格情報を使用して接続を作成します。</summary>
      <returns>共有シークレット資格情報を使用して作成された接続。</returns>
      <param name="endpoints">エンドポイント。</param>
      <param name="stsEndpoints">セキュリティ トークン サービス エンドポイントのセット。</param>
      <param name="runtimePort">ランタイム ポート。</param>
      <param name="managementPort">管理ポート。</param>
      <param name="issuer">発行者。</param>
      <param name="issuerSecret">発行者シークレット。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.CreateUsingSharedSecret(System.Uri,System.String,System.String)">
      <summary>共有シークレット資格情報を使用して接続を作成します。</summary>
      <returns>共有シークレット資格情報を使用して作成された接続。</returns>
      <param name="endpoint">エンドポイント。</param>
      <param name="issuer">発行者</param>
      <param name="issuerSecret">発行者シークレット。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.CreateUsingWindowsCredential(System.Collections.Generic.IEnumerable{System.Uri},System.Collections.Generic.IEnumerable{System.Uri},System.Int32,System.Int32,System.String,System.String,System.Security.SecureString)">
      <summary>Windows 資格情報を使用して接続を作成します。</summary>
      <returns>作成された接続文字列。</returns>
      <param name="endpoints">エンドポイントのセット</param>
      <param name="stsEndpoints">セキュリティ トークン サービス エンドポイントのセット。</param>
      <param name="runtimePort">ランタイム ポート。</param>
      <param name="managementPort">管理ポート。</param>
      <param name="domain">接続が確立されるドメイン。</param>
      <param name="user">ユーザー。</param>
      <param name="password">Windows パスワード。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.Endpoints">
      <summary>エンドポイントのセットを取得します。</summary>
      <returns>エンドポイントのセット。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.GetAbsoluteManagementEndpoints">
      <summary>絶対管理エンドポイントを取得します。</summary>
      <returns>絶対管理エンドポイント</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.GetAbsoluteRuntimeEndpoints">
      <summary>絶対ランタイム エンドポイントを取得します。</summary>
      <returns>絶対ランタイム エンドポイント。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.ManagementPort">
      <summary>管理ポートを取得または設定します。</summary>
      <returns>管理ポート。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.OAuthDomain">
      <summary>接続の認証ドメインを取得または設定します。</summary>
      <returns>接続の認証ドメイン。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.OAuthPassword">
      <summary>接続の認証パスワードを取得または設定します。</summary>
      <returns>接続の認証パスワード。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.OAuthUsername">
      <summary>接続の認証ユーザー名を取得または設定します。</summary>
      <returns>接続の認証ユーザー名。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.OperationTimeout">
      <summary>タイムアウトになる前にメッセージング操作を完了する必要がある時間を指定する <see cref="T:System.TimeSpan" /> を取得または設定します。</summary>
      <returns>タイムアウトになる前にメッセージング操作を完了する必要がある時間を指定する <see cref="T:System.TimeSpan" /> 。既定値は 1 分です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.RuntimePort">
      <summary>ランタイム ポートを取得または設定します。</summary>
      <returns>ランタイム ポート。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.SharedAccessKey">
      <summary>接続認証の共有アクセス キーを取得または設定します。</summary>
      <returns>接続認証の共有アクセス キー。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.SharedAccessKeyName">
      <summary>共有アクセス キーの名前を取得または設定します。</summary>
      <returns>共有アクセス キーの名前。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.SharedSecretIssuerName">
      <summary>共有シークレット発行者名を取得または設定します。</summary>
      <returns>共有シークレット発行者名。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.SharedSecretIssuerSecret">
      <summary>共有シークレット発行者シークレットを取得または設定します。</summary>
      <returns>共有シークレット発行者シークレット。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.StsEndpoints">
      <summary>STS エンドポイントのセットを取得します。</summary>
      <returns>STS エンドポイントのセット。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.ToString">
      <summary>現在のオブジェクトを表す文字列を返します。</summary>
      <returns>現在のオブジェクトを表す文字列。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.TransportType">
      <summary>接続に関連付けられたトランスポートのタイプを取得または設定します。</summary>
      <returns>接続に関連付けられたトランスポートのタイプ。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.WindowsCredentialDomain">
      <summary>Windows 資格情報ドメインを取得または設定します。</summary>
      <returns>Windows 資格情報ドメイン。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.WindowsCredentialPassword">
      <summary>Windows 資格情報のパスワードを取得または設定します。</summary>
      <returns>Windows 資格情報のパスワード。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.WindowsCredentialUsername">
      <summary>Windows 資格情報のユーザー名を取得または設定します。</summary>
      <returns>Windows 資格情報のユーザー名。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.ServiceBusEnvironment">
      <summary>Windows Azure Service Bus 環境について説明します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceBusEnvironment.CreateAccessControlUri(System.String)">
      <summary>指定されたアクセス制御で使用する URI 文字列を作成します。</summary>
      <returns>指定された URI を含む <see cref="T:System.Uri" /> を返します。</returns>
      <param name="serviceNamespace">URI を作成します。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceBusEnvironment.CreateServiceUri(System.String,System.String,System.String)">
      <summary>指定されたスキーム、名前、およびサービス パスを使用して、アプリケーションの Windows Azure Service Bus URI を構築します。</summary>
      <returns>新しい URI を含む <see cref="T:System.Uri" /> を返します。</returns>
      <param name="scheme">URI のスキーム。</param>
      <param name="serviceNamespace">アプリケーションで使用される名前。</param>
      <param name="servicePath">URI のホスト名セクションに続くサービス パス。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceBusEnvironment.CreateServiceUri(System.String,System.String,System.String,System.Boolean)">
      <summary>指定されたスキーム、名前、サービス パス、およびリレー型パス プレフィックスを使用して、アプリケーションの Windows Azure Service Bus URI を構築します。</summary>
      <returns>新しい URI を含む <see cref="T:System.Uri" /> を返します。</returns>
      <param name="scheme">URI のスキーム。</param>
      <param name="serviceNamespace">アプリケーションで使用される名前。</param>
      <param name="servicePath">URI のホスト名セクションに続くサービス パス。</param>
      <param name="suppressRelayPathPrefix">リレー パス プレフィックスが抑制されている場合は true、それ以外の場合は false です。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusEnvironment.DefaultIdentityHostName">
      <summary>Windows Azure Access Control Service の既定のホスト名を取得します。</summary>
      <returns>既定の ID ホスト名を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusEnvironment.SystemConnectivity">
      <summary>TCP および HTTP ベースのエンドポイントの接続設定を保持するシングルトン <see cref="T:Microsoft.ServiceBus.ConnectivitySettings" /> インスタンスを取得します。</summary>
      <returns>接続設定を含む <see cref="T:Microsoft.ServiceBus.ConnectivitySettings" /> を返します。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.ServiceBusErrorData">
      <summary>サービス バス エラーに関連付けられたデータを表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceBusErrorData.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.ServiceBusErrorData" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusErrorData.Code">
      <summary>エラー コードを取得または設定します。</summary>
      <returns>エラー コード。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusErrorData.Detail">
      <summary>エラーの詳細を取得または設定します。</summary>
      <returns>エラーの詳細。</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.ServiceBusErrorData.DetailTag">
      <summary>エラーの詳細のタグ。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusErrorData.ExtensionData">
      <summary>エラーの拡張データ オブジェクトを取得または設定します。</summary>
      <returns>エラーの拡張データ オブジェクト。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceBusErrorData.GetServiceBusErrorData(System.Net.HttpWebResponse)">
      <summary>サービス バス エラー データの値を取得します。</summary>
      <returns>サービス バス エラー データの値。</returns>
      <param name="webResponse">HTTP Web 応答。</param>
    </member>
    <member name="F:Microsoft.ServiceBus.ServiceBusErrorData.HttpStatusCodeTag">
      <summary>HTTP ステータス コードのタグ。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ServiceBusErrorData.RootTag">
      <summary>タグ ルート。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.ServiceRegistrySettings">
      <summary>Windows Azure Service Bus レジストリの設定が含まれています。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceRegistrySettings.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.ServiceRegistrySettings" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceRegistrySettings.#ctor(Microsoft.ServiceBus.DiscoveryType)">
      <summary>指定された検出タイプを使用して、<see cref="T:Microsoft.ServiceBus.ServiceRegistrySettings" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="discoveryType">エンドポイントがパブリックかプライベートかを示す検出タイプ。</param>
    </member>
    <member name="F:Microsoft.ServiceBus.ServiceRegistrySettings.allowUnauthenticatedAccess">
      <summary>エンドポイントが認証されていないアクセスを許可している場合は true、それ以外の場合は false です。既定値は false です。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceRegistrySettings.DiscoveryMode">
      <summary>サービスの検出方法を取得または設定します。</summary>
      <returns>パブリックになる検出では <see cref="T:Microsoft.ServiceBus.DiscoveryType" />.DiscoveryType.Public、プライベートになる検出では DiscoveryType.Private を返します。既定値は DiscoveryType.Private です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceRegistrySettings.DisplayName">
      <summary>エンドポイントの表示名を取得または設定します。</summary>
      <returns><see cref="T:System.String" />を返します。表示名が含まれています。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceRegistrySettings.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>指定されたバインディング パラメーターを指定されたエンドポイントに追加します。</summary>
      <param name="endpoint">エンドポイント。</param>
      <param name="bindingParameters">追加するバインディング。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceRegistrySettings.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>指定されたランタイム全体で指定されたクライアントを実装または変更します。</summary>
      <param name="endpoint">エンドポイント。</param>
      <param name="clientRuntime">クライアント。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceRegistrySettings.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>エンドポイント全体でサービスの変更または拡張を実装します。</summary>
      <param name="endpoint">コントラクトを公開するエンドポイント。</param>
      <param name="endpointDispatcher">変更または拡張するエンドポイント ディスパッチャー。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceRegistrySettings.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>エンドポイントが意図した条件を満たしていることを確認します。</summary>
      <param name="endpoint">検証するエンドポイント。</param>
    </member>
    <member name="F:Microsoft.ServiceBus.ServiceRegistrySettings.transportProtectionEnabled">
      <summary>トランスポート保護が有効になっている場合は true、それ以外の場合は false です。既定値は true です。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.SharedAccessSignatureToken">
      <summary>共有アクセス シグネチャ トークンを表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.SharedAccessSignatureToken.#ctor(System.String)">
      <summary>指定されたトークン文字列で <see cref="T:Microsoft.ServiceBus.SharedAccessSignatureToken" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="tokenString">トークン文字列。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SharedAccessSignatureToken.#ctor(System.String,System.DateTime)">
      <summary>指定されたトークン文字列と有効期限で <see cref="T:Microsoft.ServiceBus.SharedAccessSignatureToken" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="tokenString">トークン文字列。</param>
      <param name="expiry">トークンの有効期限。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SharedAccessSignatureToken.#ctor(System.String,System.DateTime,System.String)">
      <summary>指定されたトークン文字列、有効期限、オーディエンスで <see cref="T:Microsoft.ServiceBus.SharedAccessSignatureToken" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="tokenString">トークン文字列。</param>
      <param name="expiry">トークンの有効期限。</param>
      <param name="audience">トークンのオーディエンス。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SharedAccessSignatureToken.#ctor(System.String,System.String)">
      <summary>指定された識別子とトークン文字列で <see cref="T:Microsoft.ServiceBus.SharedAccessSignatureToken" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="id">トークン識別子。</param>
      <param name="tokenString">トークン文字列。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.SharedAccessSignatureToken.AudienceFieldName">
      <summary>オーディエンス フィールド名を取得します。</summary>
      <returns>オーディエンス フィールド名。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.SharedAccessSignatureToken.ExpiresOnFieldName">
      <summary>フィールド名で有効期限が切れる値を取得します。</summary>
      <returns>フィールド名で有効期限が切れる値。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.SharedAccessSignatureToken.KeyValueSeparator">
      <summary>キー値区切り記号を取得します。</summary>
      <returns>キー値区切り記号。</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.SharedAccessSignatureToken.MaxKeyLength">
      <summary>キーの最大長を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.SharedAccessSignatureToken.MaxKeyNameLength">
      <summary>キー名の最大長を指定します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.SharedAccessSignatureToken.PairSeparator">
      <summary>トークンに関連付けられたペア区切り記号を取得します。</summary>
      <returns>トークンに関連付けられたペア区切り記号。</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.SharedAccessSignatureToken.SasKeyValueSeparator">
      <summary>共有アクセス シグネチャ トークンのキー値区切り記号を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.SharedAccessSignatureToken.SasPairSeparator">
      <summary>共有アクセス シグネチャ トークンのペア区切り記号を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.SharedAccessSignatureToken.SharedAccessSignature">
      <summary>共有アクセス シグネチャを指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.SharedAccessSignatureToken.Signature">
      <summary>シグネチャ トークンを指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.SharedAccessSignatureToken.SignedExpiry">
      <summary>トークンの署名付き有効期限を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.SharedAccessSignatureToken.SignedKeyName">
      <summary>署名付きキー名を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.SharedAccessSignatureToken.SignedResource">
      <summary>署名付きリソースを指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.SharedAccessSignatureToken.SignedResourceFullFieldName">
      <summary>署名付きリソースの完全なフィールド名を指定します。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.SharedAccessSignatureTokenProvider">
      <summary>トークン プロバイダーに関連付けられている共有アクセス シグネチャを表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.SharedAccessSignatureTokenProvider.BuildKey(System.String,System.String)">
      <summary>トークン プロバイダーのキーを生成します。</summary>
      <returns>トークン プロバイダー向けに生成されたキー。</returns>
      <param name="appliesTo">アクセス トークンが適用される URI。</param>
      <param name="action">要求アクション。</param>
    </member>
    <member name="F:Microsoft.ServiceBus.SharedAccessSignatureTokenProvider.EpochTime">
      <summary>エポック時間。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.SharedAccessSignatureTokenProvider.OnBeginGetToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>BeginGetToken メソッドを呼び出した後に実行します。</summary>
      <returns>操作の結果。</returns>
      <param name="appliesTo">アクセス トークンが適用される URI。</param>
      <param name="action">要求アクション。</param>
      <param name="timeout">セキュリティ トークンを取得するメッセージのタイムアウト値を指定する期間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する AsyncCallback デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SharedAccessSignatureTokenProvider.OnBeginGetWebToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>BeginGetWebToken メソッドを呼び出した後に実行します。</summary>
      <returns>操作の結果。</returns>
      <param name="appliesTo">アクセス トークンが適用される URI。</param>
      <param name="action">要求アクション。</param>
      <param name="timeout">セキュリティ トークンを取得するメッセージのタイムアウト値を指定する期間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する AsyncCallback デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SharedAccessSignatureTokenProvider.OnEndGetToken(System.IAsyncResult,System.DateTime@)">
      <summary>EndGetToken メソッドを呼び出した後に実行します。</summary>
      <returns><see cref="T:System.IdentityModel.Tokens.SecurityToken" />オブジェクト。</returns>
      <param name="result">トークンを取得する非同期操作を参照する IAsyncResult オブジェクト。</param>
      <param name="cacheUntil">このメソッドが返されると、キャッシュ内のトークン情報の有効期限日時が含まれます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SharedAccessSignatureTokenProvider.OnEndGetWebToken(System.IAsyncResult,System.DateTime@)">
      <summary>EndGetWebToken メソッドを呼び出した後に実行します。</summary>
      <returns>Web トークンを表す文字列。</returns>
      <param name="result">Web トークンを取得する非同期操作を参照する IAsyncResult オブジェクト。</param>
      <param name="cacheUntil">このメソッドが返されると、キャッシュ内のトークン情報の有効期限日時が含まれます。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.SharedAccessSignatureTokenProvider.StripQueryParameters">
      <summary>トークン プロバイダーがクエリ パラメーターを取り除くかどうかを取得します。</summary>
      <returns>トークン プロバイダーがクエリ パラメーターを取り除く場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.SharedSecretTokenProvider">
      <summary>Web トークン アサーションの名前と値のペアを返し、非同期共有シークレット トークン取得操作を実行するメソッドを提供します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.SharedSecretTokenProvider.BuildKey(System.String,System.String)">
      <summary>トークン プロバイダーのキーを生成します。</summary>
      <returns>トークン プロバイダー向けに生成されたキー。</returns>
      <param name="appliesTo">アクセス トークンが適用される URI。</param>
      <param name="action">要求アクション。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SharedSecretTokenProvider.ComputeSimpleWebTokenString(System.String,System.Byte[])">
      <summary>指定された発行者名と発行者シークレットを使用して、単純な Web トークン アサーションの URL エンコード名と値のペアの文字列を返します。</summary>
      <returns>単純な Web トークン アサーションの URL エンコード名と値のペア。</returns>
      <param name="issuerName">発行者名。</param>
      <param name="issuerSecret">発行者シークレット。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SharedSecretTokenProvider.ComputeSimpleWebTokenString(System.String,System.String)">
      <summary>指定された発行者名と発行者シークレットを使用して、単純な Web トークン アサーションの URL エンコード名と値のペアの文字列を返します。</summary>
      <returns>単純な Web トークン アサーションの URL エンコード名と値のペア。</returns>
      <param name="issuerName">発行者名。</param>
      <param name="issuerSecret">発行者シークレット。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SharedSecretTokenProvider.OnBeginGetToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>トークン取得開始アクションを実行します。</summary>
      <returns>トークンを取得する非同期操作を参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="appliesTo">アクセス トークンが適用される URI。</param>
      <param name="action">要求アクション。</param>
      <param name="timeout">セキュリティ トークンを取得するメッセージのタイムアウト値を指定する期間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SharedSecretTokenProvider.OnBeginGetWebToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Web トークン取得開始アクションを実行します。</summary>
      <returns>Web トークンを取得する非同期操作を参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="appliesTo">アクセス トークンが適用される URI。</param>
      <param name="action">要求アクション。</param>
      <param name="timeout">セキュリティ トークンを取得するメッセージのタイムアウト値を指定する期間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SharedSecretTokenProvider.OnEndGetToken(System.IAsyncResult,System.DateTime@)">
      <summary>トークン取得終了アクションを実行します。</summary>
      <returns>セキュリティ トークン。</returns>
      <param name="result">トークンを取得する非同期操作を参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</param>
      <param name="cacheUntil">このメソッドが返されると、キャッシュ内のトークン情報の有効期限日時が含まれます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SharedSecretTokenProvider.OnEndGetWebToken(System.IAsyncResult,System.DateTime@)">
      <summary>Web トークン取得終了アクションを実行します。</summary>
      <returns>Web トークン。</returns>
      <param name="result">Web トークンを取得する非同期操作を参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</param>
      <param name="cacheUntil">このメソッドが返されると、キャッシュ内のトークン情報の有効期限日時が含まれます。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.SimpleWebSecurityToken">
      <summary>単純 Web トークンをラップするセキュリティ トークン。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityToken.#ctor(System.String)">
      <summary>指定された単純 Web トークンで <see cref="T:Microsoft.ServiceBus.SimpleWebSecurityToken" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="tokenString">単純 Web トークンを表す文字列。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityToken.#ctor(System.String,System.DateTime)">
      <summary>指定された単純 Web トークンおよび有効期限で <see cref="T:Microsoft.ServiceBus.SimpleWebSecurityToken" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="tokenString">単純 Web トークンを表す文字列。</param>
      <param name="expiry">単純 Web トークンの有効期限。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityToken.#ctor(System.String,System.DateTime,System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.SimpleWebSecurityToken" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="tokenString">単純 Web トークンを表す文字列。</param>
      <param name="expiry">単純 Web トークンの有効期限。</param>
      <param name="audience">単純 Web トークンのオーディエンス。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityToken.#ctor(System.String,System.String)">
      <summary>指定されたトークン ID と単純 Web トークンで <see cref="T:Microsoft.ServiceBus.SimpleWebSecurityToken" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="id">単純 Web トークンの一意の識別子。</param>
      <param name="tokenString">単純 Web トークンを表す文字列。</param>
      <exception cref="T:System.NullReferenceException"><paramref name="id" /> パラメーターまたは <paramref name="tokenString" /> パラメーターは null です。 </exception>
    </member>
    <member name="P:Microsoft.ServiceBus.SimpleWebSecurityToken.Audience">
      <summary>単純 Web トークンのオーディエンスを取得します。</summary>
      <returns>単純 Web トークンのオーディエンス。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.SimpleWebSecurityToken.AudienceFieldName">
      <summary>オーディエンス フィールド名を取得します。</summary>
      <returns>オーディエンス フィールド名。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.SimpleWebSecurityToken.ExpiresOn">
      <summary>セキュリティ トークンの有効期限が切れる日時を取得します。</summary>
      <returns>セキュリティ トークンの有効期限が切れる日時。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.SimpleWebSecurityToken.ExpiresOnFieldName">
      <summary>トークンの有効期限に関連付けられているフィールド名を取得します。</summary>
      <returns>トークンの有効期限に関連付けられているフィールド名。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.SimpleWebSecurityToken.Id">
      <summary>単純 Web トークンに関連付けられている ID を取得します。</summary>
      <returns>単純 Web トークンに関連付けられている ID。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.SimpleWebSecurityToken.KeyValueSeparator">
      <summary>トークンに関連付けられているキー値区切り記号を取得します。</summary>
      <returns>トークンに関連付けられているキー値区切り記号。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.SimpleWebSecurityToken.PairSeparator">
      <summary>トークンに関連付けられたペア区切り記号を取得します。</summary>
      <returns>トークンに関連付けられたペア区切り記号。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.SimpleWebSecurityToken.SecurityKeys">
      <summary>セキュリティ トークンに関連付けられている暗号化キーを取得します。</summary>
      <returns>単純 Web トークンに関連付けられたキーのセットを含むタイプ <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> の <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.SimpleWebSecurityToken.Token">
      <summary>単純 Web トークンを取得します。</summary>
      <returns>単純 Web トークン。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.SimpleWebSecurityToken.ValidFrom">
      <summary>実装されていません。</summary>
      <returns><see cref="T:System.NotImplementedException" /> をスローします。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.SimpleWebSecurityToken.ValidTo">
      <summary>実装されていません。</summary>
      <returns><see cref="T:System.NotImplementedException" /> をスローします。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer">
      <summary><see cref="T:Microsoft.ServiceBus.SimpleWebSecurityToken" />、<see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />、<see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> オブジェクトの XML としての読み取りと書き込みに使用されるクラス。  </summary>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.#ctor(System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>指定されたセキュリティ トークン シリアライザーで <see cref="T:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="innerSerializer">内部シリアライザーとして使用するセキュリティ トークン シリアライザー。</param>
      <exception cref="T:System.ArgumentNullException"><paramref name="innerSerializer" /> パラメーターは null です。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanReadKeyIdentifierClauseCore(System.Xml.XmlReader)">
      <summary>このシリアライザーが、指定された XML リーダーで参照されている &lt;KeyIdentifier&gt; 要素を読み取ることができるかどうかを決定します。</summary>
      <returns>指定された &lt;KeyIdentifier&gt; 要素を読み取ることができる場合は true、それ以外の場合は false です。</returns>
      <param name="reader">キー識別子句を読み取る <see cref="T:System.Xml.XmlReader" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanReadKeyIdentifierCore(System.Xml.XmlReader)">
      <summary>このシリアライザーが、指定された XML リーダーで参照されている &lt;KeyIdentifier&gt; 要素を読み取ることができるかどうかを決定します。</summary>
      <returns>指定された &lt;KeyIdentifier&gt; 要素を読み取ることができる場合は true、それ以外の場合は false です。</returns>
      <param name="reader">キー識別子を読み取る <see cref="T:System.Xml.XmlReader" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanReadTokenCore(System.Xml.XmlReader)">
      <summary>このシリアライザーが、指定された XML リーダーが指すセキュリティ トークンを読み取ることができるかどうかを決定します。</summary>
      <returns>セキュリティ トークンを読み取ることができる場合は true、それ以外の場合は false です。</returns>
      <param name="reader">セキュリティ トークンを読み取る <see cref="T:System.Xml.XmlReader" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanWriteKeyIdentifierClauseCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>このシリアライザーが、指定されたキー識別子句を書き込むことができるかどうかを決定します。</summary>
      <returns>このシリアライザーが指定されたキー識別子句を書き込むことができる場合に true、それ以外の場合は false です。</returns>
      <param name="keyIdentifierClause">書き込むキー識別子句を表す <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanWriteKeyIdentifierCore(System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <summary>このシリアライザーが、指定されたキー識別子を書き込むことができるかどうかを決定します。</summary>
      <returns>このシリアライザーが指定されたキー識別子を書き込むことができる場合は true、それ以外の場合は false です。</returns>
      <param name="keyIdentifier">書き込むキー識別子を表す <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanWriteTokenCore(System.IdentityModel.Tokens.SecurityToken)">
      <summary>このシリアライザーが、指定されたセキュリティ トークンを XML に書き込むことができるかどうかを決定します。</summary>
      <returns>セキュリティ トークンを書き込むことができる場合は true、それ以外の場合は false です。</returns>
      <param name="token">XML に変換する <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</param>
    </member>
    <member name="F:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.DefaultInstance">
      <summary><see cref="T:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer" /> クラスのインスタンスを指定します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.ReadKeyIdentifierClauseCore(System.Xml.XmlReader)">
      <summary>指定された XML リーダーを使用してキー識別子句を読み取ります。</summary>
      <returns>読み取られるキー識別子を表す <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</returns>
      <param name="reader">キー識別子句を読み取る <see cref="T:System.Xml.XmlReader" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.ReadKeyIdentifierCore(System.Xml.XmlReader)">
      <summary>指定された XML リーダーを使用してキー識別子を読み取ります。</summary>
      <returns>読み取られるキー識別子を表す <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />。</returns>
      <param name="reader">キー識別子を読み取る <see cref="T:System.Xml.XmlReader" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.ReadTokenCore(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary><see cref="T:Microsoft.ServiceBus.SimpleWebSecurityToken" />、または指定された XML リーダーが指すセキュリティ トークンを読み取ります。</summary>
      <returns>SimpleWebSecurityToken または読み取られるセキュリティ トークンを表す <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</returns>
      <param name="reader">SimpleWebSecurityToken またはセキュリティ トークンを読み取る <see cref="T:System.Xml.XmlReader" />。</param>
      <param name="tokenResolver">セキュリティ トークンのタイプを決定する <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />。</param>
      <exception cref="T:System.NotSupportedException">XML 要素のエンコードは base64Binary ではありません。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.WriteKeyIdentifierClauseCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>指定された XML ライターを使用して、指定されたキー識別子句を書き込きます。</summary>
      <param name="writer">キー識別子句の書き込みに使用される <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="keyIdentifierClause">書き込むキー識別子句を表す <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.WriteKeyIdentifierCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <summary>指定された XML ライターを使用して、指定されたキー識別子を書き込みます。</summary>
      <param name="writer">キー識別子の書き込みに使用される <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="keyIdentifier">書き込むキー識別子を表す <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />。</param>
      <exception cref="T:System.InvalidOperationException">バイナリ トークンのコンテンツは null です。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.WriteTokenCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
      <summary>指定された <see cref="T:Microsoft.ServiceBus.SimpleWebSecurityToken" />、または指定された XML ライターを使用してセキュリティ トークンを書き込きます。</summary>
      <param name="writer">SimpleWebSecurityToken またはセキュリティ トークンの書き込みに使用される <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="token">SimpleWebSecurity トークン、または書き込むセキュリティ トークン。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.SimpleWebTokenProvider">
      <summary>非同期単純 Web トークン (SWT) 取得操作を実行する一連のメソッドを提供します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebTokenProvider.BuildKey(System.String,System.String)">
      <summary>単純 Web トークン プロバイダーのキーを生成します。</summary>
      <returns>単純 Web トークン プロバイダーの生成済みのキー。</returns>
      <param name="appliesTo">アクセス トークンが適用される URI。</param>
      <param name="action">要求アクション。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebTokenProvider.OnBeginGetToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>トークン取得開始アクションを実行します。</summary>
      <returns>トークンを取得する非同期操作を参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="appliesTo">アクセス トークンが適用される URI。</param>
      <param name="action">要求アクション。</param>
      <param name="timeout">セキュリティ トークンを取得するメッセージのタイムアウト値を指定する期間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebTokenProvider.OnBeginGetWebToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Web トークン取得開始アクションを実行します。</summary>
      <returns>Web トークンを取得する非同期操作を参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="appliesTo">アクセス トークンが適用される URI。</param>
      <param name="action">要求アクション。</param>
      <param name="timeout">セキュリティ トークンを取得するメッセージのタイムアウト値を指定する期間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebTokenProvider.OnEndGetToken(System.IAsyncResult,System.DateTime@)">
      <summary>トークン取得終了アクションを実行します。</summary>
      <returns>セキュリティ トークン。</returns>
      <param name="result">トークンを取得する非同期操作を参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</param>
      <param name="cacheUntil">このメソッドが返されると、キャッシュ内のトークン情報の有効期限日時が含まれます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebTokenProvider.OnEndGetWebToken(System.IAsyncResult,System.DateTime@)">
      <summary>Web トークン取得終了アクションを実行します。</summary>
      <returns>Web トークン。</returns>
      <param name="result">Web トークンを取得する非同期操作を参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</param>
      <param name="cacheUntil">このメソッドが返されると、キャッシュ内のトークン情報の有効期限日時が含まれます。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.SocketConnectionPoolSettings">
      <summary>ソケット接続プールの動作を制御するプロパティを表します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.SocketConnectionPoolSettings.GroupName">
      <summary>ソケット接続プールのグループ名を取得または設定します。</summary>
      <returns>ソケット接続プールのグループ名。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.SocketConnectionPoolSettings.IdleTimeout">
      <summary>接続が切断される前に、接続プール内で接続をアイドル状態にできる最大時間を取得または設定します。</summary>
      <returns>接続が切断される前に、接続プール内で接続がアイドル状態になる最大時間。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.SocketConnectionPoolSettings.LeaseTimeout">
      <summary>アクティブな接続が閉じられた後の期間を取得または設定します。</summary>
      <returns>ソケット接続が閉じられた後の期間。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.SocketConnectionPoolSettings.MaxOutboundConnectionsPerEndpoint">
      <summary>接続プールでキャッシュされる各エンドポイントの送信接続の最大数を取得または設定します。</summary>
      <returns>接続プールでキャッシュされる各エンドポイントの送信接続の最大数。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.SocketSecurityRole">
      <summary>ソケット セキュリティの役割について説明します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.SocketSecurityRole.None">
      <summary>クライアントに設定すると、アプリケーションは暗号化されていないメッセージを送信します。サーバーに設定すると、アプリケーションは暗号化されたメッセージと暗号化されていないメッセージの両方を受け入れます。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.SocketSecurityRole.SslClient">
      <summary>アプリケーションは SSL クライアントとして識別され、アプリケーションは暗号化されたチャネルを使用してメッセージの接続と送信を試みます。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.SocketSecurityRole.SslServer">
      <summary>アプリケーションを SSL サーバーとして識別します。アプリケーションは安全なトランスポート接続のみを受け入れます。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.TcpClientTransportTokenAssertionProviderBindingElement">
      <summary>ポリシーのエクスポートで使用する SSL ストリーム上のチャネル セキュリティをサポートするトランスポート バインディング要素を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.TcpClientTransportTokenAssertionProviderBindingElement.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.TcpClientTransportTokenAssertionProviderBindingElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.TcpClientTransportTokenAssertionProviderBindingElement.Clone">
      <summary>このバインディング要素インスタンスのコピーを返します。</summary>
      <returns>このバインディング要素インスタンスのコピー。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.TcpClientTransportTokenAssertionProviderBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>バインディング スタック内の適切なレイヤーから、要求されたタイプのオブジェクト (存在する場合) を返します。</summary>
      <returns>要求されたタイプのオブジェクト (該当する場合)。それ以外の場合は null を返します。</returns>
      <param name="context">このバインディング要素のコンテキストを提供するバインディング コンテキスト。</param>
      <typeparam name="T">取得するプロパティのタイプ。</typeparam>
    </member>
    <member name="M:Microsoft.ServiceBus.TcpClientTransportTokenAssertionProviderBindingElement.GetTransportTokenAssertion">
      <summary>セキュリティ バインディングで使用されるトランスポート トークンを表す <see cref="T:System.Xml.XmlElement" /> を取得します。</summary>
      <returns>セキュリティ バインディングで使用されるトランスポート トークンを表す <see cref="T:System.Xml.XmlElement" />。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.TcpRelayConnectionMode">
      <summary><see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" /> の接続モードについて説明します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TcpRelayConnectionMode.Hybrid">
      <summary>通信は Windows Azure Service Bus インフラストラクチャを介して中継され、Client エンドポイントと Service エンドポイントが互いに直接ソケット接続をネゴシエートします。この直接接続の調整は、Windows Azure Service Bus クラウド サービスによって管理されます。直接ソケット接続アルゴリズムは、対向するファイアウォールと NAT デバイスの背後にある 2 つのパーティー間の直接接続を確立できます。このアルゴリズムは、ファイアウォール トラバーサルの送信接続のみを使用し、NAT トラバーサルの相互ポート予測アルゴリズムに依存します。NAT トラバーサル アルゴリズムは、非常に狭いタイミング調整と予想される NAT 動作に関する最良の推測予測に依存するため、クライアントが少ないホーム ビジネス シナリオとスモール ビジネス シナリオでは、アルゴリズムの成功率が非常に高くなる傾向があり、より大きな NAT で成功率が低下します。直接接続を確立できる場合、リレー型接続はメッセージやデータを失うことなく、自動的に直接接続にアップグレードされます。直接接続を確立できない場合、データは Windows Azure Service Bus リレーを通じて引き続き流れます。このモードでは、NAT 予測アルゴリズムに対して送信ポート 819 がさらに必要になります。ほとんどのパーソナル ファイアウォール製品では、直接接続モードによって確立されている送信ソケット接続では、ユーザーが 1 回限りのポリシー例外をホスティング アプリケーションに付与する必要があります (Windows Personal Firewall およびその他の製品は通常、ユーザーにプロンプトで指示します)。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TcpRelayConnectionMode.Relayed">
      <summary>すべての通信は、Windows Azure Service Bus クラウドを介してリレーされます。SSL で保護された制御接続は、すべてのクライアント サービス通信が流れるリレー型エンドツーエンド ソケット接続をネゴシエートするために使用されます。接続が確立されると、Windows Azure Service Bus インフラストラクチャは、双方向バイト ストリームをリレーするソケット フォワーダー プロキシと同様に機能します。このモードでは、NAT 予測アルゴリズムに対して送信ポート 819 がさらに必要になります。ほとんどのパーソナル ファイアウォール製品では、直接接続モードによって確立されている送信ソケット接続では、ユーザーが 1 回限りのポリシー例外をホスティング アプリケーションに付与する必要があります (Windows Personal Firewall およびその他の製品は通常、ユーザーにプロンプトで指示します)。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.TcpRelayTransportBindingElement">
      <summary>TCP トランスポート リレーのバインディング要素を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.TcpRelayTransportBindingElement.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.TcpRelayTransportBindingElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.TcpRelayTransportBindingElement.#ctor(Microsoft.ServiceBus.RelayClientAuthenticationType)">
      <summary>指定されたリレー クライアント認証タイプを使用して、<see cref="T:Microsoft.ServiceBus.TcpRelayTransportBindingElement" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="relayClientAuthenticationType">リレー クライアント認証タイプ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TcpRelayTransportBindingElement.#ctor(Microsoft.ServiceBus.TcpRelayTransportBindingElement)">
      <summary>指定されたリレー バインディング要素を使用して、<see cref="T:Microsoft.ServiceBus.TcpRelayTransportBindingElement" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="elementToBeCloned">クローンする要素。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TcpRelayTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>チャネルの作成に使用できるチャネル ファクトリを作成します。</summary>
      <returns>指定されたタイプのチャネル ファクトリ。</returns>
      <param name="context">チャネル ファクトリの作成に必要なバインディング、動作、コントラクト、およびその他の情報について説明します。</param>
      <typeparam name="TChannel">チャネル ファクトリのタイプ。</typeparam>
      <exception cref="InvalidOperationException">トランスポート保護が有効で、接続モードが Hybrid または Direct に設定されている場合、このメンバーが直接使用される可能性は低くなりますが、カスタム バインディングの作成時に使用できます。詳細については、「カスタム AppFabric サービス バス バインディングの作成」を参照してください。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.TcpRelayTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>指定されたタイプのチャネル リスナーを作成します。</summary>
      <returns>指定されたタイプのチャネル リスナー。</returns>
      <param name="context">チャネル ファクトリの作成に必要なバインディング、動作、コントラクト、およびその他の情報について説明します。</param>
      <typeparam name="TChannel">チャネル ファクトリのタイプ。</typeparam>
      <exception cref="InvalidOperationException">トランスポート保護が有効で、接続モードが Hybrid または Direct のいずれかに設定されている場合。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.TcpRelayTransportBindingElement.Clone">
      <summary>現在のバインディング要素のコピーを作成します。</summary>
      <returns>バインディング要素のコピーを含む <see cref="T:System.ServiceModel.Channels.BindingElement" /> を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.TcpRelayTransportBindingElement.ConnectionMode">
      <summary>接続モードを取得または設定します。</summary>
      <returns>接続モードを含む <see cref="T:Microsoft.ServiceBus.TcpRelayConnectionMode" /> を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.TcpRelayTransportBindingElement.ConnectionPoolSettings">
      <summary>現在のインスタンスの接続プール設定を取得します。</summary>
      <returns>現在のインスタンスの接続プール設定。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.TcpRelayTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>バインディング コンテキストから指定されたオブジェクトを返します。</summary>
      <returns>指定されたオブジェクトを含むバインディング要素、またはこれが見つからない場合は null。</returns>
      <param name="context">コンテキスト。</param>
      <typeparam name="T">取得するオブジェクトのタイプ。</typeparam>
    </member>
    <member name="P:Microsoft.ServiceBus.TcpRelayTransportBindingElement.IsDynamic">
      <summary>バインディング要素が動的であるかどうかを取得または設定します。</summary>
      <returns>バインディング要素が動的な場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.TcpRelayTransportBindingElement.RelayClientAuthenticationType">
      <summary>サービス クライアントが使用する認証のタイプを取得または設定します。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" /> を返します。認証タイプが含まれます。既定値は RelayAccessToken です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.TcpRelayTransportBindingElement.Scheme">
      <summary>トランスポートの URI スキームを取得します。</summary>
      <returns>トランスポートの URI スキーム (&quot;TCP&quot;) を返します。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.TcpRelayTransportBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>バインディングに関するカスタム ポリシー アサーションをエクスポートします。</summary>
      <param name="exporter">エクスポート プロセスの変更に使用できるメタデータ エクスポーター。</param>
      <param name="context">カスタム ポリシー アサーションを挿入するポリシー変換コンテキスト。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.TcpRelayTransportSecurity">
      <summary>TCP トランスポート リレー バインディングの認証パラメーターと保護レベルを制御するプロパティを提供します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.TcpRelayTransportSecurity.ProtectionLevel">
      <summary>トランスポート保護レベルを取得または設定します。</summary>
      <returns>保護レベルを含む <see cref="T:System.Net.Security.ProtectionLevel" /> を返します。既定は EncryptAndSign です。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.TokenConstants">
      <summary>認証要求で使用されるパラメーター名、フィールド名、メソッド名、および区切り文字を表す定数を提供します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.DefaultCompoundClaimDelimiter">
      <summary>複合トークンの値のリストを区切るために使用される文字。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.HttpAuthParameterSeparator">
      <summary>HTTP 認証要求で送信されるパラメーターを分離するために使用される文字。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.HttpMethodGet">
      <summary>HTTP 要求の GET 動詞を表すために使用される文字列。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.HttpMethodHead">
      <summary>HTTP 要求の HEAD 動詞を表すために使用される文字列。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.HttpMethodPost">
      <summary>HTTP 要求の POST 動詞を表すために使用される文字列。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.HttpMethodTrace">
      <summary>HTTP 要求の TRACE 動詞を表すために使用される文字列。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.KeyValueSeparator">
      <summary>キーと値の分離を指定する文字。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.ManagementIssuerName">
      <summary>Windows Azure Access Control 管理サービスへのアクセスに使用される既定の発行者名文字列値。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.MaxIssuerNameSize">
      <summary>発行者名の最大サイズ。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.MaxIssuerSecretSize">
      <summary>発行者シークレット キーの最大サイズ。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.OutputClaimIssuerId">
      <summary>Windows Azure Access Control サービスからのすべての出力クレームの発行者 ID。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.Saml11ConfirmationMethodBearerToken">
      <summary>セキュリティ アサーション マークアップ言語 (SAML) ベアラー アサーションで使用される ConfirmationMethod 属性の値。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.ServiceBusIssuerName">
      <summary>Windows Azure Service Bus へのアクセス獲得に使用される既定の発行者名文字列値。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.TokenAudience">
      <summary>単純 Web トークン (SWT) で使用されるトークン オーディエンス属性名。トークン オーディエンスは、SWT が対象とする SWT プロセッサです。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.TokenDigest256">
      <summary>単純 Web トークンで使用されるハッシュ ベースのメッセージ認証コードの属性名。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.TokenExpiresOn">
      <summary>単純 Web トークンで使用されるトークンの有効期限 (秒単位) の属性名。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.TokenIssuer">
      <summary>単純 Web トークン (SWT) 発行者の属性名。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.TrackingIdHeaderName">
      <summary>返されたトークン応答の追跡 ID の属性名。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.UrlParameterSeparator">
      <summary>トークン要求のパラメーターを区切るために使用される文字。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.WrapAccessToken">
      <summary>WRAP プロトコルを使用してセキュリティ トークン サービスによって応答で返されるアクセス トークンのパラメーター名。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.WrapAppliesTo">
      <summary>Windows Azure Access Control サービスに送信されるトークン要求本文にある AppliesTo フィールドの名前。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.WrapAssertion">
      <summary>WRAP プロトコルを使用してトークン要求で送信される WRAP アサーションのパラメーター名。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.WrapAssertionFormat">
      <summary>WRAP プロトコルを使用してトークン要求で送信されるアサーション形式のパラメーター名。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.WrapAuthenticationType">
      <summary>WRAP 認証プロトコルのタイプ名。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.WrapAuthorizationHeaderKey">
      <summary>要求の承認ヘッダーで Windows Azure Service Bus に送信されるアクセス トークンのパラメーター名。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.WrapBaseTime">
      <summary>WRAP プロトコルで使用される基準日。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.WrapContentType">
      <summary>WRAP プロトコルの使用時にトークン要求パラメーターを書式設定するために使用されるコンテンツ タイプ。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.WrapName">
      <summary>WRAP プロトコルを使用してトークン要求で送信されるアカウント名のパラメーター名。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.WrapPassword">
      <summary>WRAP プロトコルを使用してトークン要求で送信されるアカウント パスワードのパラメーター名。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.WrapRequestedLifetime">
      <summary>WRAP プロトコルを使用してトークン要求で送信される要求されたトークンの有効期間 (秒単位) のパラメーター名。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.WrapSamlAssertionFormat">
      <summary>セキュリティ アサーション マークアップ言語形式を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.WrapSwtAssertionFormat">
      <summary>単純 Web トークン形式を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.WrapTokenExpiresIn">
      <summary>WRAP プロトコルを使用してトークン発行者によってトークン応答に返されるトークンの有効期限 (秒単位) のパラメーター名。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.TokenProvider">
      <summary>既知のトークン プロバイダーを返すファクトリ メソッドが組み込まれているセキュリティ トークン プロバイダーを表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.#ctor(System.Boolean,System.Boolean)">
      <summary><see cref="T:Microsoft.ServiceBus.TokenProvider" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="cacheTokens">新しいセキュリティ トークンがキャッシュされている場合は true、それ以外の場合は false です。</param>
      <param name="supportHttpAuthToken">Web トークンがこのプロバイダーにサポートされている場合は true、それ以外の場合は false です。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.#ctor(System.Boolean,System.Boolean,Microsoft.ServiceBus.TokenScope)">
      <summary><see cref="T:Microsoft.ServiceBus.TokenProvider" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="cacheTokens">新しいセキュリティ トークンがキャッシュされている場合は true、それ以外の場合は false です。</param>
      <param name="supportHttpAuthToken">Web トークンがこのプロバイダーにサポートされている場合は true、それ以外の場合は false です。</param>
      <param name="tokenScope">プロバイダーに関連付けられたトークン スコープ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.#ctor(System.Boolean,System.Boolean,System.Int32,Microsoft.ServiceBus.TokenScope)">
      <summary><see cref="T:Microsoft.ServiceBus.TokenProvider" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="cacheTokens">新しいセキュリティ トークンがキャッシュされている場合は true、それ以外の場合は false です。</param>
      <param name="supportHttpAuthToken">Web トークンがこのプロバイダーにサポートされている場合は true、それ以外の場合は false です。</param>
      <param name="cacheSize">キャッシュのサイズ。</param>
      <param name="tokenScope">プロバイダーに関連付けられたトークン スコープ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.BeginGetToken(System.String,System.String,System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>セキュリティ トークンを取得する非同期操作を開始します。</summary>
      <returns>トークンを取得する非同期操作を参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="appliesTo">アクセス トークンが適用される URI。</param>
      <param name="action">要求アクション。</param>
      <param name="bypassCache">キャッシュ内の既存のトークン情報を無視する場合は true、キャッシュ内のトークン情報を使用する場合は false。</param>
      <param name="timeout">セキュリティ トークンを取得するメッセージのタイムアウト値を指定する期間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.BeginGetWebToken(System.String,System.String,System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Web トークンを取得するための非同期操作を開始します。</summary>
      <returns>Web トークンを取得する非同期操作を参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="appliesTo">トークンが適用される URI。</param>
      <param name="action">要求アクション。</param>
      <param name="bypassCache">キャッシュ内の既存のトークン情報を無視する場合は true、キャッシュ内のトークン情報を使用する場合は false。</param>
      <param name="timeout">セキュリティ トークンを取得するメッセージのタイムアウト値を指定する期間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.BuildKey(System.String,System.String)">
      <summary>トークン プロバイダーのキーを生成します。</summary>
      <returns>トークン プロバイダー向けに生成されたキー。</returns>
      <param name="appliesTo">アクセス トークンが適用される URI。</param>
      <param name="action">要求アクション。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.TokenProvider.CacheSize">
      <summary>キャッシュのサイズを取得または設定します。</summary>
      <returns>キャッシュのサイズ。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.TokenProvider.CacheTokens">
      <summary>新しいセキュリティ トークンがキャッシュされているかどうかを示す値を取得または設定します。</summary>
      <returns>新しいセキュリティ トークンがキャッシュされている場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.Clear">
      <summary>トークン プロバイダーをクリアします。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateOAuthTokenProvider(System.Collections.Generic.IEnumerable{System.Uri},System.Net.NetworkCredential)">
      <summary>OAuth (承認のためのオープン スタンダード) トークン プロバイダーを作成します。</summary>
      <returns>OAuth トークンを返すための <see cref="T:Microsoft.ServiceBus.TokenProvider" />。</returns>
      <param name="stsUris">セキュリティ トークン サービス (STS) の URI。</param>
      <param name="credential">ユーザー資格情報。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider(System.String)">
      <summary>指定された SAML トークンで SAML トークン プロバイダーを作成します。</summary>
      <returns>SAML トークンを返すための <see cref="T:Microsoft.ServiceBus.TokenProvider" />。</returns>
      <param name="samlToken">SAML トークンを表す文字列。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider(System.String,Microsoft.ServiceBus.TokenScope)">
      <summary>指定された SAML トークンとスコープで SAML トークン プロバイダーを作成します。</summary>
      <returns>SAML トークンを返すための <see cref="T:Microsoft.ServiceBus.TokenProvider" />。</returns>
      <param name="samlToken">SAML トークンを表す文字列。</param>
      <param name="tokenScope">プロバイダーに関連付けられたトークン スコープ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider(System.String,System.Uri)">
      <summary>セキュリティ トークン サービス (STS) の指定された SAML トークンと URI で SAML トークン プロバイダーを作成します。</summary>
      <returns>SAML トークンを返すための <see cref="T:Microsoft.ServiceBus.TokenProvider" />。</returns>
      <param name="samlToken">SAML トークンを表す文字列。</param>
      <param name="stsUri">セキュリティ トークン サービス (STS) の URI。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider(System.String,System.Uri,Microsoft.ServiceBus.TokenScope)">
      <summary>指定された SAML トークン、セキュリティ トークン サービス (STS) の URI、トークン スコープで SAML トークン プロバイダーを作成します。</summary>
      <returns>SAML トークンを返すための <see cref="T:Microsoft.ServiceBus.TokenProvider" />。</returns>
      <param name="samlToken">SAML トークンを表す文字列。</param>
      <param name="stsUri">セキュリティ トークン サービス (STS) の URI。</param>
      <param name="tokenScope">プロバイダーに関連付けられたトークン スコープ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider(System.String,System.Uri,System.Int32)">
      <summary>指定された SAML トークン、セキュリティ トークン サービス (STS) の URI、キャッシュ サイズで SAML トークン プロバイダーを作成します。</summary>
      <returns>SAML トークンを返すための <see cref="T:Microsoft.ServiceBus.TokenProvider" />。</returns>
      <param name="samlToken">SAML トークンを表す文字列。</param>
      <param name="stsUri">セキュリティ トークン サービス (STS) の URI。</param>
      <param name="cacheSize">キャッシュのサイズ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider(System.String,System.Uri,System.Int32,Microsoft.ServiceBus.TokenScope)">
      <summary>指定された SAML トークン、セキュリティ トークン サービス (STS) の URI、キャッシュ サイズ、およびトークン スコープで SAML トークン プロバイダーを作成します。</summary>
      <returns>SAML トークンを返すための <see cref="T:Microsoft.ServiceBus.TokenProvider" />。</returns>
      <param name="samlToken">SAML トークンを表す文字列。</param>
      <param name="stsUri">セキュリティ トークン サービス (STS) の URI。</param>
      <param name="cacheSize">キャッシュのサイズ。</param>
      <param name="tokenScope">プロバイダーに関連付けられたトークン スコープ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String)">
      <summary>指定されたキー名と共有アクセス キーでトークン プロバイダーへのアクセスを許可する URL を作成します。</summary>
      <returns>トークン プロバイダーへのアクセスを許可する作成済みの URL。</returns>
      <param name="keyName">キー名。</param>
      <param name="sharedAccessKey">共有アクセスキー。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String,Microsoft.ServiceBus.TokenScope)">
      <summary>指定されたキー名、共有アクセス キー、およびトークン スコープでトークン プロバイダーへのアクセスを許可する URL を作成します。</summary>
      <returns>トークン プロバイダーへのアクセスを許可する作成済みの URL。</returns>
      <param name="keyName">キー名。</param>
      <param name="sharedAccessKey">共有アクセスキー。</param>
      <param name="tokenScope">プロバイダーに関連付けられたトークン スコープ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String,System.TimeSpan)">
      <summary>指定されたキー名、共有アクセス キー、および存続するトークン時間でトークン プロバイダーへのアクセスを許可する URL を作成します。</summary>
      <returns>トークン プロバイダーへのアクセスを許可する作成済みの URL。</returns>
      <param name="keyName">キー名。</param>
      <param name="sharedAccessKey">共有アクセスキー。</param>
      <param name="tokenTimeToLive">操作が有効な時間。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String,System.TimeSpan,Microsoft.ServiceBus.TokenScope)">
      <summary>トークン プロバイダーへのアクセスを許可する URL を作成します。</summary>
      <returns>トークン プロバイダーへのアクセスを許可する作成済みの URL。</returns>
      <param name="keyName">キー名。</param>
      <param name="sharedAccessKey">共有アクセスキー。</param>
      <param name="tokenTimeToLive">操作が有効な時間。</param>
      <param name="tokenScope">プロバイダーに関連付けられたトークン スコープ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.Byte[])">
      <summary>共有シークレット トークン プロバイダーを作成します。</summary>
      <returns>共有シークレット トークンを返すための <see cref="T:Microsoft.ServiceBus.TokenProvider" />。</returns>
      <param name="issuerName">発行者名。</param>
      <param name="issuerSecret">発行者シークレット。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.Byte[],Microsoft.ServiceBus.TokenScope)">
      <summary>共有シークレット トークン プロバイダーを作成します。</summary>
      <returns>作成されたトークン プロバイダー。</returns>
      <param name="issuerName">発行者の名前。</param>
      <param name="issuerSecret">発行者シークレットのセット。</param>
      <param name="tokenScope">プロバイダーに関連付けられたトークン スコープ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.Byte[],System.Uri)">
      <summary>共有シークレット トークン プロバイダーを作成します。</summary>
      <returns>共有シークレット トークンを返すための <see cref="T:Microsoft.ServiceBus.TokenProvider" />。</returns>
      <param name="issuerName">発行者名。</param>
      <param name="issuerSecret">発行者シークレットのセット。</param>
      <param name="stsUri">セキュリティ トークン サービス (STS) の URI。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.Byte[],System.Uri,Microsoft.ServiceBus.TokenScope)">
      <summary>共有シークレット トークン プロバイダーを作成します。</summary>
      <returns>作成されたトークン プロバイダー。</returns>
      <param name="issuerName">発行者名。</param>
      <param name="issuerSecret">発行者シークレットのセット。</param>
      <param name="stsUri">セキュリティ トークン サービスのエンドポイント URI。</param>
      <param name="tokenScope">プロバイダーに関連付けられたトークン スコープ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.String)">
      <summary>共有シークレット トークン プロバイダーを作成します。</summary>
      <returns>共有シークレット トークンを返すための <see cref="T:Microsoft.ServiceBus.TokenProvider" />。</returns>
      <param name="issuerName">発行者名。</param>
      <param name="issuerSecret">発行者シークレット。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.String,Microsoft.ServiceBus.TokenScope)">
      <summary>共有シークレット トークン プロバイダーを作成します。</summary>
      <returns>作成されたトークン プロバイダー。</returns>
      <param name="issuerName">発行者名。</param>
      <param name="issuerSecret">発行者シークレット。</param>
      <param name="tokenScope">プロバイダーに関連付けられたトークン スコープ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.String,System.Uri)">
      <summary>共有シークレット トークン プロバイダーを作成します。</summary>
      <returns>共有シークレット トークンを返すための <see cref="T:Microsoft.ServiceBus.TokenProvider" />。</returns>
      <param name="issuerName">発行者名。</param>
      <param name="issuerSecret">発行者シークレット。</param>
      <param name="stsUri">セキュリティ トークン サービス (STS) の URI。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.String,System.Uri,Microsoft.ServiceBus.TokenScope)">
      <summary>共有シークレット トークン プロバイダーを作成します。</summary>
      <returns>作成されたトークン プロバイダー。</returns>
      <param name="issuerName">発行者名。</param>
      <param name="issuerSecret">発行者シークレット。</param>
      <param name="stsUri">セキュリティ トークン サービス (STS) の URI。</param>
      <param name="tokenScope">プロバイダーに関連付けられたトークン スコープ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSimpleWebTokenProvider(System.String)">
      <summary>単純 Web トークン プロバイダーを作成します。</summary>
      <returns>単純 Web トークンを返すための <see cref="T:Microsoft.ServiceBus.TokenProvider" />。</returns>
      <param name="token">単純 Web トークンを表す文字列。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSimpleWebTokenProvider(System.String,Microsoft.ServiceBus.TokenScope)">
      <summary>単純 Web トークン プロバイダーを作成します。</summary>
      <returns>作成された単純 Web トークン プロバイダー。</returns>
      <param name="token">単純 Web トークンを表す文字列。</param>
      <param name="tokenScope">プロバイダーに関連付けられたトークン スコープ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSimpleWebTokenProvider(System.String,System.Uri)">
      <summary>単純 Web トークン プロバイダーを作成します。</summary>
      <returns>単純 Web トークンを返すための <see cref="T:Microsoft.ServiceBus.TokenProvider" />。</returns>
      <param name="token">単純 Web トークンを表す文字列。</param>
      <param name="stsUri">セキュリティ トークン サービス (STS) の URI。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSimpleWebTokenProvider(System.String,System.Uri,Microsoft.ServiceBus.TokenScope)">
      <summary>単純 Web トークン プロバイダーを作成します。</summary>
      <returns>作成された単純 Web トークン プロバイダー。</returns>
      <param name="token">単純 Web トークンを表す文字列。</param>
      <param name="stsUri">セキュリティ トークン サービス (STS) の URI。</param>
      <param name="tokenScope">プロバイダーに関連付けられたトークン スコープ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateWindowsTokenProvider(System.Collections.Generic.IEnumerable{System.Uri})">
      <summary>ウィンドウ トークン プロバイダーを作成します。</summary>
      <returns>ウィンドウ トークンを返すための <see cref="T:Microsoft.ServiceBus.TokenProvider" />。</returns>
      <param name="stsUris">セキュリティ トークン サービス (STS) の URI。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateWindowsTokenProvider(System.Collections.Generic.IEnumerable{System.Uri},System.Net.NetworkCredential)">
      <summary>ウィンドウ トークン プロバイダーを作成します。</summary>
      <returns>ウィンドウ トークンを返すための <see cref="T:Microsoft.ServiceBus.TokenProvider" />。</returns>
      <param name="stsUris">セキュリティ トークン サービス (STS) の URI。</param>
      <param name="credential">ユーザー資格情報。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.EndGetToken(System.IAsyncResult)">
      <summary>セキュリティ トークンを取得する非同期操作を完了します。</summary>
      <returns><see cref="T:System.IdentityModel.Tokens.SecurityToken" />オブジェクト。</returns>
      <param name="result">トークンを取得する非同期操作を参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.EndGetWebToken(System.IAsyncResult)">
      <summary>Web トークンを取得する非同期操作を完了します。</summary>
      <returns>Web トークンを表す <see cref="T:System.String" />。</returns>
      <param name="result">Web トークンを取得する非同期操作を参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.GetTokenAsync(System.String,System.String,System.Boolean,System.TimeSpan)">
      <summary>プロバイダーのトークンを非同期的に取得します。</summary>
      <returns>非同期操作の結果。</returns>
      <param name="appliesTo">アクセス トークンが適用される URI。</param>
      <param name="action">要求アクション。</param>
      <param name="bypassCache">キャッシュ内の既存のトークン情報を無視する場合は true、キャッシュ内のトークン情報を使用する場合は false。</param>
      <param name="timeout">セキュリティ トークンを取得するメッセージのタイムアウト値を指定する期間。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.GetWebTokenAsync(System.String,System.String,System.Boolean,System.TimeSpan)">
      <summary>プロバイダーの Web トークンを非同期的に取得します。</summary>
      <returns>非同期操作の結果。</returns>
      <param name="appliesTo">アクセス トークンが適用される URI。</param>
      <param name="action">要求アクション。</param>
      <param name="bypassCache">キャッシュ内の既存のトークン情報を無視する場合は true、キャッシュ内のトークン情報を使用する場合は false。</param>
      <param name="timeout">セキュリティ トークンを取得するメッセージのタイムアウト値を指定する期間。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.TokenProvider.IsWebTokenSupported">
      <summary>Web トークンがこのプロバイダーでサポートされているかどうかを示す値を取得または設定します。</summary>
      <returns>Web トークンがこのプロバイダーにサポートされている場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.NormalizeAppliesTo(System.String)">
      <summary>トークン プロバイダーと同じ値のオブジェクトを返します。</summary>
      <returns>返されたオブジェクト。</returns>
      <param name="appliesTo">アクセス トークンが適用される URI。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.OnBeginGetToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>BeginGetToken メソッドを呼び出した後に実行します。</summary>
      <returns>トークンを取得する非同期操作を参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="appliesTo">アクセス トークンが適用される URI。</param>
      <param name="action">要求アクション。</param>
      <param name="timeout">セキュリティ トークンを取得するメッセージのタイムアウト値を指定する期間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.OnBeginGetWebToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>BeginGetWebToken メソッドを呼び出した後に実行します。</summary>
      <returns>Web トークンを取得する非同期操作を参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="appliesTo">アクセス トークンが適用される URI。</param>
      <param name="action">要求アクション。</param>
      <param name="timeout">セキュリティ トークンを取得するメッセージのタイムアウト値を指定する期間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.OnEndGetToken(System.IAsyncResult,System.DateTime@)">
      <summary>EndGetToken メソッドを呼び出した後に実行します。</summary>
      <returns><see cref="T:System.IdentityModel.Tokens.SecurityToken" />オブジェクト。</returns>
      <param name="result">トークンを取得する非同期操作を参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</param>
      <param name="cacheUntil">このメソッドが返されると、キャッシュ内のトークン情報の有効期限日時が含まれます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.OnEndGetWebToken(System.IAsyncResult,System.DateTime@)">
      <summary>EndGetWebToken メソッドを呼び出した後に実行します。</summary>
      <returns>Web トークンを表す <see cref="T:System.String" />。</returns>
      <param name="result">Web トークンを取得する非同期操作を参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</param>
      <param name="cacheUntil">このメソッドが返されると、キャッシュ内のトークン情報の有効期限日時が含まれます。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.TokenProvider.StripQueryParameters">
      <summary>トークン プロバイダーがクエリ パラメーターを取り除くかどうかを取得します。</summary>
      <returns>トークン プロバイダーがクエリ パラメーターを取り除く場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.TokenProvider.TokenScope">
      <summary>プロバイダーに関連付けられたトークン スコープを取得または設定します。</summary>
      <returns>プロバイダーに関連付けられたトークン スコープ。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.TokenProvider.Key">
      <summary>トークンに関連付けられたキーを表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.Key.#ctor(System.String,System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.TokenProvider.Key" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="appliesTo">キーが適用されるアドレスを指定します。</param>
      <param name="claim">特定のユーザー、アプリケーション、コンピューター、またはその他のエンティティを指定します。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.Key.Equals(Microsoft.ServiceBus.TokenProvider.Key)">
      <summary>指定されたキーが現在のオブジェクトと等しいかどうかを決定します。</summary>
      <returns>指定されたオブジェクトが現在のオブジェクトと等しい場合は true、それ以外の場合は false です。</returns>
      <param name="other">現在のオブジェクトと比較するキー。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.Key.Equals(System.Object)">
      <summary>指定されたオブジェクトが現在のオブジェクトと等しいかどうかを決定します。</summary>
      <returns>指定されたオブジェクトが現在のオブジェクトと等しい場合は true、それ以外の場合は false です。</returns>
      <param name="obj">現在のオブジェクトと比較するオブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.Key.GetHashCode">
      <summary>キーのハッシュ コードを返します。</summary>
      <returns>キーのハッシュ コード。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.TokenProviderException">
      <summary>Service Bus のトークン プロバイダーに関する例外を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProviderException.#ctor(System.String,System.Exception)">
      <summary><see cref="T:Microsoft.ServiceBus.TokenProviderException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外メッセージ。</param>
      <param name="innerException">例外の原因となったエラー。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.TokenScope">
      <summary>サービス バスのトークン スコープを列挙します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenScope.Entity">
      <summary>エンティティ。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenScope.Namespace">
      <summary>名前空間。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.TransportClientEndpointBehavior">
      <summary>特定のエンドポイントの Service Bus 資格情報を指定するために使用される WCF エンドポイントの動作について説明します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.TransportClientEndpointBehavior.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.TransportClientEndpointBehavior" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.TransportClientEndpointBehavior.#ctor(Microsoft.ServiceBus.TokenProvider)">
      <summary><see cref="T:Microsoft.ServiceBus.TransportClientEndpointBehavior" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="tokenProvider">バインディング パラメーターとして使用されるトークン プロバイダー。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TransportClientEndpointBehavior.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>ランタイムで指定されたデータを、指定されたバインディングに渡し、Service Bus 資格情報の動作をサポートします。</summary>
      <param name="endpoint">変更するエンドポイント。</param>
      <param name="bindingParameters">バインディング要素が動作をサポートするために必要なオブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TransportClientEndpointBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>エンドポイント全体でクライアントの変更または拡張を実装します。</summary>
      <param name="endpoint">カスタマイズされるエンドポイント。</param>
      <param name="clientRuntime">カスタマイズされるクライアント ランタイム。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TransportClientEndpointBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>エンドポイント全体でサービスの変更または拡張を実装します。</summary>
      <param name="endpoint">コントラクトを公開するエンドポイント。</param>
      <param name="endpointDispatcher">変更または拡張するエンドポイント ディスパッチャー。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TransportClientEndpointBehavior.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>エンドポイントが、このインスタンスの動作で変更できる有効な Windows Azure Service Bus エンドポイントであることを確認します。</summary>
      <param name="endpoint">検証するエンドポイント。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.TransportClientEndpointBehavior.TokenProvider">
      <summary>バインディング パラメーターとして使用されるトークン プロバイダーを取得または設定します。</summary>
      <returns>バインディング パラメーターとして使用されるトークン プロバイダー。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.WebHttpRelayBinding">
      <summary>SOAP メッセージの代わりに HTTP 要求を通じて公開される Web サービスのエンドポイントを構成するために使用されるバインディング。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.WebHttpRelayBinding.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.WebHttpRelayBinding" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.WebHttpRelayBinding.#ctor(Microsoft.ServiceBus.EndToEndWebHttpSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType)">
      <summary>指定されたタイプのセキュリティとリレー クライアント認証を使用して、<see cref="T:Microsoft.ServiceBus.WebHttpRelayBinding" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="securityMode">バインディングで使用されるセキュリティのタイプ。</param>
      <param name="relayClientAuthenticationType">リレーで使用されるクライアント認証のタイプ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.WebHttpRelayBinding.#ctor(System.String)">
      <summary>指定された構成名を使用して、<see cref="T:Microsoft.ServiceBus.WebHttpRelayBinding" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="configurationName">使用する構成。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.AllowCookies">
      <summary><see cref="T:Microsoft.ServiceBus.WebHttpRelayBinding" /> を介して送信されるメッセージで Cookie を許可するかどうかを指定する値を取得または設定します。</summary>
      <returns>Cookie が許可されている場合は true を返します。それ以外の場合は、false です。既定値は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.ContentTypeMapper">
      <summary>コンテンツ タイプ マッパーを取得または設定します。</summary>
      <returns>コンテンツ タイプ マッパー。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.WebHttpRelayBinding.CreateBindingElements">
      <summary>バインディングのバインディング要素を含むコレクションを作成します。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.WebHttpRelayBinding" /> で 使用されるバインディング要素の順序付きスタックを含む <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.EnvelopeVersion">
      <summary>SOAP エンベロープ バージョンを取得します。</summary>
      <returns><see cref="T:System.ServiceModel.EnvelopeVersion" /> を返します。<see cref="T:Microsoft.ServiceBus.WebHttpRelayBinding" /> は SOAP を使用しないため、これは常に EnvelopeVersion.None を返します。<see cref="T:Microsoft.ServiceBus.WebHttpRelayBinding" /> は SOAP メッセージングで使用すべきバインディングではありません。ただし、Windows Azure Service Bus は SOAP をサポートします。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.HostNameComparisonMode">
      <summary>ホスト名で使用される比較モードを取得または設定します。</summary>
      <returns>ホスト名で使用される比較モード。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.IsDynamic">
      <summary>リレー バインディングが動的であるかどうかを取得または設定します。</summary>
      <returns>リレー バインディングが動的な場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.MaxBufferPoolSize">
      <summary>トランスポートで使用される最大バッファー プール サイズを取得または設定します。</summary>
      <returns>最大バッファー プール サイズを返します。規定値は 524288 バイトです。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.MaxBufferSize">
      <summary>トランスポートでサポートされる最大バッファー サイズを取得または設定します。</summary>
      <returns>最大バッファー サイズを返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.MaxReceivedMessageSize">
      <summary>受信可能な最大許容メッセージ サイズを取得または設定します。</summary>
      <returns>最大許容メッセージ サイズを返します。既定サイズは 65,536 バイトです。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.ProxyAddress">
      <summary>HTTP 要求に使用するプロキシのアドレスを含む URI を取得または設定します。</summary>
      <returns>HTTP 要求に使用するプロキシのアドレスを含む <see cref="T:System.Uri" /> を返します。既定値は null です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.ReaderQuotas">
      <summary>処理されたメッセージに対して xml リーダー クォータを取得または設定します。</summary>
      <returns>リーダー クォータを含む <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.Scheme">
      <summary>バインディングで使用されるエンドポイントのスキームを取得します。</summary>
      <returns>スキームを返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.Security">
      <summary>現在のインスタンスのセキュリティ設定を取得します。</summary>
      <returns>セキュリティ設定を含む <see cref="T:Microsoft.ServiceBus.WebHttpRelaySecurity" /> を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
      <summary>着信要求が同期的に処理されるか、非同期に処理されるかを示す値を取得します。</summary>
      <returns>要求が同期的に処理される場合は true、非同期的に処理される場合は false です。要求を非同期的に処理するため、既定は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.TransferMode">
      <summary>転送モードを取得または設定します。</summary>
      <returns>転送モードを含む <see cref="T:System.ServiceModel.TransferMode" /> を返します。既定は Buffered です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.UseDefaultWebProxy">
      <summary>ユーザー固有の設定ではなく、コンピュータ全体のプロキシ設定を使用するかどうかを示す値を取得または設定します。</summary>
      <returns>コンピューター全体のプロキシ設定を使用する場合は true になります。それ以外の場合は false です。既定の設定は true です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.WriteEncoding">
      <summary>メッセージ テキストの書き込みに使用される文字エンコードを取得または設定します。</summary>
      <returns>エンコードを含む <see cref="T:System.Text.Encoding" /> を返します。既定値は utf8encoding です。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.WebHttpRelaySecurity">
      <summary>HTTP 要求を受信するように構成されたサービス エンドポイントで使用できるセキュリティのタイプを指定します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelaySecurity.Mode">
      <summary><see cref="T:Microsoft.ServiceBus.WebHttpRelayBinding" /> で HTTP 要求を受信するように構成されたエンドポイントで使用されるセキュリティ モードを取得または設定します。</summary>
      <returns>トランスポート レベルのセキュリティ、資格情報のみが使われているか、またはエンドポイントでセキュリティが使用されていないかどうかを示す <see cref="T:Microsoft.ServiceBus.EndToEndWebHttpSecurityMode" /> を返します。既定値は None です。</returns>
      <exception cref="ArgumentOutOfRangeException">この値は有効な EndToEndWebHttpSecurityMode ではありません。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelaySecurity.RelayClientAuthenticationType">
      <summary>サービス クライアントが使用するリレー クライアント認証タイプを取得または設定します。</summary>
      <returns>リレー クライアント認証タイプを含む <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" /> を返します。既定値は RelayClientAuthenticationType.RelayAccessToken です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelaySecurity.Transport">
      <summary>バインディングのトランスポート レベルのセキュリティ設定を取得または設定します。</summary>
      <returns>バインディングを含む <see cref="T:Microsoft.ServiceBus.HttpRelayTransportSecurity" /> を返します。設定される既定値は、ClientCredentialType は None、ProxyCredentialType は None、Realm = &quot;&quot; です。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.WindowsTokenProvider">
      <summary>サービス バスのトークン プロバイダーを表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.WindowsTokenProvider.BuildKey(System.String,System.String)">
      <summary>トークン プロバイダーのキーを生成します。</summary>
      <returns>生成されたキー。</returns>
      <param name="appliesTo">アクセス トークンが適用される URI。</param>
      <param name="action">要求アクション。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.WindowsTokenProvider.NormalizeAppliesTo(System.String)">
      <summary>ターゲット アドレスの URI 正規化フォームを返します。</summary>
      <returns>ターゲット アドレスの URI 正規化フォーム。</returns>
      <param name="appliesTo">正規化が適用される URI。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.WindowsTokenProvider.OnBeginGetToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>プロバイダー サービスの開始時にトークンを取得します。</summary>
      <returns>操作の結果。</returns>
      <param name="appliesTo">トークンが適用されるオブジェクト。</param>
      <param name="action">アクション。</param>
      <param name="timeout">操作の期間。</param>
      <param name="callback">プロバイダーの引数。</param>
      <param name="state">プロバイダーの状態。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.WindowsTokenProvider.OnBeginGetWebToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>プロバイダー サービスの開始時に Web トークンを取得します。</summary>
      <returns>操作の結果。</returns>
      <param name="appliesTo">トークンが適用されるオブジェクト。</param>
      <param name="action">アクション。</param>
      <param name="timeout">操作の期間。</param>
      <param name="callback">プロバイダーの引数。</param>
      <param name="state">プロバイダーの状態。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.WindowsTokenProvider.OnEndGetToken(System.IAsyncResult,System.DateTime@)">
      <summary>プロバイダー サービスが停止したときにトークンを取得します。</summary>
      <returns>取得したトークン。</returns>
      <param name="result">操作の結果。</param>
      <param name="cacheUntil">プロバイダーがデータを格納すると指定された期間。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.WindowsTokenProvider.OnEndGetWebToken(System.IAsyncResult,System.DateTime@)">
      <summary>プロバイダー サービスが停止したときに Web トークンを取得します。</summary>
      <returns>取得された Web トークン。</returns>
      <param name="result">操作の結果。</param>
      <param name="cacheUntil">プロバイダーがデータを格納すると指定された期間。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.WS2007HttpRelayBinding">
      <summary><see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" /> から派生し、Security、ReliableSession、TransactionFlow バインディング要素の更新されたバージョンへのサポートを提供する相互運用可能なバインディングを表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.WS2007HttpRelayBinding.#ctor">
      <summary>バインディングで使用されるセキュリティの指定されたタイプで、<see cref="T:Microsoft.ServiceBus.WS2007HttpRelayBinding" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.WS2007HttpRelayBinding.#ctor(Microsoft.ServiceBus.EndToEndSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType)">
      <summary>バインディングで使用されるセキュリティとリレー クライアント認証の指定されたタイプで、<see cref="T:Microsoft.ServiceBus.WS2007HttpRelayBinding" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="securityMode">SOAP メッセージでクライアントのために使用されるセキュリティのタイプを指定するセキュリティー モード。</param>
      <param name="relayClientAuthenticationType">クライアントが使用する認証のタイプ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.WS2007HttpRelayBinding.#ctor(Microsoft.ServiceBus.EndToEndSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType,System.Boolean)">
      <summary>バインディングで使用されるセキュリティの指定されたタイプ、クライアント リレーで指定された認証、信頼できるセッションが有効かどうかを示す値で、<see cref="T:Microsoft.ServiceBus.WS2007HttpRelayBinding" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="securityMode">SOAP メッセージでクライアントのために使用されるセキュリティのタイプを指定します。</param>
      <param name="relayClientAuthenticationType">クライアントが使用する認証のタイプ。</param>
      <param name="reliableSessionEnabled">信頼性の高いセッションが有効になっている場合は true、それ以外の場合は false です。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.WS2007HttpRelayBinding.#ctor(System.String)">
      <summary>構成名で指定されたバインディングで、<see cref="T:Microsoft.ServiceBus.WS2007HttpRelayBinding" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="configName">バインディング構成名: <see cref="T:Microsoft.ServiceBus.Configuration.WS2007HttpRelayBindingElement" /></param>
    </member>
    <member name="M:Microsoft.ServiceBus.WS2007HttpRelayBinding.CreateMessageSecurity">
      <summary>現在のバインディングからセキュリティ バインディング要素を取得します。</summary>
      <returns>現在のセキュリティ バインディング要素を含む <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> を返します。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.WSHttpRelayBinding">
      <summary>分散トランザクションとクラウドを介した安全で信頼性の高いセッションをサポートする相互運用可能なバインディングを表します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelayBinding.AllowCookies">
      <summary>クライアントが Cookie を受け入れ、将来の要求でこれを伝達するかどうかを示す値を取得または設定します。</summary>
      <returns>バインディングで Cookie が許可される場合は  <see cref="T:System.Boolean" />.true、その他の場合は false を返します。既定値は false です。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.WSHttpRelayBinding.CreateMessageSecurity">
      <summary>現在のバインディングからセキュリティ バインディング要素を返します。</summary>
      <returns>現在のバインディングを含む <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> を返します。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.WSHttpRelayBinding.GetTransport">
      <summary>現在のバインディングからトランスポート バインディング要素を返します。</summary>
      <returns><see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> を返します。現在のバインディングからのトランスポート バインディング要素が含まれています。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelayBinding.Security">
      <summary>このバインディングで使用されるセキュリティ設定を取得します。</summary>
      <returns>このバインディングで使用されるセキュリティを含む <see cref="T:Microsoft.ServiceBus.WSHttpRelaySecurity" /> を返します。Mode プロパティの既定値は Message です。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.WSHttpRelayBindingBase">
      <summary><see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" /> と <see cref="T:Microsoft.ServiceBus.WS2007FederationHttpRelayBinding" /> に共通のメンバーを持つ基本クラスを提供します。 </summary>
    </member>
    <member name="M:Microsoft.ServiceBus.WSHttpRelayBindingBase.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.WSHttpRelayBindingBase" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.WSHttpRelayBindingBase.#ctor(System.Boolean)">
      <summary>信頼できるセッションが有効になっているかどうかを示す値で <see cref="T:Microsoft.ServiceBus.WSHttpRelayBindingBase" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="reliableSessionEnabled">信頼性の高いセッションが有効になっている場合は true、それ以外の場合は false です。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.WSHttpRelayBindingBase.CreateBindingElements">
      <summary>現在の Windows Azure Service Bus バインディングに含まれるバインディング要素の順序付きコレクションを返します。</summary>
      <returns><see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> を返します。バインディングのオブジェクトが含まれています。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.WSHttpRelayBindingBase.CreateMessageSecurity">
      <summary>派生クラスに実装すると、現在の Windows Azure Service Bus バインディングからセキュリティ バインディング要素を返します。</summary>
      <returns><see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> を返します。現在の Windows Azure Service Bus バインディングのセキュリティ バインディング要素が含まれています。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.EnvelopeVersion">
      <summary>このバインディングによって処理されるメッセージに使用される SOAP のバージョンを取得します。</summary>
      <returns><see cref="T:System.ServiceModel.EnvelopeVersion" /> を返します。この Windows Azure Service Bus バインディングで使用されるエンベロープ バージョンの値です。値は常に SOAP 1.2 です。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.WSHttpRelayBindingBase.GetTransport">
      <summary>派生クラスに実装すると、現在の Windows Azure Service Bus バインディングからトランスポート バインディング要素を返します。</summary>
      <returns><see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> を返します。現在の Windows Azure Service Bus バインディングからのトランスポート バインディング要素が含まれています。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.HostNameComparisonMode">
      <summary>ホスト名で使用される比較モードを取得または設定します。</summary>
      <returns>ホスト名で使用される比較モード。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.IsDynamic">
      <summary>リレー バインディングが動的であるかどうかを取得または設定します。</summary>
      <returns>リレー バインディングが動的な場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.MaxBufferPoolSize">
      <summary>この Windows Azure Service Bus バインディングを使用してエンドポイントに必要なバッファーを管理するバッファー マネージャに割り当てられたメモリの最大量を取得または設定します。</summary>
      <returns><see cref="T:System.Int64" /> を返します。このバインディングで構成されたエンドポイントによって使用されるバッファーのプールの最大サイズ (バイト) です。既定値は 65,536 バイトです。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.MaxReceivedMessageSize">
      <summary>Windows Azure Service Bus バインディングで処理できるメッセージの最大サイズを取得または設定します。</summary>
      <returns><see cref="T:System.Int64" /> を返します。Windows Azure Service Bus バインディングによって処理されるメッセージの最大サイズ (バイト) です。既定値は 65,536 バイトです。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.MessageEncoding">
      <summary>SOAP メッセージのエンコードに MTOM または Text/XML を使用するかどうかを取得または設定します。</summary>
      <returns><see cref="T:System.ServiceModel.WSMessageEncoding" /> を返します。SOAP メッセージのエンコードに MTOM または Text/XML を使用するかどうかを示します。既定値は Text/XMLです。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.ProxyAddress">
      <summary>HTTP プロキシの URI アドレスを取得または設定します。</summary>
      <returns><see cref="T:System.Uri" /> を返します。HTTP プロキシのアドレスとして機能します。既定値は null です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.ReaderQuotas">
      <summary>この Security Bus バインディングで構成されたエンドポイントで処理できる SOAP メッセージの複雑さに対する制約を取得または設定します。</summary>
      <returns><see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> を返します。複雑さの制約を指定します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.ReliableSession">
      <summary>システムの提供するバインディングのいずれかを使用する際に利用できる、信頼性の高い Windows Azure Service Bus セッション バインディング要素のプロパティに簡単にアクセスできるオブジェクトを取得します。</summary>
      <returns><see cref="T:System.ServiceModel.OptionalReliableSession" /> を返します。システムの提供するバインディングのいずれかを使用する際に利用できる、信頼性の高い Windows Azure Service Bus セッション バインディング要素のプロパティに簡単にアクセスできます。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.Scheme">
      <summary>このバインディングで構成されているチャネルとリスナーの URI トランスポート スキームを取得します。</summary>
      <returns>URI トランスポート スキームを表す <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
      <summary>着信要求をより効率的に同期的または非同期的に処理できるかを示す値を取得します。</summary>
      <returns>要求をより効率的に同期的に処理できる場合は true、それ以外の場合は false です。要求を非同期的に処理するため、既定は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.TextEncoding">
      <summary>メッセージ テキストに使用される文字エンコードを取得または設定します。</summary>
      <returns>メッセージ テキストに使用される文字エンコード。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.UseDefaultWebProxy">
      <summary>自動的に構成されたシステムの HTTP プロキシを使用するかどうかを示す値を取得または設定します (使用可能な場合)。</summary>
      <returns>自動的に構成されたシステムの HTTP プロキシを使用する必要がある場合は true (使用可能な場合)、それ以外の場合は false です。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.WSHttpRelaySecurity">
      <summary><see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" /> のセキュリティ設定を表します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelaySecurity.Message">
      <summary>この Windows Azure Service Bus バインディングのメッセージ レベルのセキュリティ設定を取得します。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.NonDualMessageSecurityOverRelayHttp" /> を返します。セキュリティ設定が含まれています。既定値には以下が含まれます: 既定が true に設定されている場合は EstablishSecurityContext、Client CredentialType は Windows、AlgorithmSuite は Basic256、NegotiateService Credential は true です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelaySecurity.Mode">
      <summary>この Windows Azure Service Bus バインディングのメッセージ セキュリティ モードを指定します。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.EndToEndSecurityMode" /> を返します。この Windows Azure Service Bus バインディングのセキュリティ モードが含まれています。既定は Transport です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelaySecurity.RelayClientAuthenticationType">
      <summary>サービス アプリケーションまたはクライアント アプリケーションが Windows Azure Service Bus に提供するために必要な認証タイプを取得または設定します。</summary>
      <returns>サービス アプリケーションまたはクライアント アプリケーションが Windows Azure サービス バスに提供するために必要な認証のタイプ。既定は <see cref="F:Microsoft.ServiceBus.RelayClientAuthenticationType.RelayAccessToken" /> です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelaySecurity.Transport">
      <summary>この Windows Azure Service Bus バインディングのトランスポート レベルのセキュリティ設定を含むオブジェクトを取得します。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.HttpRelayTransportSecurity" /> を返します。このアイテムのトランスポート セキュリティが含まれています。既定値には、ClientCredentialType の None と ProxyCredentialType の None が含まれます。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement">
      <summary>TCP や名前付きパイプなどの接続指向トランスポートに共通する追加プロパティでベース <see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> を補完する抽象クラス。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>指定したタイプのチャネル ファクトリを構築できるかどうかを示します。</summary>
      <returns>チャネル ファクトリを構築できる場合は true、それ以外の場合は false です。</returns>
      <param name="context">チャネルのバインディング コンテキスト。</param>
      <typeparam name="TChannel">チェックするチャネルのタイプ。</typeparam>
      <exception cref="ArgumentNullException"><paramref name="context" /> は null です。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>バインディング要素が特定のタイプのチャネルのリスナーを構築できるかどうかを示す値を返します。</summary>
      <returns>IChannel タイプの IChannelListener&lt;TChannel&gt; をバインディング要素で構築できる場合は true、それ以外の場合は false です。</returns>
      <param name="context">バインディング要素のコンテキストを提供するバインディング コンテキスト。</param>
      <typeparam name="TChannel">チェックするチャネルのタイプ。</typeparam>
      <exception cref="ArgumentNullException"><paramref name="context" /> は null です。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.ChannelInitializationTimeout">
      <summary>タイムアウトの前にチャネルの初期化を完了する必要がある期間を指定するタイムスパンを取得または設定します。</summary>
      <returns>初期化がタイムアウトした後の <see cref="T:System.TimeSpan" /> を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.ConnectionBufferSize">
      <summary>クライアントまたはサービスから接続してシリアル化されたメッセージのチャンクを送信するために使用されるバッファーのサイズを取得および設定します。</summary>
      <returns>接続バッファーのサイズ。既定値は 8192 バイトです。</returns>
      <exception cref="ArguementOutOfRangeException">値がゼロ未満です。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>バインディング スタック (存在する場合) からプロパティを取得します。</summary>
      <returns>バインディング スタックのオブジェクト (存在する場合)、またはこれが見つからない場合は null。</returns>
      <param name="context">バインディング コンテキスト。</param>
      <typeparam name="T">プロパティのタイプ。</typeparam>
    </member>
    <member name="P:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.HostNameComparisonMode">
      <summary>URI で一致するときに、ホスト名がサービスに到達するために使用されるかどうかを示す値を取得または設定します。</summary>
      <returns>ホスト名を使用してサービスに到達するかどうかを決定する <see cref="T:System.ServiceModel.HostNameComparisonMode" /> を返します。既定値は StrongWildCard で、比較でホスト名とポート番号を無視します。</returns>
      <exception cref="ArguementOutOfRangeException">この値は有効な HostnameComparisonMode ではありません。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.MaxBufferSize">
      <summary>使用するバッファーの最大サイズを取得または設定します。</summary>
      <returns>メモリ内の受信メッセージのバッファーリングに使用されるバイトの最大数。既定値は 65,536 バイトです。</returns>
      <exception cref="ArguementOutOfRangeException">値はゼロ以下です。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.MaxOutputDelay">
      <summary>送信前にメッセージのチャンクまたは完全なメッセージをメモリ内にバッファーリングされたままにできる最大時間間隔を取得または設定します。</summary>
      <returns>送信前にメッセージのチャンクまたは完全なメッセージをメモリ内にバッファーリングされたままにできる最大時間間隔を指定する <see cref="T:System.TimeSpan" /> を返します。既定値は 2 秒です。このプロパティは、発信メッセージの AllowedOutputBatching プロパティが true に設定されている場合にのみ意味を持ちます。それ以外の場合、この値は無視され、メッセージは直ちに送信されます。</returns>
      <exception cref="ArguementOutOfRangeException">値がゼロ未満です。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.MaxPendingAccepts">
      <summary>サービスへの着信接続の処理に使用できる保留中の非同期受入操作の最大数を取得または設定します。</summary>
      <returns>サービスが同時に受け入れることができる接続の最大数。既定値は 65,536 です。</returns>
      <exception cref="ArguementOutOfRangeException">値はゼロ以下です。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.MaxPendingConnections">
      <summary>サービスのディスパッチを待機している接続の最大数を取得または設定します。</summary>
      <returns>サービスのディスパッチを待機している着信接続の最大数。既定値は 65,536 です。</returns>
      <exception cref="ArguementOutOfRangeException">値はゼロ以下です。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.TransferMode">
      <summary>メッセージが接続指向トランスポートでバッファーリングまたはストリーミングされるかを指定する値を取得または設定します。</summary>
      <returns>チャネルがメッセージ転送のストリーミング モードまたはバッファーリング モードを使用するかどうかを示す <see cref="T:System.ServiceModel.TransferMode" /> を返します。既定は Buffered です。</returns>
      <exception cref="ArguementOutOfRangeException">この値は有効な TransferMode ではありません。</exception>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.AddressConfigurationElement">
      <summary>アドレス構成を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.AddressConfigurationElement.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Configuration.AddressConfigurationElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.AddressConfigurationElement.Value">
      <summary>アドレスの URI を取得または設定します。</summary>
      <returns>アドレスの URI。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.AddressConfigurationElementCollection">
      <summary>アドレス構成の要素のコレクションを表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.AddressConfigurationElementCollection.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Configuration.AddressConfigurationElementCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.AddressConfigurationElementCollection.Addresses">
      <summary>コレクション内の要素のアドレスを取得します。</summary>
      <returns>コレクション内の要素のアドレス。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingCollectionElement">
      <summary><see cref="T:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement" /> インスタンスのコレクションを保持する構成セクションを表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingCollectionElement.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingCollectionElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement">
      <summary>ASMX ベースのサービスなどの WS-I Basic Profile 1.1 準拠の Web サービスと通信したり、Windows Azure Service Bus を介して ASMX ベースのクライアントからのメッセージを受け入れたりする場合に使用されるバインディングを指定する構成要素を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.#ctor(System.String)">
      <summary>指定された名前を使用して <see cref="T:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">バインディング要素の名前。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.AllowCookies">
      <summary>クライアントが Cookie を受け入れ、将来の要求に対してこれを伝達するかどうかを示すブール値を取得または設定します。</summary>
      <returns>クライアントが Cookie を受け入れ、将来の要求に対してこれを伝達する場合は true、それ以外の場合は false です。既定値は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.BindingElementType">
      <summary>このバインディング要素のタイプを取得します。</summary>
      <returns>バインディング要素のタイプを含む <see cref="T:System.Type" /> を返します。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>指定されたバインディング コレクションの内容を使用して、このバインディング構成要素を初期化します。</summary>
      <param name="binding">バインディング要素のコレクション。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.IsDynamic">
      <summary>バインディング要素が動的であるかどうかを取得または設定します。</summary>
      <returns>バインディング要素が動的な場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.MaxBufferPoolSize">
      <summary>バインディングによって処理されたメッセージを格納するバッファー プールの最大サイズを取得または設定します。</summary>
      <returns>バッファー プール サイズを含む <see cref="T:System.Int64" /> を返します。既定値は 512*1024 バイトです。最小値は 0 です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.MaxBufferSize">
      <summary>このバインディングで構成されたエンドポイントに対してメッセージが処理されている間にメッセージを格納するバッファーの最大サイズを取得または設定します。</summary>
      <returns>最大バッファー サイズを返します。既定値は 65,536 バイトです。最小値は 1 バイトです。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.MaxReceivedMessageSize">
      <summary>このバインディングで構成されたチャネルで受信できるメッセージの最大メッセージ サイズ (ヘッダーを含む) をバイト数で取得または設定します。</summary>
      <returns>受信メッセージの最大サイズ。既定値は 65,536 バイトです。最小値は 1 バイトです。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.MessageEncoding">
      <summary>SOAP メッセージのエンコードに MTOM またはテキスト/XML を使用するかどうかを示すメッセージング エンコードを取得または設定します。</summary>
      <returns>テキスト/XML または MTOM を含む <see cref="T:System.ServiceModel.WSMessageEncoding" /> を返します。既定値は Text です。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>この構成要素の設定を、指定されたバインディングに適用します。</summary>
      <param name="binding">設定を更新するバインディング。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.Properties">
      <summary>このバインディング構成要素の属性または構成要素オブジェクトにできるオブジェクトのコレクションを取得します。</summary>
      <returns>現在のインスタンスのプロパティを含む <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.ProxyAddress">
      <summary>HTTP プロキシのアドレスを記述する URI を取得または設定します。</summary>
      <returns>URI を含む <see cref="T:System.Uri" /> を返します。既定は null です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.ReaderQuotas">
      <summary>このバインディングで構成されたエンドポイントで処理できる SOAP メッセージの複雑さに制約を与える XML 値を取得または設定します。</summary>
      <returns>リーダー クォータを含む <see cref="T:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement" /> を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.Security">
      <summary>バインディングに使用するセキュリティのタイプを取得します。</summary>
      <returns>バインディングで使用するセキュリティのタイプを指定する <see cref="T:Microsoft.ServiceBus.Configuration.BasicHttpRelaySecurityElement" /> を返します。既定値は None です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.TextEncoding">
      <summary>バインディング上のメッセージの出力に使用する文字セット エンコードを取得または設定します。</summary>
      <returns>テキスト エンコードを含む <see cref="T:System.Text.Encoding" /> を返します。既定値は UTF8 です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.TransferMode">
      <summary>メッセージが要求または応答でバッファーリングされるか、ストリーミングされるかを取得または設定します。</summary>
      <returns>転送モードを含む <see cref="T:System.ServiceModel.TransferMode" /> を返します。既定値は TransferMode.Buffered です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.UseDefaultWebProxy">
      <summary>自動的に構成されたシステムの HTTP プロキシを使用するかどうかを示す値を取得または設定します (使用可能な場合)。</summary>
      <returns>http プロキシを使用する場合は true、それ以外の場合は false です。既定値は true です。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.BasicHttpRelayMessageSecurityElement">
      <summary>SOAP メッセージ セキュリティを構成する構成要素。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.BasicHttpRelayMessageSecurityElement.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Configuration.BasicHttpRelayMessageSecurityElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayMessageSecurityElement.AlgorithmSuite">
      <summary><see cref="T:Microsoft.ServiceBus.Configuration.BasicHttpRelayMessageSecurityElement" /> クラスで使用するセキュリティ アルゴリズムを取得または設定します。</summary>
      <returns>セキュリティ アルゴリズムを含む <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> を返します。既定値は Basic256 です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayMessageSecurityElement.ClientCredentialType">
      <summary>クライアント認証に使用されるクライアント資格情報のタイプを取得または設定します。</summary>
      <returns>資格情報を含む <see cref="T:System.ServiceModel.BasicHttpMessageCredentialType" /> を返します。既定は UserName です。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.BasicHttpRelaySecurityElement">
      <summary>基本的な HTTP リレー バインディングのセキュリティを構成する構成要素を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.BasicHttpRelaySecurityElement.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Configuration.BasicHttpRelaySecurityElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelaySecurityElement.Message">
      <summary><see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" /> のメッセージ レベルのセキュリティ設定を指定する構成要素を取得します。</summary>
      <returns>セキュリティ設定を含む <see cref="T:Microsoft.ServiceBus.Configuration.BasicHttpRelayMessageSecurityElement" /> を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelaySecurityElement.Mode">
      <summary><see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" /> のセキュリティ モードを取得または設定します。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.EndToEndBasicHttpSecurityMode" /> リストから値を返します。既定値は None です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelaySecurityElement.RelayClientAuthenticationType">
      <summary>この構成要素で指定された認証のタイプを取得または設定します。</summary>
      <returns>現在のインスタンスが適用されるバインディング要素によって使用される認証のタイプを含む <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" /> から値を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelaySecurityElement.Transport">
      <summary><see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" />バインディングのトランスポート レベルのセキュリティ設定を指定する構成要素を取得します。</summary>
      <returns>HTTP トランスポートの認証パラメーターを制御するプロパティを含む <see cref="T:Microsoft.ServiceBus.Configuration.HttpRelayTransportSecurityElement" /> を返します。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement">
      <summary>TCP や名前付きパイプなど、接続指向トランスポート バインディング要素に追加の構成設定を提供する構成要素を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>指定された <see cref="T:System.ServiceModel.Channels.BindingElement" /> に、この構成要素の設定を適用します。</summary>
      <param name="bindingElement">設定を更新するバインディング要素。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement.ChannelInitializationTimeout">
      <summary>切断される前にチャネルを初期化状態にできる最大時間を取得または設定します。</summary>
      <returns>切断される前にチャネルを初期化状態にできる最大時間。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement.ConnectionBufferSize">
      <summary>シリアル化されたメッセージの一部をクライアントまたはサービスから接続で送信するために使用されるバッファーのサイズを取得または設定します。</summary>
      <returns>クライアントまたはサービスから接続でシリアル化されたメッセージの一部を送信するために使用されるバッファーのサイズを含む <see cref="T:System.Int32" /> を返します。既定値は 8K です。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>指定された構成要素のコンテンツをこの構成要素にコピーします。</summary>
      <param name="from">コピーする構成要素。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement.HostNameComparisonMode">
      <summary>URI で一致するときに、ホスト名がサービスに到達するために使用されるかどうかを示す値を取得または設定します。</summary>
      <returns>受信要求をエンドポイント URI にルーティングするときにホスト名が含まれているかどうかを示す有効な HostnameComparisonMode 値。既定値は StrongWildcard で、一致するホスト名を無視します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement.MaxBufferSize">
      <summary>使用するバッファーの最大サイズを取得または設定します。</summary>
      <returns>メモリ内の受信メッセージのバッファーリングに使用されるバイトの最大数。既定値は 65,536 バイトです。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement.MaxOutputDelay">
      <summary>送信される前にメッセージの一部または完全なメッセージをメモリ内にバッファーリングされたままにできる最大時間間隔を取得または設定します。</summary>
      <returns>送信される前にメッセージの一部または完全なメッセージをメモリ内にバッファーリングされたままにできる最大時間間隔。既定値は 2 秒です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement.MaxPendingAccepts">
      <summary>サービスの受信接続の処理に使用できる保留中の非同期受入スレッドの最大数を取得または設定します。</summary>
      <returns>サービスが受け入れることのできる保留中のメッセージの最大数。既定値は 65,536 です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement.MaxPendingConnections">
      <summary>保留中の接続の最大数を取得または設定します。</summary>
      <returns>保留中の接続の最大数。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement.Properties">
      <summary>この構成要素の属性または ConfigurationElement オブジェクトにできる ConfigurationProperty オブジェクトのコレクションを含む ConfigurationPropertyCollection インスタンスを取得します。</summary>
      <returns>この構成要素の属性または ConfigurationElement オブジェクトにできる ConfigurationProperty オブジェクトのコレクションを含む <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> インスタンスを返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement.TransferMode">
      <summary>メッセージが接続指向トランスポートでバッファーリングまたはストリーミングされるかを指定する値を取得または設定します。</summary>
      <returns>チャネルがメッセージ転送のストリーミング モードまたはバッファー モードを使用するかどうかを指定する有効な <see cref="T:System.ServiceModel.TransferMode" /> 値を返します。既定は Buffered です。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.ConnectionStatusElement">
      <summary>接続ステータスを説明する構成要素を読み取ります。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.ConnectionStatusElement.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Configuration.ConnectionStatusElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.ConnectionStatusElement.BehaviorType">
      <summary>動作のタイプを取得します。</summary>
      <returns>動作のタイプを含む <see cref="T:System.Type" /> を返します。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.ConnectionStatusElement.CreateBehavior">
      <summary>現在の構成設定に基づいて動作拡張機能を作成します。</summary>
      <returns>動作拡張を含む <see cref="T:System.Object" /> を返します。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement">
      <summary>SOAP メッセージを送信するための HTTP トランスポートを指定する構成要素を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.AllowCookies">
      <summary>クライアントが Cookie を受け入れ、将来の要求でこれを伝達するかどうかを示す値を構成ファイルから取得または設定します。</summary>
      <returns>Cookie が許可されている場合は true、それ以外の場合は false です。既定値は false です。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>この構成要素の設定を、指定されたバインディング要素に適用します。</summary>
      <param name="bindingElement">設定を更新するバインディング要素。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.BindingElementType">
      <summary>バインディングのタイプを取得します。(BindingElementExtensionElement.BindingElementType をオーバーライドします。)</summary>
      <returns>バインディング タイプを含む <see cref="T:System.Type" /> を返します。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>指定された拡張要素のプロパティをこの構成要素にコピーします。</summary>
      <param name="from">コピーするプロパティのある拡張要素。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.CreateDefaultBindingElement">
      <summary>この構成要素の設定からバインディング要素を作成します。</summary>
      <returns>既定のバインディング要素を含む <see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> を返します。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)">
      <summary>指定されたバインディング要素のコンテンツで、このバインディング構成要素を初期化します。</summary>
      <param name="bindingElement">初期化元のバインディング要素。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.IsDynamic">
      <summary>リレー バインディングが動的であるかどうかを取得または設定します。</summary>
      <returns>リレー バインディングが動的な場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.KeepAliveEnabled">
      <summary>インターネット リソースへの永続的な接続を行うかどうかを示す構成ファイルからブール値を取得または設定します。</summary>
      <returns>インターネット リソースへの永続的な接続が維持されている場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.MaxBufferSize">
      <summary>構成ファイルからバッファー プールの最大サイズを取得または設定します。</summary>
      <returns>最大バッファー サイズを返します。既定値は 65,536 です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.Properties">
      <summary>この構成要素の属性または ConfigurationElement オブジェクトにできる ConfigurationProperty オブジェクトのコレクションを含む <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> インスタンスを取得します。(TransportElement.Properties をオーバーライドします。</summary>
      <returns>現在のインスタンスのプロパティを含む <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.ProxyAddress">
      <summary>HTTP 要求に使用するプロキシのアドレスを含む構成ファイル内の URI を取得または設定します。</summary>
      <returns>URI を含む <see cref="T:System.Uri" /> を返します。既定は null です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.ProxyAuthenticationScheme">
      <summary>HTTP プロキシによって処理されるクライアント要求の認証に使用される認証スキームを取得または設定します。</summary>
      <returns>HTTP プロキシによって処理されるクライアント要求の認証に使用される認証スキーム。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.RelayClientAuthenticationType">
      <summary>構成ファイルに格納されているリレー クライアント認証タイプを取得または設定します。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" /> を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.TransferMode">
      <summary>メッセージが要求または応答でバッファーリングされるか、またはストリーミングされるかを指定する構成ファイルから値を取得または設定します。</summary>
      <returns>要求または応答時にメッセージをバッファーリングするかストリーミングするかを指定する <see cref="T:System.ServiceModel.TransferMode" /> を返します。既定で、HTTP、TCP/IP、および名前付きパイプ トランスポートは、バッファー付きメッセージ転送を使用します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.UseDefaultWebProxy">
      <summary>ユーザー固有の設定ではなく、コンピューター全体のプロキシ設定を使用するかどうかを示す値を構成ファイルから取得または設定します。</summary>
      <returns>既定の System.Net プロキシ設定が使用されている場合は true、それ以外の場合は false です。既定値は true です。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.HttpRelayTransportSecurityElement">
      <summary>HTTP トランスポートの認証パラメーターを制御する構成要素を表します。このクラスは継承できません。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.HttpRelayTransportSecurityElement.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Configuration.HttpRelayTransportSecurityElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.HttpRelayTransportSecurityElement.ProxyCredentialType">
      <summary>プロキシに対する認証に使用するクライアント資格情報のタイプを構成ファイルから取得または設定します。</summary>
      <returns>プロキシのタイプを含む <see cref="T:System.ServiceModel.HttpProxyCredentialType" /> を返します。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.HttpsRelayTransportElement">
      <summary>Windows Azure Service Bus を介して SOAP メッセージを送信するための HTTPS トランスポートを指定する構成要素を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.HttpsRelayTransportElement.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Configuration.HttpsRelayTransportElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.HttpsRelayTransportElement.BindingElementType">
      <summary>バインディング要素のタイプを取得します。</summary>
      <returns>バインディング要素のタイプ。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.HttpsRelayTransportElement.CreateDefaultBindingElement">
      <summary>この構成要素の設定からバインディング要素を作成します。</summary>
      <returns>この構成要素の設定からプロパティがコピーされた <see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> を返します。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.IssuerElement">
      <summary>Windows Azure Service Bus のトークンの発行者を記述する構成要素。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.IssuerElement.Address">
      <summary>トークン発行者の URI アドレスを取得または設定します。</summary>
      <returns>トークン発行者の URI アドレス。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.IssuerElement.CopyFrom(System.Configuration.ConfigurationElement)">
      <summary>指定された構成要素のコンテンツをこの構成要素にコピーします。</summary>
      <param name="from">コンテンツをコピーする構成要素。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.IssuerElement.Properties">
      <summary>この構成要素に含まれるプロパティのコレクションを取得します。</summary>
      <returns>この構成要素に含まれるプロパティのコレクション。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayConnectionElement">
      <summary>Windows Azure Service Bus を介したリレー接続を介したメッセージ セキュリティ オプションを記述する構成要素。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayConnectionElement.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayConnectionElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayConnectionElement.AlgorithmSuite">
      <summary>メッセージのセキュリティ保護に使用されるメッセージ暗号化アルゴリズムとキー ラップ アルゴリズムを構成ファイルから取得または設定します。</summary>
      <returns>メッセージの暗号化とキー ラップ アルゴリズムを含む <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> を返します。既定は Basic256 で、対称暗号化アルゴリズムとして 256 ビットの高度暗号化標準 (AES) を指定します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayConnectionElement.ClientCredentialType">
      <summary>メッセージ ベースのセキュリティまたは TransportWithMessageCredential を使用してクライアント認証の実行で使用する資格情報のタイプを構成ファイルから取得または設定します。</summary>
      <returns>資格情報のタイプを含む <see cref="T:System.ServiceModel.MessageCredentialType" /> を返します。既定値は Windows です。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayHttpElement">
      <summary>HTTP トランスポート メカニズムを使用して、Windows Azure Service Bus リレー上のメッセージ セキュリティを記述する構成要素。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayHttpElement.AlgorithmSuite">
      <summary>HTTP メッセージのセキュリティ保護に使用されるメッセージ暗号化アルゴリズムとキー ラップ アルゴリズムを構成ファイルから取得または設定します。</summary>
      <returns>HTTP メッセージのセキュリティ保護に使用されるメッセージ暗号化アルゴリズムとキー ラップ アルゴリズム。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayHttpElement.ClientCredentialType">
      <summary>メッセージ ベースのセキュリティまたは TransportWithMessageCredential を使用してクライアント認証の実行で使用する資格情報のタイプを構成ファイルから取得または設定します。</summary>
      <returns>メッセージ資格情報の種類を含む <see cref="T:System.ServiceModel.MessageCredentialType" /> を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayHttpElement.NegotiateServiceCredential">
      <summary>サービス資格情報がクライアントの帯域外でプロビジョニングされるか、ネゴシエーションのプロセスを通じてサービスからクライアントに取得されるかを指定するブール値を構成ファイルから取得または設定します。</summary>
      <returns>サービス資格情報がクライアントの帯域外でプロビジョニングされている場合、またはネゴシエーションのプロセスを通じてサービスからクライアントに取得されている場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayOnewayElement">
      <summary>Windows Azure Service Bus リレーへの一方通行メッセージのメッセージ セキュリティを説明する構成要素。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayOnewayElement.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayOnewayElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayOnewayElement.AlgorithmSuite">
      <summary>一方通行のメッセージをセキュリティで保護するために使用されるメッセージ暗号化アルゴリズムとキーラップ アルゴリズムを構成ファイルから取得または設定します。</summary>
      <returns>アルゴリズム スイートを含む <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> を返します。既定値は Base256 です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayOnewayElement.ClientCredentialType">
      <summary>メッセージ ベースのセキュリティまたは TransportWithMessageCredential を使用してクライアント認証の実行で使用する資格情報のタイプを構成ファイルから取得または設定します。</summary>
      <returns>メッセージ資格情報の種類を含む <see cref="T:System.ServiceModel.MessageCredentialType" /> を返します。既定値は Windows です。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.NetEventRelayBindingCollectionElement">
      <summary><see cref="T:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement" />インスタンスのコレクションを保持する構成要素を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetEventRelayBindingCollectionElement.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Configuration.NetEventRelayBindingCollectionElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement">
      <summary><see cref="T:Microsoft.ServiceBus.NetEventRelayBinding" /> の構成設定を記述する構成要素。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.#ctor(System.String)">
      <summary>指定された名前を使用して、<see cref="T:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">構成に設定されたバインディング名。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.BindingElementType">
      <summary>この構成要素が表すバインディングのタイプを取得します。</summary>
      <returns>バインディングのタイプ (<see cref="T:Microsoft.ServiceBus.NetEventRelayBinding" /> のタイプ) を含む <see cref="T:System.Type" /> を返します。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>指定されたバインディングのプロパティ値から、この XML 構成要素のコンテンツを初期化します。</summary>
      <param name="binding">設定のコピー元のバインディング。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.ListenBacklog">
      <summary>保留できるキュー接続要求の最大数を取得または設定します。</summary>
      <returns>保留できるキュー接続要求の最大数を返します。既定値は 10 です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.MaxBufferPoolSize">
      <summary>バインディングによって処理されたメッセージを格納するバッファー プールに許可される最大サイズを取得または設定します。</summary>
      <returns>バインディングによって処理されたメッセージを格納するバッファー プールに対して許可される最大サイズを返します。既定値は 65,536 バイトです。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.MaxBufferSize">
      <summary>メッセージをメモリに格納するために使用されるバッファーの最大サイズ (バイト) を取得または設定します。</summary>
      <returns>メッセージをメモリに格納するために使用されるバッファーの最大サイズをバイト数で返します。既定値は 65,536 バイトです。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.MaxConnections">
      <summary>クライアントで後続の再利用のためにプールされる接続の最大数と、サーバー上で保留中のディスパッチを許可する接続の最大数を取得または設定します。</summary>
      <returns>クライアントでは、後続の再利用のためにプールされる接続の最大数を返します。サーバーでは、ディスパッチを保留中にできる接続の最大数を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.MaxReceivedMessageSize">
      <summary>バインディングによって処理される受信メッセージの最大サイズを取得または設定します。</summary>
      <returns>バインディングによって処理される受信メッセージの最大サイズをバイト数で返します。既定値は 65,536 バイトです。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>この構成要素の設定を、指定されたバインディングに適用します。</summary>
      <param name="binding">設定を更新するバインディング。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.Properties">
      <summary>このバインディング構成要素の属性または構成要素オブジェクトにできるオブジェクトを含むコレクションを取得します。</summary>
      <returns>この構成要素の属性または ConfigurationElement オブジェクトにできる ConfigurationProperty オブジェクトのコレクションを含む <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> インスタンスを返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.ReaderQuotas">
      <summary>このバインディングで構成されたエンドポイントで処理できる SOAP メッセージの複雑さに関する制約を含む XML 要素を取得または設定します。</summary>
      <returns>SOAP メッセージの複雑さの制約を指定する <see cref="T:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement" /> を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.Security">
      <summary>Windows Azure Service Bus ネット イベント リレー バインディングのセキュリティ オプションを含む構成要素を取得します。</summary>
      <returns>セキュリティ オプションを説明する <see cref="T:Microsoft.ServiceBus.Configuration.NetOnewayRelaySecurityElement" /> を返します。既定は Transport です。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingCollectionElement">
      <summary><see cref="T:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement" /> インスタンスのコレクションを保持する構成セクションを表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingCollectionElement.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingCollectionElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement">
      <summary>Service Bus を通るピア チャネル固有の TCP メッセージングのバインディングを指定する構成要素を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.#ctor(System.String)">
      <summary>指定された名前を使用して <see cref="T:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">この構成要素を一意に識別する名前。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.BindingElementType">
      <summary>現在のインスタンスのバインディング要素のタイプを含む XML 値を取得または設定します。</summary>
      <returns>現在のインスタンスのタイプを含む <see cref="T:System.Type" /> を返します。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>指定されたバインディングの内容を使用して現在のインスタンスを初期化します。</summary>
      <param name="binding">バインディング。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.ListenBacklog">
      <summary>保留中のキュー接続要求の最大数を含む XML 値を取得または設定します。</summary>
      <returns>保留できるキュー接続要求の最大数を返します。既定値は 10 です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.MaxBufferPoolSize">
      <summary>バインディングによって処理されたメッセージを格納するバッファー プールに許可される最大サイズを含む XML 値を取得または設定します。</summary>
      <returns>バインディングによって処理されたメッセージを格納するバッファー プールに対して許可される最大サイズを返します。既定値は 65,536 です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.MaxBufferSize">
      <summary>メッセージをメモリに格納するために使用されるバッファーの最大サイズ (バイト) を含む XML 値を取得または設定します。</summary>
      <returns>メッセージをメモリに格納するために使用されるバッファーの最大サイズをバイト数で返します。既定値は 65,536 バイトです。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.MaxConnections">
      <summary>サービスが作成して受け入れる送信接続と着信接続の最大数を指定する XML 値を取得または設定します。</summary>
      <returns>クライアントでは、後続の再利用のためにプールされる接続の最大数を返します。サーバーでは、ディスパッチを保留中にできる接続の最大数を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.MaxReceivedMessageSize">
      <summary>このバインディングで構成されたチャネルで受信できるメッセージの最大サイズを含む XML 値を取得または設定します。</summary>
      <returns>バインディングによって処理されるメッセージの最大サイズをバイト数で返します。既定値は 65,536 バイトです。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>この構成要素の設定を、指定されたバインディングに適用します。</summary>
      <param name="binding">設定を更新するバインディング。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.Properties">
      <summary>この構成要素の属性または ConfigurationElement オブジェクトにできる ConfigurationProperty オブジェクトのコレクションを含む ConfigurationPropertyCollection インスタンスを取得します。</summary>
      <returns>この構成要素の属性または ConfigurationElement オブジェクトにできる ConfigurationProperty オブジェクトのコレクションを含む <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.ReaderQuotas">
      <summary>このバインディングで構成されたエンドポイントで処理できる SOAP メッセージの複雑さに制約を与える XML 値を取得または設定します。</summary>
      <returns>SOAP メッセージの複雑さの制約を指定する <see cref="T:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement" /> を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.Security">
      <summary>Service Bus の一方通行の TCP リレー バインディングのセキュリティ要素を含む XML 値を取得します。</summary>
      <returns>セキュリティ要素を記述する <see cref="T:Microsoft.ServiceBus.Configuration.NetOnewayRelaySecurityElement" /> を返します。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.NetOnewayRelaySecurityElement">
      <summary>App.config ファイル内の <see cref="T:System.ServiceModel.NetTcpBinding" /> バインディングのセキュリティ設定を定義します。このクラスは継承できません。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetOnewayRelaySecurityElement.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Configuration.NetOnewayRelaySecurityElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelaySecurityElement.Message">
      <summary>メッセージのセキュリティ設定を取得します。</summary>
      <returns>メッセージを含む <see cref="T:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayOnewayElement" /> を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelaySecurityElement.Mode">
      <summary>適用されるセキュリティのタイプを取得または設定します。</summary>
      <returns>セキュリティ モードを含む <see cref="T:Microsoft.ServiceBus.EndToEndSecurityMode" /> インスタンスを返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelaySecurityElement.RelayClientAuthenticationType">
      <summary>メッセージの送信時に、Windows Azure Service Bus サービスによって発行されたセキュリティ トークンを Windows Azure Service Bus サービスに提示するためにサービスのクライアントが必要かどうかを示す値を取得します。</summary>
      <returns>リレー クライアント認証タイプを含む <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" /> を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelaySecurityElement.Transport">
      <summary>トランスポートのセキュリティ設定を取得します。</summary>
      <returns>セキュリティ設定を含む <see cref="T:Microsoft.ServiceBus.Configuration.OnewayRelayTransportSecurityElement" /> を返します。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingCollectionElement">
      <summary><see cref="T:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement" /> インスタンスのコレクションを保持する構成セクションを表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingCollectionElement.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingCollectionElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement">
      <summary>Windows Azure Service Bus リレーを介したコンピューター間の通信に適した、安全で信頼性の高いバインディングを記述する構成要素。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.#ctor(System.String)">
      <summary>指定された構成名で <see cref="T:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">バインディング構成名。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.BindingElementType">
      <summary>この構成要素のタイプを取得します。(StandardBindingElement.BindingElementType をオーバーライドします。)</summary>
      <returns>構成要素のタイプを含む <see cref="T:System.Type" /> を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.ConnectionMode">
      <summary>この構成の App.config ファイルに格納されている接続モードを取得または設定します。</summary>
      <returns>接続モードを含む <see cref="T:Microsoft.ServiceBus.TcpRelayConnectionMode" /> を返します。既定は Relayed です。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>指定されたバインディングのプロパティ値から、このバインディング構成要素のコンテンツを初期化します。</summary>
      <param name="binding">初期化元のバインディング。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.IsDynamic">
      <summary>リレー バインディングが動的であるかどうかを取得または設定します。</summary>
      <returns>リレー バインディングが動的な場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.ListenBacklog">
      <summary>リスナーで受け入れられるのを待つことができるチャネルの最大数を指定する App.config ファイルの値を取得または設定します。</summary>
      <returns>保留できるキュー接続要求の最大数を返します。既定値は 10 です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.MaxBufferPoolSize">
      <summary>バインディングによって処理された TCP メッセージを格納するバッファー プールの最大サイズを含む App.config ファイルから値を取得または設定します。</summary>
      <returns>バインディングによって処理されたメッセージを格納するバッファー プールに対して許可される最大サイズを返します。既定値は 65,536 バイトです。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.MaxBufferSize">
      <summary>メッセージをメモリに格納するために使用されるバッファーの最大サイズ (バイト) を指定する App.config ファイルから値を取得または設定します。</summary>
      <returns>メッセージをメモリに格納するために使用されるバッファーの最大サイズ (バイト)。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.MaxConnections">
      <summary>サービスが作成して受け入れる送信接続と受信接続の最大数を指定する App.config ファイルから値を取得または設定します。</summary>
      <returns>クライアントでは、後続の再利用のためにプールされる接続の最大数を返します。サーバーでは、ディスパッチを保留中にできる接続の最大数を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.MaxReceivedMessageSize">
      <summary>このバインディングで構成されたチャネルで受信できるメッセージの最大サイズを含む App.config ファイルから値を取得または設定します。</summary>
      <returns>バインディングによって処理されるメッセージの最大サイズをバイト数で返します。既定値は 65,536 バイトです。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>この構成要素の設定を、指定されたバインディング要素に適用します。</summary>
      <param name="binding">設定を更新するバインディング。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.Properties">
      <summary>この構成要素の属性または ConfigurationElement オブジェクトにできる ConfigurationProperty オブジェクトのコレクションを含む ConfigurationPropertyCollection インスタンスを取得します。(StandardBindingElement.Properties をオーバーライドします。)</summary>
      <returns>この構成要素の属性または ConfigurationElement オブジェクトにできる ConfigurationProperty オブジェクトのコレクション。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.ReaderQuotas">
      <summary>このバインディングで構成されたエンドポイントで処理できる SOAP メッセージの複雑さに制約を与える App.config ファイルから値を取得します。</summary>
      <returns>交換される SOAP メッセージの複雑さの制約を指定する <see cref="T:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement" /> を返します。これらの制約の既定値は、次の「備考」セクションで提供されます。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.ReliableSession">
      <summary>チャネル エンドポイント間で信頼性の高いセッションを確立するかどうかを指定する構成要素を取得します。</summary>
      <returns>チャネル エンドポイント間で WS-RM の信頼性の高いセッションが確立されているかどうかを示す <see cref="T:System.ServiceModel.Configuration.StandardBindingOptionalReliableSessionElement" /> を返します。既定値は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.Security">
      <summary>このバインディングで使用するセキュリティのタイプを決定する App.config ファイルから値を取得します。</summary>
      <returns>関連付けられたバインディングのセキュリティ設定を含む <see cref="T:Microsoft.ServiceBus.Configuration.NetTcpRelaySecurityElement" /> を返します。既定値は None です。NetTcpRelayBinding で間接的に作成される関連のあるバインディングから取得する <see cref="T:Microsoft.ServiceBus.Configuration.NetTcpRelaySecurityElement" /> です。そのため、バインディングを作成した後は、新しいバインディングも作成しない限り、このオブジェクトを新しいオブジェクトに置き換えることはできません。ただし、WebHttpRelaySecurity の多くのメンバーは、セキュリティ プロパティを使用して設定できます。バインディング セキュリティの詳細については、「セキュリティと保護」セクションを参照してください。トランスポートとエンコードのタイプに加えて、セキュリティ設定は、このバインディングを定義する 3 つの主要なプロパティのいずれかを表します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.TransferMode">
      <summary>メッセージが要求または応答でバッファーリングまたはストリーミングされるか指定する App.config ファイルから値を取得または設定します。</summary>
      <returns>バインディングで構成されたサービスがメッセージ転送のストリーム モードまたはバッファ-リング モード (またはその両方) を使用するかどうかを示す <see cref="T:System.ServiceModel.TransferMode" /> を返します。可能な機能は次のとおりです: BufferedStreamedStreamedRequestStreamedResponse。既定値は Buffered です。<see cref="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.TransferMode" /> をStreamed に指定すると、StreamedRequest と StreamedResponse の両方を示唆します。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.NetTcpRelaySecurityElement">
      <summary>Windows Azure Service Bus リレーを介してネット TCP サービスのセキュリティを構成する構成要素を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetTcpRelaySecurityElement.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Configuration.NetTcpRelaySecurityElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelaySecurityElement.Message">
      <summary><see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" /> のメッセージ セキュリティ設定を表す構成要素を取得します。</summary>
      <returns>メッセージを含む <see cref="T:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayConnectionElement" /> を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelaySecurityElement.Mode">
      <summary><see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" /> で構成されたエンドポイントでメッセージ レベルまたはトランスポート レベルのセキュリティを使用するかどうかを記述する XML 値を取得または設定します。</summary>
      <returns>セキュリティ モードを含む <see cref="T:Microsoft.ServiceBus.EndToEndSecurityMode" /> を返します。既定値は Transport です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelaySecurityElement.RelayClientAuthenticationType">
      <summary>メッセージの送信時にクライアントが Windows Azure Service Bus に表示するために必要な認証タイプを取得または設定します。</summary>
      <returns>認証タイプを含む <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" /> を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelaySecurityElement.Transport">
      <summary><see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" /> のトランスポート セキュリティ設定を取得します。</summary>
      <returns>リレー バインディングを含む <see cref="T:Microsoft.ServiceBus.Configuration.TcpRelayTransportSecurityElement" /> を返します。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.NonDualMessageSecurityOverRelayHttpElement">
      <summary>非二重サービス コントラクトの HTTP を使用して送信されるメッセージのセキュリティの構成設定を表します。このクラスは継承できません。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NonDualMessageSecurityOverRelayHttpElement.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Configuration.NonDualMessageSecurityOverRelayHttpElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NonDualMessageSecurityOverRelayHttpElement.EstablishSecurityContext">
      <summary>セキュリティ コンテキストが確立されたかどうかを定義する XML 値を取得または設定します。</summary>
      <returns>コンテキストが確立されている場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportElement">
      <summary>カスタム バインディングに含めると、Windows Azure Service Bus を介して一方通行のメッセージを転送するチャネルを指定する構成要素を表します。このクラスは継承できません。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportElement.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>指定されたバインディング要素にこの構成要素の設定を適用します。</summary>
      <param name="bindingElement">設定を更新するバインディング要素。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportElement.BindingElementType">
      <summary>現在のインスタンスのタイプを取得します。</summary>
      <returns>現在のインスタンスの型を含む <see cref="T:System.Type" /> を返します。これは <see cref="T:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement" /> のタイプです。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportElement.ConnectionMode">
      <summary>一方通行接続モードを説明する XML 値を取得または設定します。</summary>
      <returns>接続モードを含む <see cref="T:Microsoft.ServiceBus.RelayedOnewayConnectionMode" /> を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportElement.ConnectionPoolSettings">
      <summary>現在のインスタンスの接続プール設定を記述する XML 値を取得または設定します。</summary>
      <returns>現在のインスタンスが適用されるバインディング要素で使用される接続プール設定を含む <see cref="T:Microsoft.ServiceBus.Configuration.SocketConnectionPoolSettingsElement" /> を返します。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>指定された構成要素から現在のインスタンスに設定をコピーします。</summary>
      <param name="from">コピー元の構成要素。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportElement.ListenBacklog">
      <summary>保留できるキュー接続要求の最大数を取得または設定します。</summary>
      <returns>保留中にできるキュー接続要求の最大数。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportElement.RelayClientAuthenticationType">
      <summary>この構成要素で指定された認証のタイプを記述する XML 値を取得または設定します。</summary>
      <returns>現在のインスタンスが適用されるバインディング要素で使用される認証のタイプを含む <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" /> を返します。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportSecurityElement">
      <summary><see cref="T:Microsoft.ServiceBus.NetOnewayRelayBinding" /> および <see cref="T:Microsoft.ServiceBus.NetEventRelayBinding" /> タイプのトランスポート セキュリティ設定を制御する構成要素。このクラスは継承できません。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportSecurityElement.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportSecurityElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportSecurityElement.ProtectionLevel">
      <summary>この構成要素で構成されたバインディングを介して送信されるメッセージに適用されるトランスポート セキュリティ保護レベルを取得または設定します。</summary>
      <returns>この構成要素で指定されたトランスポート セキュリティ保護レベルを含む <see cref="T:System.Net.Security.ProtectionLevel" /> を返します。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.ServiceBusSectionType">
      <summary>サービス バス セクションのタイプを列挙します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Configuration.ServiceBusSectionType.All">
      <summary>All セクションのタイプ。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Configuration.ServiceBusSectionType.MessagingFactory">
      <summary>Messaging Factory  セクションのタイプ。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Configuration.ServiceBusSectionType.NamespaceManager">
      <summary>Namespace Manager セクションのタイプ。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.ServiceRegistrySettingsElement">
      <summary>AppFabric Service Bus レジストリの設定が含まれています。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.ServiceRegistrySettingsElement.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Configuration.ServiceRegistrySettingsElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.ServiceRegistrySettingsElement.BehaviorType">
      <summary>サービス レジストリ設定の動作のタイプを取得します。</summary>
      <returns>サービス レジストリ設定の動作のタイプ。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.ServiceRegistrySettingsElement.CreateBehavior">
      <summary>現在のレジストリ設定に基づいて動作拡張機能を作成します。</summary>
      <returns>現在のレジストリ設定に基づく動作拡張機能。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.ServiceRegistrySettingsElement.DiscoveryMode">
      <summary>サービスの検出方法を取得または設定します。</summary>
      <returns>検出のタイプ。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.ServiceRegistrySettingsElement.DisplayName">
      <summary>エンドポイントの表示名を取得または設定します。</summary>
      <returns>表示名。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.SharedAccessSignatureElement">
      <summary>共有アクセス シグネチャ要素を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.SharedAccessSignatureElement.CopyFrom(Microsoft.ServiceBus.Configuration.SharedAccessSignatureElement)">
      <summary>指定された要素をこの構成要素からコピーします。</summary>
      <param name="source">コンテンツをコピーする元のソース。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.SharedAccessSignatureElement.Key">
      <summary>共有アクセス キーを取得または設定します。</summary>
      <returns>共有アクセスキー。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.SharedAccessSignatureElement.KeyName">
      <summary>共有アクセス キー名を取得または設定します。</summary>
      <returns>共有アクセス キー名。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.SharedAccessSignatureElement.Properties">
      <summary>構成プロパティのコレクションを取得します。</summary>
      <returns>構成プロパティのコレクション。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.SharedAccessSignatureElement.TokenScope">
      <summary>要素に関連付けられたトークン スコープを取得または設定します。</summary>
      <returns>要素に関連付けられたトークン スコープ。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.SharedSecretElement">
      <summary><see cref="F:Microsoft.ServiceBus.TransportClientCredentialType.SharedSecret" /> 資格情報のタイプを使用するように構成されているサービスまたはクライアント エンドポイントの資格情報を指定する構成要素。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.SharedSecretElement.CopyFrom(Microsoft.ServiceBus.Configuration.SharedSecretElement)">
      <summary>指定された共有シークレット構成要素のコンテンツをこの構成要素にコピーします。</summary>
      <param name="source">コピーされる共有シークレット構成要素。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.SharedSecretElement.IssuerName">
      <summary>発行者名を取得または設定します。</summary>
      <returns>発行者名。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.SharedSecretElement.IssuerSecret">
      <summary>発行者シークレット キーを取得または設定します。</summary>
      <returns>発行者シークレット キー。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.SharedSecretElement.Properties">
      <summary>発行者名と発行者シークレット キーを含むこの構成要素のプロパティを取得します。</summary>
      <returns>発行者名と発行者シークレット キーを含むこの構成要素のプロパティ。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.SharedSecretElement.TokenScope">
      <summary>トークン スコープを取得または設定します。</summary>
      <returns>トークン スコープ。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.SocketConnectionPoolSettingsElement">
      <summary>TCP トランスポートの追加の接続プール設定を指定する構成要素を表します。このクラスは継承できません。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.SocketConnectionPoolSettingsElement.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Configuration.SocketConnectionPoolSettingsElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.SocketConnectionPoolSettingsElement.GroupName">
      <summary>発信チャネルに使用される接続プールの名前を取得または設定します。</summary>
      <returns>発信チャネルに使用される接続プールの名前を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.SocketConnectionPoolSettingsElement.IdleTimeout">
      <summary>接続が切断される前にアイドル状態にできる最大時間を取得または設定します。</summary>
      <returns>接続を切断する前にアイドル状態にできる最大時間を指定する正の <see cref="T:System.TimeSpan" /> を返します。既定は 00:02:00 です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.SocketConnectionPoolSettingsElement.LeaseTimeout">
      <summary>アクティブな接続が閉じられた後の期間を取得または設定します。</summary>
      <returns>TCP 接続が閉じられた後の期間を示す <see cref="T:System.TimeSpan" /> を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.SocketConnectionPoolSettingsElement.MaxOutboundConnectionsPerEndpoint">
      <summary>サービスによって開始されたリモート エンドポイントへの接続の最大数を取得または設定します。</summary>
      <returns>サービスによって開始されたリモート エンドポイントへの接続の最大数を返します。既定値は 10 です。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.StsUriElement">
      <summary>URI 要素のセキュリティ トークン サービスを表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.StsUriElement.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Configuration.StsUriElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.StsUriElement.Value">
      <summary>要素の値を取得または設定します。</summary>
      <returns>要素の値。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.StsUriElementCollection">
      <summary>セキュリティ トークン サービスの URI 要素コレクションを表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.StsUriElementCollection.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Configuration.StsUriElementCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.StsUriElementCollection.Addresses">
      <summary>コレクション内の要素のアドレスを取得します。</summary>
      <returns>コレクション内の要素のアドレス。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.TcpRelayTransportElement">
      <summary>チャネルがカスタム バインディングに含まれているときに TCP トランスポート上のメッセージを転送する構成要素を指定します。このクラスは継承できません。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.TcpRelayTransportElement.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Configuration.TcpRelayTransportElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.TcpRelayTransportElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>この構成要素の設定を、指定されたバインディング要素に適用します。</summary>
      <param name="bindingElement">設定を更新するバインディング要素。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.TcpRelayTransportElement.BindingElementType">
      <summary>このバインディング要素のタイプを取得します。</summary>
      <returns>バインディング要素のタイプを含む <see cref="T:System.Type" /> を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.TcpRelayTransportElement.ConnectionMode">
      <summary>この構成の App.config ファイルに格納されている接続モードを取得または設定します。</summary>
      <returns>接続モードを含む <see cref="T:Microsoft.ServiceBus.TcpRelayConnectionMode" /> を返します。既定の設定は Relayed です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.TcpRelayTransportElement.ConnectionPoolSettings">
      <summary>現在のインスタンスの接続プール設定を記述する XML 値を取得または設定します。</summary>
      <returns>現在のインスタンスが適用されるバインディング要素で使用される接続プール設定を含む <see cref="T:Microsoft.ServiceBus.Configuration.SocketConnectionPoolSettingsElement" /> を返します。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.TcpRelayTransportElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>指定された構成要素のコンテンツをこの構成要素にコピーします。</summary>
      <param name="from">コピーされる構成要素。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.TcpRelayTransportElement.IsDynamic">
      <summary>リレー バインディングが動的であるかどうかを取得または設定します。</summary>
      <returns>リレー バインディングが動的な場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.TcpRelayTransportElement.ListenBacklog">
      <summary>保留できるキュー接続要求の最大数を含む XML 値を取得または設定します。</summary>
      <returns>保留できるキュー接続要求の最大数を返します。既定値は 10 です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.TcpRelayTransportElement.RelayClientAuthenticationType">
      <summary>リレー クライアント認証タイプを含む XML 値を取得または設定します。</summary>
      <returns>リレー クライアント認証タイプを含む <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" /> を返します。既定は RelayClientAuthenticationType.RelayAccessToken です。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.TcpRelayTransportSecurityElement">
      <summary>Windows Azure Service Bus リレーを介して TCP トランスポート サービスのセキュリティを構成する構成要素を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.TcpRelayTransportSecurityElement.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Configuration.TcpRelayTransportSecurityElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.TcpRelayTransportSecurityElement.ProtectionLevel">
      <summary>TCP リレーのトランスポート セキュリティ レベルを含む XML 値を取得または設定します。</summary>
      <returns>トランスポート セキュリティ レベルを含む <see cref="T:System.Net.Security.ProtectionLevel" /> を返します。既定値は EncryptAndSign です。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.TokenProviderElement">
      <summary>Service Bus のトークン プロバイダーを指定する構成要素を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.TokenProviderElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>指定された構成要素のコンテンツをこの構成要素にコピーします。</summary>
      <param name="from">コンテンツをコピーする構成要素。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.TokenProviderElement.Name">
      <summary>指定された <see cref="T:Microsoft.ServiceBus.Configuration.TokenProviderElement" /> オブジェクトの名前を取得します。</summary>
      <returns>指定された <see cref="T:Microsoft.ServiceBus.Configuration.TokenProviderElement" /> オブジェクト。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.TokenProviderElement.Properties">
      <summary>構成要素に含まれるプロパティのコレクションを取得します。</summary>
      <returns>構成要素に含まれるプロパティのコレクション。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.TokenProviderElement.SharedAccessSignature">
      <summary>共有アクセス シグネチャ要素を取得します。</summary>
      <returns>共有アクセス シグネチャ要素。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.TokenProviderElement.SharedSecret">
      <summary>トークン プロバイダー要素に含まれる共有シークレット要素を取得します。</summary>
      <returns>トークン プロバイダー要素に含まれる共有シークレット要素。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.TokenProviderElement.WindowsAuthentication">
      <summary>この要素の Windows 認証設定を取得します。</summary>
      <returns>この要素の Windows 認証設定。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.TokenProviderElementCollection">
      <summary>トークン プロバイダーの要素のコレクションを表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.TokenProviderElementCollection.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Configuration.TokenProviderElementCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.TokenProviderElementCollection.Item(System.String)">
      <summary>コレクション内の項目を取得します。</summary>
      <returns>コレクション内の項目。</returns>
      <param name="name">項目の名前。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement">
      <summary>Windows Azure Service Bus リレー上のトランスポートのサービスまたはクライアント エンドポイントの動作を指定する構成要素。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement.BehaviorType">
      <summary>トランスポート クライアント エンドポイントの動作タイプを取得または設定します。</summary>
      <returns>トランスポート クライアント エンドポイントの動作タイプ。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>指定された構成要素のコンテンツをこの構成要素にコピーします。</summary>
      <param name="from">コンテンツをコピーする構成要素。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement.CreateBehavior">
      <summary>この構成要素と同じ設定の新しい <see cref="T:Microsoft.ServiceBus.TransportClientEndpointBehavior" /> オブジェクトを返します。</summary>
      <returns>この構成要素と同じ設定の新しい <see cref="T:Microsoft.ServiceBus.TransportClientEndpointBehavior" /> オブジェクト。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement.Properties">
      <summary>この構成要素に含まれるプロパティのコレクションを取得します。</summary>
      <returns>この構成要素に含まれるプロパティのコレクション。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement.TokenProvider">
      <summary>バインディング パラメーターとして使用されるトークン プロバイダーを取得または設定します。</summary>
      <returns>バインディング パラメーターとして使用されるトークン プロバイダー。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingCollectionElement">
      <summary><see cref="T:Microsoft.ServiceBus.WebHttpRelayBinding" /> バインディングを使用するための設定を指定するサブ要素を含む構成要素を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingCollectionElement.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingCollectionElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingCollectionElement.GetDefault">
      <summary>使用される既定のバインディングを取得します。</summary>
      <returns>既定のバインディングを表す <see cref="T:System.ServiceModel.Channels.Binding" /> a を返します。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement">
      <summary>SOAP メッセージの代わりに HTTP 要求に応答する Windows Azure Service Bus リレー サービスのエンドポイントを構成するために使用されるバインディング要素。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.#ctor(System.String)">
      <summary>指定された名前を使用して <see cref="T:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">新しいバインディング要素の名前。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.AllowCookies">
      <summary>クライアントが Cookie を受け入れ、将来の要求でこれを伝達するかどうかを示す値を取得または設定します。</summary>
      <returns>Cookie が許可されている場合は true、それ以外の場合は false です。既定値は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.BindingElementType">
      <summary>この構成要素が表すバインディングのタイプを取得します。</summary>
      <returns>バインディング タイプを含む <see cref="T:System.Type" /> を返します。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>指定されたバインディングのプロパティ値から、このバインディング構成要素のコンテンツを初期化します。</summary>
      <param name="binding">この構成要素を更新するバインディング。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.IsDynamic">
      <summary>バインディング要素が動的であるかどうかを取得または設定します。</summary>
      <returns>バインディング要素が動的な場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.MaxBufferPoolSize">
      <summary>このバインディングを使用するエンドポイントに必要なバッファーを管理するバッファー マネージャーに割り当てられたメモリの最大量を取得または設定します。</summary>
      <returns>このバインディングで構成されたエンドポイントによって使用されるバッファーのプールの最大サイズをバイトで返します。既定値は 65,536 バイトです。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.MaxBufferSize">
      <summary>チャネルからメッセージを受信するメッセージ バッファーのマネージャーが使用するために割り当てられるメモリの最大量を取得または設定します。</summary>
      <returns>メッセージ バッファー マネージャーが使用できるメモリーの最大量をバイトで返します。既定値は 524,288 (0x80000) バイトです。</returns>
      <exception cref="ArgumentOutOfRangeException">値セットがゼロ以下です。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.MaxReceivedMessageSize">
      <summary>バインディングで処理できるメッセージの最大サイズを取得または設定します。</summary>
      <returns>バインディングによって処理されるメッセージの最大サイズをバイトで返します。既定値は 65,536 バイトです。</returns>
      <exception cref="ArgumentOutOfRangeException">値がゼロ未満です。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>この構成要素の設定を、指定されたバインディングに適用します。</summary>
      <param name="binding">設定を更新するバインディング。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.Properties">
      <summary>この構成要素で属性または構成要素オブジェクトにできるオブジェクトのコレクションを取得します。</summary>
      <returns>この構成要素で属性または ConfigurationElement オブジェクトにできる ConfigurationProperty オブジェクトのコレクションを含む <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.ProxyAddress">
      <summary>HTTP プロキシの URI アドレスを取得または設定します。</summary>
      <returns>HTTP プロキシのアドレスとして機能する <see cref="T:System.Uri" /> を返します。既定値は null です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.ReaderQuotas">
      <summary>このバインディングで構成されたエンドポイントで処理できる SOAP メッセージの複雑さに対する制約を含む構成要素を取得または設定します。</summary>
      <returns>複雑さの制約を含む <see cref="T:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement" /> を返します。</returns>
      <exception cref="ArgumentNullException">値セットは null です。</exception>
      <exception cref="ArgumentOutOfRangeException">XmlDictionaryReaderQuotas のクォータ値は読み取り専用です。</exception>
      <exception cref="ArgumentException">クォータ セットは正の値にする必要があります。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.Security">
      <summary>このバインディングで使用されるセキュリティ設定を含む構成要素を取得します。</summary>
      <returns>このバインディングのセキュリティ設定を含む <see cref="T:Microsoft.ServiceBus.Configuration.WebHttpRelaySecurityElement" /> を返します。既定値は None です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.TransferMode">
      <summary>関連するバインディングで構成されたサービスが、メッセージ転送のストリーム モードまたはバッファー モード (あるいはその両方) を使用するかどうかを示す値を取得または設定します。</summary>
      <returns>バインディングで構成されたサービスがメッセージ転送のストリーム モードまたはバッファ-リング モード (またはその両方) を使用するかどうかを示す <see cref="T:System.ServiceModel.TransferMode" /> を返します。既定値は Buffered です。</returns>
      <exception cref="InvalidEnumArgumentException">値セットが有効な TransferMode 値ではありません。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.UseDefaultWebProxy">
      <summary>システムの自動構成された HTTP プロキシを、関連するバインディングと共に使用するかどうかを示す値を取得または設定します (使用可能な場合)。</summary>
      <returns>自動的に構成されたシステムの HTTP プロキシを使用する必要がある場合は true (使用可能な場合)、それ以外の場合は false です。既定値は true です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.WriteEncoding">
      <summary>関連するバインディング内のメッセージ テキストに使用される文字エンコードを取得または設定します。</summary>
      <returns>使用される文字エンコードを示す <see cref="T:System.Text.Encoding" /> を返します。既定値は UTF8Encoding です。</returns>
      <exception cref="ArgumentNullException">値セットは null です。</exception>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.WebHttpRelaySecurityElement">
      <summary>Windows Azure Service Bus リレーを通じて Web HTTP サービスのセキュリティを構成する構成要素を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WebHttpRelaySecurityElement.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Configuration.WebHttpRelaySecurityElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelaySecurityElement.Mode">
      <summary>バインディングで使用されるセキュリティ モードを取得または設定します。</summary>
      <returns>サービス エンドポイントで使用されるエンド ツー エンド HTTP セキュリティ モードを含む <see cref="T:Microsoft.ServiceBus.EndToEndWebHttpSecurityMode" /> を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelaySecurityElement.RelayClientAuthenticationType">
      <summary>サービス クライアントが使用するリレー クライアント認証タイプを取得または設定します。</summary>
      <returns>認証タイプを含む <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" /> を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelaySecurityElement.Transport">
      <summary>HTTP 要求を受信するように構成されたサービス エンドポイントのトランスポート レベルのセキュリティ設定を示す構成要素を取得します。</summary>
      <returns>セキュリティ設定を含む <see cref="T:Microsoft.ServiceBus.Configuration.HttpRelayTransportSecurityElement" /> を返します。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.WindowsElement">
      <summary>サービス バスの構成の Windows 要素を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WindowsElement.CopyFrom(Microsoft.ServiceBus.Configuration.WindowsElement)">
      <summary>指定されたウィンドウ要素を現在のインスタンスにコピーします。</summary>
      <param name="source">コピーする Windows 要素。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WindowsElement.Domain">
      <summary>ドメインを取得または設定します。</summary>
      <returns>ドメイン。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WindowsElement.Password">
      <summary>パスワードを取得または設定します。</summary>
      <returns>パスワード。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WindowsElement.Properties">
      <summary>構成プロパティのコレクションを取得または設定します。</summary>
      <returns>構成プロパティのコレクション。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WindowsElement.StsUris">
      <summary>セキュリティ トークン サービス (STS) URI のコレクションを取得または設定します。</summary>
      <returns>セキュリティ トークン サービス (STS) URI のコレクション。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WindowsElement.UseDefaultCredentials">
      <summary>既定の資格情報を使用するかどうかを示す値を取得または設定します。</summary>
      <returns>既定の資格情報を使用する場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WindowsElement.UserName">
      <summary>ユーザー名を取得または設定します。</summary>
      <returns>ユーザー名。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.WS2007HttpRelayBindingCollectionElement">
      <summary><see cref="T:Microsoft.ServiceBus.Configuration.WS2007HttpRelayBindingElement" /> インスタンスのコレクションを保持する構成セクションを表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WS2007HttpRelayBindingCollectionElement.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Configuration.WS2007HttpRelayBindingCollectionElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.WS2007HttpRelayBindingElement">
      <summary>更新されたバージョンの Security、ReliableSession、および TransactionFlow バインディング要素のサポートを提供するバインディングの設定を含む構成要素を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WS2007HttpRelayBindingElement.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Configuration.WS2007HttpRelayBindingElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WS2007HttpRelayBindingElement.#ctor(System.String)">
      <summary>指定された名前を使用して  <see cref="T:Microsoft.ServiceBus.Configuration.WS2007HttpRelayBindingElement" /> の新しいインスタンスを初期化します。</summary>
      <param name="name">バインディングの名前。この値は、バインディングの識別で使用されるため、一意である必要があります。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WS2007HttpRelayBindingElement.BindingElementType">
      <summary>現在のインスタンスのバインディング要素のタイプを取得します。</summary>
      <returns>バインディング要素のタイプを含む <see cref="T:System.Type" /> を返します。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement">
      <summary>分散トランザクションと安全で信頼性の高いセッションをサポートするバインディングを指定する <see cref="T:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingElement" /> 構成要素の基本クラスを提供します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.#ctor(System.String)">
      <summary>指定された名前で  <see cref="T:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">この構成要素を一意に識別する名前。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>指定されたバインディングのコンテンツを使用して、このバインディング構成要素を初期化します。</summary>
      <param name="binding">バインディング。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.IsDynamic">
      <summary>バインディング基本要素が動的であるかどうかを取得または設定します。</summary>
      <returns>バインディング基本要素が動的な場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.MaxBufferPoolSize">
      <summary><see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" />バインディングによって処理されたメッセージを格納するバッファー プールの最大サイズを取得または設定します。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" /> バインディングによって処理されたメッセージを格納するバッファー プールの最大サイズ。規定値は 524288 バイトです。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.MaxReceivedMessageSize">
      <summary><see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" /> バインディングで構成されたチャネルで受信したメッセージの最大サイズを取得または設定します。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" /> バインディングで構成されたチャネルで受信したメッセージの最大サイズ。規定値は 65536 バイトです。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.MessageEncoding">
      <summary>SOAP メッセージのエンコードに MTOM または Text/XML を使用するかどうかを取得または設定します。</summary>
      <returns>SOAP メッセージのエンコードに MTOM または Text/XML を使用するかどうかを示します。既定は Text/XML です。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>この構成要素の設定を、指定されたバインディングに適用します。</summary>
      <param name="binding">設定を更新するバインディング。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.Properties">
      <summary>このバインディング構成要素のプロパティのコレクションを取得します。</summary>
      <returns>このバインディング構成要素のプロパティのコレクション。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.ProxyAddress">
      <summary>HTTP プロキシの URI アドレスを取得または設定します。</summary>
      <returns>HTTP プロキシの URI アドレス。既定は null です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.ReaderQuotas">
      <summary><see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" />バインディングで構成されたエンドポイントで処理できる SOAP メッセージの複雑さに対する制約を取得します。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" />バインディングで構成されたエンドポイントで処理できる SOAP メッセージの複雑さに関する制約。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.ReliableSession">
      <summary><see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" />バインディングで定義された WS-Reliable メッセージングのオプションの構成設定を表す <see cref="T:System.ServiceModel.Configuration.StandardBindingOptionalReliableSessionElement" /> 構成要素を取得します。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" />バインディングで定義された WS-Reliable メッセージングのオプションの構成設定を表す <see cref="T:System.ServiceModel.Configuration.StandardBindingOptionalReliableSessionElement" /> 構成要素。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.TextEncoding">
      <summary>メッセージ テキストに使用される文字エンコードを取得または設定します。</summary>
      <returns>メッセージ テキストに使用される文字エンコード。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.UseDefaultWebProxy">
      <summary>自動的に構成されたシステムの HTTP プロキシを使用するかどうかを示す値を取得または設定します (使用可能な場合)。</summary>
      <returns>自動的に構成されたシステムの HTTP プロキシを使用する必要がある場合は true (使用可能な場合)、それ以外の場合は false です。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingElement">
      <summary>分散トランザクションと安全で信頼性の高いセッションをサポートする相互運用可能なバインディングを表す構成要素。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingElement.AllowCookies">
      <summary>サービスまたはクライアントが Cookie を受け入れ、将来の要求に対してこれを伝達するかどうかを示す値を取得または設定します。</summary>
      <returns>サービスまたはクライアントが Cookie を受け入れ、将来の要求に対してこれを伝達する場合は true、それ以外の場合は false です。既定値は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingElement.BindingElementType">
      <summary><see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" /> バインディングのタイプを取得します。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" /> バインディングのタイプ。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>指定されたバインディングのコンテンツを使用して、このバインディング構成要素を初期化します。</summary>
      <param name="binding">この構成要素を初期化するバインディング。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>この構成要素の設定を、指定されたバインディングに適用します。</summary>
      <param name="binding">設定を更新するバインディング。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingElement.Properties">
      <summary>このバインディング構成要素のプロパティのコレクションを取得します。</summary>
      <returns>このバインディング構成要素のプロパティのコレクション。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingElement.Security">
      <summary><see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" /> バインディングのセキュリティ設定を含む <see cref="T:Microsoft.ServiceBus.Configuration.WSHttpRelaySecurityElement" />   構成要素を取得します。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" /> バインディングのセキュリティ設定を含む <see cref="T:Microsoft.ServiceBus.Configuration.WSHttpRelaySecurityElement" />   構成要素。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.WSHttpRelaySecurityElement">
      <summary>Windows Azure Service Bus リレーを介して WS-HTTP サービスのセキュリティを構成する構成要素を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WSHttpRelaySecurityElement.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Configuration.WSHttpRelaySecurityElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelaySecurityElement.Message">
      <summary>メッセージのセキュリティ設定を取得します。</summary>
      <returns>メッセージのセキュリティ設定を指定する <see cref="T:Microsoft.ServiceBus.Configuration.NonDualMessageSecurityOverRelayHttpElement" /> を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelaySecurityElement.Mode">
      <summary>HTTP 要求を受信するように構成されたエンドポイントで使用されるセキュリティ モードを取得または設定します。</summary>
      <returns>適用されるセキュリティのタイプを指定する <see cref="T:Microsoft.ServiceBus.EndToEndSecurityMode" /> を返します。既定値は Message です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelaySecurityElement.RelayClientAuthenticationType">
      <summary>サービス クライアントが使用するリレー クライアント認証タイプを取得または設定します。</summary>
      <returns>認証タイプを含む <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" /> を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelaySecurityElement.Transport">
      <summary>トランスポートのセキュリティ設定を取得します。</summary>
      <returns>トランスポートのセキュリティ設定を指定する <see cref="T:Microsoft.ServiceBus.Configuration.WSHttpRelayTransportSecurityElement" />  を返します。このプロパティによって返される  <see cref="T:Microsoft.ServiceBus.Configuration.WSHttpRelayTransportSecurityElement" />  オブジェクトを使用して、 <see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" /> のトランスポート セキュリティ パラメーターを設定します。TransportCredentialOnly の値が <see cref="M:Microsoft.ServiceBus.WSHttpRelayBinding.#ctor(Microsoft.ServiceBus.EndToEndSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType,System.Boolean)" /> で指定されている場合、Transport プロパティによって提供される設定がサービス エンドポイントに対して有効になります。このプロパティの値は、コンストラクターでのみ明示的なパラメーターとして設定でき、バインディング インスタンスの作成後にその値を再度設定することはできません。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.WSHttpRelayTransportSecurityElement">
      <summary>Windows Azure Service Bus リレーを経由する HTTP トランスポートのセキュリティを記述する構成要素。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WSHttpRelayTransportSecurityElement.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Configuration.WSHttpRelayTransportSecurityElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayTransportSecurityElement.ProxyCredentialType">
      <summary>プロキシに対する認証にサービスまたはクライアント エンドポイントで使用する資格情報のタイプを取得または設定します。</summary>
      <returns>プロキシに対する認証にサービスまたはクライアント エンドポイントで使用されるクライアント資格情報のタイプ。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement">
      <summary>バインディングで構成されたエンドポイントで処理できる SOAP メッセージの複雑さに対する制約を定義する構成要素。このクラスは継承できません。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement.MaxArrayLength">
      <summary>許可される最大配列長を取得または設定します。</summary>
      <returns>許可される最大配列長。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement.MaxBytesPerRead">
      <summary>読み取りごとに返される最大許容バイト数を取得または設定します。</summary>
      <returns>読み取りごとに返される最大許容バイト数。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement.MaxDepth">
      <summary>読み取りごとにネストされたノードの最大深度を取得または設定します。</summary>
      <returns>読み取りごとにネストされたノードの最大深度。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement.MaxNameTableCharCount">
      <summary>テーブル名で許可される最大文字数を取得または設定します。</summary>
      <returns>テーブル名で許可される最大文字数。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement.MaxStringContentLength">
      <summary>XML 要素コンテンツで許可される最大文字数を取得または設定します。</summary>
      <returns>XML 要素コンテンツで許可される最大文字数。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Description.HttpRelayTransportBindingElementImporter">
      <summary>WSDL コントラクトとポリシー アサーションを Windows Azure Service Bus HttpRelayTransport バインディングにマッピングします。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.HttpRelayTransportBindingElementImporter.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Description.HttpRelayTransportBindingElementImporter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.HttpRelayTransportBindingElementImporter.System#ServiceModel#Description#IPolicyImportExtension#ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>バインディングに関するカスタム ポリシー アサーションをインポートします。</summary>
      <param name="importer">インポート プロセスの変更に使用できるメタデータ インポーター。</param>
      <param name="context">カスタム ポリシー アサーションを挿入するポリシー変換コンテキスト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.HttpRelayTransportBindingElementImporter.System#ServiceModel#Description#IWsdlImportExtension#BeforeImport(System.Web.Services.Description.ServiceDescriptionCollection,System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlElement})">
      <summary>HttpRelayTransport バインディングに関連付けられたメタデータ ドキュメントをインポートする前に呼び出されます。</summary>
      <param name="wsdlDocuments">サービスについて説明します。</param>
      <param name="xmlSchemas"><paramref name="wsdlDocuments" /> について説明します。</param>
      <param name="policy">ポリシー要素が含まれます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.HttpRelayTransportBindingElementImporter.System#ServiceModel#Description#IWsdlImportExtension#ImportContract(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>Windows Azure Service Bus HttpRelayTransport バインディングの WSDL コントラクト情報をインポートします。</summary>
      <param name="importer">WSDL メタデータのインポートと解決のための WSDL インポーター。</param>
      <param name="context">WSDL からサービス記述への変換のコンテキスト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.HttpRelayTransportBindingElementImporter.System#ServiceModel#Description#IWsdlImportExtension#ImportEndpoint(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>WSDL で定義されたエンドポイントをサービス記述にマッピングします。</summary>
      <param name="importer">WSDL メタデータのインポートと解決のための WSDL インポーター。</param>
      <param name="context">変換のコンテキスト。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Description.OnewayRelayTransportBindingElementImporter">
      <summary>WSDL コントラクトとポリシー アサーションを Windows Azure Service Bus OnewayRelayTransport バインディングにマッピングします。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.OnewayRelayTransportBindingElementImporter.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Description.OnewayRelayTransportBindingElementImporter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.OnewayRelayTransportBindingElementImporter.System#ServiceModel#Description#IPolicyImportExtension#ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>バインディングに関するカスタム ポリシー アサーションをインポートします。</summary>
      <param name="importer">インポート プロセスの変更に使用できるメタデータ インポーター。</param>
      <param name="context">カスタム ポリシー アサーションを挿入するポリシー変換コンテキスト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.OnewayRelayTransportBindingElementImporter.System#ServiceModel#Description#IWsdlImportExtension#BeforeImport(System.Web.Services.Description.ServiceDescriptionCollection,System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlElement})">
      <summary>OnewayRelayTransport バインディングに関連付けられたメタデータ ドキュメントをインポートする前に呼び出されます。</summary>
      <param name="wsdlDocuments">サービスについて説明します。</param>
      <param name="xmlSchemas"><paramref name="wsdlDocuments" /> について説明します。</param>
      <param name="policy">ポリシー要素が含まれます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.OnewayRelayTransportBindingElementImporter.System#ServiceModel#Description#IWsdlImportExtension#ImportContract(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>Windows Azure Service Bus OnewayRelayTransport バインディングの WSDL コントラクト情報をインポートします。</summary>
      <param name="importer">WSDL メタデータのインポートと解決のための WSDL インポーター。</param>
      <param name="context">WSDL からサービス記述への変換のコンテキスト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.OnewayRelayTransportBindingElementImporter.System#ServiceModel#Description#IWsdlImportExtension#ImportEndpoint(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>WSDL で定義されたエンドポイントをサービス記述にマッピングします。</summary>
      <param name="importer">WSDL メタデータのインポートと解決のための WSDL インポーター。</param>
      <param name="context">変換のコンテキスト。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Description.StandardRelayBindingImporter">
      <summary>WSDL コントラクトとポリシー アサーションを Windows Azure Service Bus 標準バインディングにマッピングします。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.StandardRelayBindingImporter.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Description.StandardRelayBindingImporter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.StandardRelayBindingImporter.BeforeImport(System.Web.Services.Description.ServiceDescriptionCollection,System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlElement})">
      <summary>標準バインディングに関連付けられたメタデータ ドキュメントをインポートする前に呼び出されます。</summary>
      <param name="wsdlDocuments">サービスについて説明します。</param>
      <param name="xmlSchemas"><paramref name="wsdlDocuments" /> について説明します。</param>
      <param name="policy">ポリシー要素が含まれます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.StandardRelayBindingImporter.ImportContract(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>標準バインディングの WSDL コントラクト情報をインポートします。</summary>
      <param name="importer">WSDL メタデータのインポートと解決のための WSDL インポーター。</param>
      <param name="context">WSDL からサービス記述への変換のコンテキストを提供します。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.StandardRelayBindingImporter.ImportEndpoint(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>WSDL で定義されたエンドポイントをサービス記述にマッピングします。</summary>
      <param name="importer">WSDL メタデータのインポートと解決のための WSDL インポーター。</param>
      <param name="endpointContext">変換のコンテキスト。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Description.TcpRelayTransportBindingElementImporter">
      <summary>WSDL コントラクトとポリシー アサーションを Windows Azure Service Bus TcpRelayTransport バインディングにマッピングします。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.TcpRelayTransportBindingElementImporter.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Description.TcpRelayTransportBindingElementImporter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.TcpRelayTransportBindingElementImporter.System#ServiceModel#Description#IPolicyImportExtension#ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>バインディングに関するカスタム ポリシー アサーションをインポートします。</summary>
      <param name="importer">インポート プロセスの変更に使用できるメタデータ インポーター。</param>
      <param name="context">カスタム ポリシー アサーションを挿入するポリシー変換コンテキスト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.TcpRelayTransportBindingElementImporter.System#ServiceModel#Description#IWsdlImportExtension#BeforeImport(System.Web.Services.Description.ServiceDescriptionCollection,System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlElement})">
      <summary>TcpRelayTransport バインディングに関連付けられたメタデータ ドキュメントをインポートする前に呼び出されます。</summary>
      <param name="wsdlDocuments">サービスについて説明します。</param>
      <param name="xmlSchemas"><paramref name="wsdlDocuments" /> について説明します。</param>
      <param name="policy">ポリシー要素が含まれます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.TcpRelayTransportBindingElementImporter.System#ServiceModel#Description#IWsdlImportExtension#ImportContract(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>Windows Azure Service Bus TcpRelayTransport バインディングの WSDL コントラクト情報をインポートします。</summary>
      <param name="importer">WSDL メタデータのインポートと解決のための WSDL インポーター。</param>
      <param name="context">WSDL からサービス記述への変換のコンテキスト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.TcpRelayTransportBindingElementImporter.System#ServiceModel#Description#IWsdlImportExtension#ImportEndpoint(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>WSDL で定義されたエンドポイントをサービス記述にマッピングします。</summary>
      <param name="importer">WSDL メタデータのインポートと解決のための WSDL インポーター。</param>
      <param name="context">変換のコンテキスト。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.CertificateType">
      <summary>Windows Server ファームの Service Bus の管理で使用される証明書のタイプを指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.CertificateType.CustomFarmCertificate">
      <summary>カスタム証明書を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.CertificateType.GeneratedCertificateRevocationList">
      <summary>生成された証明書失効リストを指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.CertificateType.GeneratedFarmCertificate">
      <summary>生成されたファーム証明書を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.CertificateType.GeneratedFarmRootCertificate">
      <summary>生成されたファーム ルート証明書を指定します。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.ConnectionDetail">
      <summary>サービス バス接続に関連付けられている詳細を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.ConnectionDetail.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Management.ConnectionDetail" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.ConnectionDetail.AuthorizationType">
      <summary>接続の許可タイプを取得または設定します。</summary>
      <returns>接続の許可タイプ。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.ConnectionDetail.ConnectionString">
      <summary>接続に関連付けられた接続文字列を取得または設定します。</summary>
      <returns>接続に関連付けられた接続文字列。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.ConnectionDetail.KeyName">
      <summary>接続に関連付けられたキー名を取得または設定します。</summary>
      <returns>接続に関連付けられたキー名。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.ConnectionDetail.Rights">
      <summary>接続に関連付けられたアクセス権を取得または設定します。</summary>
      <returns>接続に関連付けられたアクセス権。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.ConnectionDetail.SecondaryConnectionString">
      <summary>接続に関連付けられた 2 次接続文字列を取得または設定します。</summary>
      <returns>接続に関連付けられた 2 次接続文字列。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.FarmCertificateInfo">
      <summary>サービス バス ファームに関連付けられている証明書の詳細を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.FarmCertificateInfo.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Management.FarmCertificateInfo" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.FarmCertificateInfo.CertificateKeyName">
      <summary>証明書に関連付けられたキー名を取得または設定します。</summary>
      <returns>証明書に関連付けられたキー名。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.FarmCertificateInfo.CertificateName">
      <summary>証明書の名前を取得または設定します。</summary>
      <returns>証明書の名前。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.FarmCertificateInfo.CertificateType">
      <summary>証明書のタイプを取得または設定します。</summary>
      <returns>証明書のタイプ。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.FarmCertificateInfo.Downloadable">
      <summary>証明書をダウンロード可能かどうかを取得または設定します。</summary>
      <returns>証明書がダウンロード可能な場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.FarmCertificateInfo.ExpirationDate">
      <summary>証明書の有効期限を取得または設定します。</summary>
      <returns>証明書の有効期限。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.FarmCertificateInfo.IsAutoGenerated">
      <summary>証明書が自動生成されたかどうかを取得または設定します。</summary>
      <returns>証明書が自動生成された場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.FarmCertificateInfo.Thumbprint">
      <summary>証明書に関連付けられたサムプリントを取得または設定します。</summary>
      <returns>証明書に関連付けられたサムプリント。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.Metric">
      <summary>Service Bus の状態を監視するために使用されるメトリックを表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.Metric.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Management.Metric" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.Metric.DisplayName">
      <summary>メトリックの表示名を取得または設定します。</summary>
      <returns>メトリックの表示名。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.Metric.Name">
      <summary>メトリックの名前を取得または設定します。</summary>
      <returns>メトリックの名前。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.Metric.PrimaryAggregation">
      <summary>このメトリックのプライマリ集計を取得または設定します。</summary>
      <returns>このメトリックのプライマリ集計。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.Metric.Rollups">
      <summary>メトリック ロールアップのコレクションを取得または設定します。</summary>
      <returns>メトリック ロールアップのコレクション。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.Metric.Unit">
      <summary>メトリック単位を取得または設定します。</summary>
      <returns>メトリック単位。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.MetricRollup">
      <summary>Service Bus メトリックのロールアップ データを表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.MetricRollup.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Management.MetricRollup" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.MetricRollup.Retention">
      <summary>ロールアップに関連付けられた保持時間を取得または設定します。</summary>
      <returns>ロールアップに関連付けられた保持時間。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.MetricRollup.TimeGrain">
      <summary>ロールアップに関連付けられた時間グレインを取得または設定します。</summary>
      <returns>ロールアップに関連付けられた時間グレイン。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.MetricRollup.Values">
      <summary>メトリック値のコレクションを取得または設定します。</summary>
      <returns>メトリック値のコレクション。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.MetricValue">
      <summary>サービス バスに関連付けられたメトリックの値を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.MetricValue.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Management.MetricValue" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.MetricValue.Average">
      <summary>メトリックの平均値を取得または設定します。</summary>
      <returns>メトリックの平均値。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.MetricValue.Max">
      <summary>メトリックの最大値を取得または設定します。</summary>
      <returns>メトリックの最大値。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.MetricValue.Min">
      <summary>メトリックの最小値を取得または設定します。</summary>
      <returns>メトリックの最小値。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.MetricValue.Timestamp">
      <summary>メトリック値に関連付けられたタイム スタンプを取得または設定します。</summary>
      <returns>メトリック値に関連付けられたタイム スタンプ。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.MetricValue.Total">
      <summary>合計メトリック値を取得または設定します。</summary>
      <returns>合計メトリック値。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.NamespaceAvailability">
      <summary>特定のサービス名前空間の可用性を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.NamespaceAvailability.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Management.NamespaceAvailability" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceAvailability.Available">
      <summary>名前空間を使用できるかどうかを取得または設定します。</summary>
      <returns>名前空間を使用できる場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceAvailability.ExtensionData">
      <summary>名前空間に関連付けられた拡張データ オブジェクトを取得または設定します。</summary>
      <returns>名前空間に関連付けられた拡張データ オブジェクト。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceAvailability.Reason">
      <summary>名前空間を使用できない理由を取得または設定します。</summary>
      <returns>名前空間を使用できない理由。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceAvailability.ReasonDetail">
      <summary>名前空間に関連付けられた理由に関する詳細情報を取得または設定します。</summary>
      <returns>名前空間に関連付けられた理由に関する詳細情報。</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NamespaceAvailability.Serializer">
      <summary>データ コントラクト シリアライザー。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.NamespaceDescription">
      <summary>サービス名前空間に望ましいセマンティクスを定義します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.NamespaceDescription.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Management.NamespaceDescription" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.AcsManagementEndpoint">
      <summary>アクセス制御サービスの管理エンドポイントを取得または設定します。</summary>
      <returns>アクセス制御サービスの管理エンドポイント。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.ConnectionString">
      <summary>クライアントがサーバーに接続するために使用する接続文字列を取得または設定します。</summary>
      <returns>クライアントがサーバーに接続するために使用する接続文字列。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.CreatedAt">
      <summary>名前空間が作成された日付を取得または設定します。</summary>
      <returns>名前空間が作成された日付。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.Critical">
      <summary>説明が Nullable のクリティカルな説明であるかどうかを取得または設定します。</summary>
      <returns>説明が Nullable のクリティカルな説明である場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.DefaultKey">
      <summary>名前空間の既定のキーを取得または設定します。</summary>
      <returns>名前空間の既定のキー。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.Enabled">
      <summary>このインスタンスを有効にするかどうかを指定します。</summary>
      <returns>このインスタンスが有効になっている場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.Name">
      <summary>名前空間の名前を取得または設定します。</summary>
      <returns>名前空間の名前。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.Region">
      <summary>顧客データが格納される Microsoft データセンターの地理的リージョンを取得または設定します。</summary>
      <returns>顧客データが格納される Microsoft データセンターの地理的リージョン。</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NamespaceDescription.Serializer">
      <summary>名前空間に関連付けられたデータ コントラクト シリアライザー。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.ServiceBusEndpoint">
      <summary>サービス バスのエンドポイント点値を取得または設定します。</summary>
      <returns>サービス バスのエンドポイント値。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.Status">
      <summary>名前空間の状態を取得または設定します。</summary>
      <returns>名前空間の状態。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.SubscriptionId">
      <summary>名前空間サブスクリプション識別子を取得または設定します。</summary>
      <returns>名前空間サブスクリプション識別子。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.NamespaceEntityStats">
      <summary>名前空間エンティティの属性を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.NamespaceEntityStats.#ctor">
      <summary>4 <see cref="T:Microsoft.ServiceBus.Management.NamespaceEntityStats" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceEntityStats.NotificationHubCount">
      <summary>通知ハブの数を取得または設定します。</summary>
      <returns>通知ハブの数。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceEntityStats.QueueCount">
      <summary>ステータスに関連付けられたキューの数を取得または設定します。</summary>
      <returns>ステータスに関連付けられたキューの数。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceEntityStats.RelayCount">
      <summary>ステータスに関連付けられたリレーの数を取得または設定します。</summary>
      <returns>ステータスに関連付けられたリレーの数。</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NamespaceEntityStats.Serializer">
      <summary>ステータス シリアライザーを指定します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceEntityStats.TopicCount">
      <summary>ステータスに関連付けられたトピックの数を取得または設定します。</summary>
      <returns>ステータスに関連付けられたトピックの数。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.NamespaceState">
      <summary>異なる名前空間の状態を列挙します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NamespaceState.Activating">
      <summary>名前空間がアクティブ化されています。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NamespaceState.Active">
      <summary>名前空間がアクティブです。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NamespaceState.Created">
      <summary>名前空間が作成されます。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NamespaceState.Creating">
      <summary>名前空間が作成されています。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NamespaceState.Disabled">
      <summary>名前空間は無効です。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NamespaceState.Disabling">
      <summary>名前空間を無効にしています。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NamespaceState.Enabling">
      <summary>名前空間を有効にしています。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NamespaceState.Removed">
      <summary>名前空間が削除されます。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NamespaceState.Removing">
      <summary>名前空間を削除しています。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NamespaceState.SoftDeleted">
      <summary>名前空間が削除されます。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NamespaceState.SoftDeleting">
      <summary>名前空間は削除用にマークされます。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NamespaceState.Unknown">
      <summary>名前空間が不明です。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.NotificationHubPlan">
      <summary>通知ハブ計画を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.NotificationHubPlan.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Management.NotificationHubPlan" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubPlan.Revision">
      <summary>リビジョンを取得または設定します。</summary>
      <returns>リビジョン。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubPlan.SelectedSKUMaxUnits">
      <summary>選択した SKU の最大単位を取得または設定します。</summary>
      <returns>選択した SKU の最大単位。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubPlan.SelectedSKUMinUnits">
      <summary>選択した SKU の最小単位を取得または設定します。</summary>
      <returns>選択した SKU の最小単位。</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NotificationHubPlan.SKU">
      <summary>在庫保管単位を指定します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubPlan.UpdatedAt">
      <summary>プランが更新された正確な時刻を取得または設定します。</summary>
      <returns>プランが更新された正確な時刻。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.NotificationHubPnsCredentials">
      <summary>通知ハブに関連付けられている PNS 資格情報を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.NotificationHubPnsCredentials.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Management.NotificationHubPnsCredentials" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubPnsCredentials.AdmCredential">
      <summary>管理者資格情報を取得または設定します。</summary>
      <returns>管理者資格情報。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubPnsCredentials.ApnsCredential">
      <summary>APNS 資格情報を取得または設定します。</summary>
      <returns>APNS 資格情報。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubPnsCredentials.GcmCredential">
      <summary>GCM 資格情報を取得または設定します。</summary>
      <returns>GCM 資格情報。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubPnsCredentials.MpnsCredential">
      <summary>MPNS 資格情報を取得または設定します。</summary>
      <returns>MPNS 資格情報。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubPnsCredentials.Revision">
      <summary>資格情報のリビジョンを取得または設定します。</summary>
      <returns>資格情報のリビジョン。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubPnsCredentials.UpdatedAt">
      <summary>資格情報が最後に更新された日付を取得または設定します。</summary>
      <returns>資格情報が最後に更新された日付。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubPnsCredentials.WnsCredential">
      <summary>WNS 資格情報を取得または設定します。</summary>
      <returns>WNS 資格情報。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.NotificationHubSKU">
      <summary>通知ハブの SKU を提供します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.NotificationHubSKU.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Management.NotificationHubSKU" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubSKU.MaxAllowedApiCallsPerDayPerUnit">
      <summary>単位あたりの 1 日の最大許容 API 呼び出し数を取得または設定します。</summary>
      <returns>単位あたりの 1 日の最大許容 API 呼び出し数。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubSKU.MaxAllowedDevicesPerUnit">
      <summary>単位あたりの最大許容デバイス数を取得または設定します。</summary>
      <returns>単位あたりの最大許容デバイス数。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubSKU.MaxAllowedOperationsPerDayPerUnit">
      <summary>単位あたりの 1 日の最大許容操作数を取得または設定します。</summary>
      <returns>単位あたりの 1 日の最大許容操作数。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubSKU.MaxAllowedPushesPerDayPerUnit">
      <summary>単位あたりの 1 日の最大許容プッシュ数を取得または設定します。</summary>
      <returns>単位あたりの 1 日の最大許容プッシュ数。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubSKU.MaxAllowedRegistrationsPerUnit">
      <summary>単位あたりの最大許容登録数を取得または設定します。</summary>
      <returns>単位あたりの最大許容登録数。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubSKU.MaxAllowedUnits">
      <summary>最大許容単位数を取得または設定します。</summary>
      <returns>最大許容単位数。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubSKU.MinAllowedUnits">
      <summary>最小許容単位数を取得または設定します。</summary>
      <returns>最小許容単位数。</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NotificationHubSKU.SKU">
      <summary>通知ハブの在庫管理単位を指定します。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.NotificationHubSKUType">
      <summary>通知ハブ SKU のタイプのリストを指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NotificationHubSKUType.Basic">
      <summary>通知ハブの基本層タイプを表します。「通知ハブの価格詳細」を参照してください。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NotificationHubSKUType.Free">
      <summary>通知ハブの無料利用枠タイプを表します。「通知ハブの価格詳細」を参照してください。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NotificationHubSKUType.Standard">
      <summary>通知ハブ標準層タイプを表します。「通知ハブの価格詳細」を参照してください。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.Property">
      <summary>サービス バス プロパティを表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.Property.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Management.Property" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.Property.Clone">
      <summary>このインスタンスのコピーを作成します。</summary>
      <returns>このインスタンスの作成されたコピー。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.Property.Created">
      <summary>プロパティが作成された時期を取得または設定します。</summary>
      <returns>プロパティが作成された日付。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.Property.Modified">
      <summary>プロパティが変更された時期を取得または設定します。</summary>
      <returns>プロパティが変更された日付。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.Property.Name">
      <summary>プロパティの名前を取得または設定します。</summary>
      <returns>プロパティの名前。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.Property.Revision">
      <summary>プロパティのバージョンを取得または設定します。</summary>
      <returns>プロパティのバージョン。</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.Property.Serializer">
      <summary>プロパティに関連付けられているシリアライザー。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.Property.Value">
      <summary>プロパティ値を取得または設定します。</summary>
      <returns>プロパティ値。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.RegionCodeDescription">
      <summary>Service Bus のリージョン コードに関連付けられている説明を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.RegionCodeDescription.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Management.RegionCodeDescription" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.RegionCodeDescription.Code">
      <summary>このインスタンスに関連付けられているコードを取得または設定します。</summary>
      <returns>このインスタンスに関連付けられているコード。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.RegionCodeDescription.FullName">
      <summary>このインスタンスの完全な名前を取得または設定します。</summary>
      <returns>このインスタンスの完全な名前。</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.RegionCodeDescription.Serializer">
      <summary>説明に関連付けられたシリアル化を行います。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.UnavailableReason">
      <summary>サービスが使用できない理由を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.UnavailableReason.InvalidName">
      <summary>サービスの名前は無効です。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.UnavailableReason.NameInLockdown">
      <summary>サービスの名前はロックダウン中です。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.UnavailableReason.NameInUse">
      <summary>サービスの名前は使用中です。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.UnavailableReason.None">
      <summary>理由が定義されていません。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.UnavailableReason.SubscriptionIsDisabled">
      <summary>サービス サブスクリプションが無効になっています。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.UnavailableReason.TooManyNamespaceInCurrentSubscription">
      <summary>現在のサブスクリプションに含まれる名前空間が多すぎます。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.UsageCredit">
      <summary>使用クレジット管理を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.UsageCredit.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Management.UsageCredit" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.UsageCredit.Equals(Microsoft.ServiceBus.Management.UsageCredit)">
      <summary>このインスタンスが別の使用クレジットと等しいかどうかを指定します。</summary>
      <returns>このインスタンスが別の使用クレジットと等しい場合は true、それ以外の場合は false です。</returns>
      <param name="other">比較する他の使用クレジット。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.UsageCredit.ExtensionData">
      <summary>データを格納するオブジェクトを取得または設定します</summary>
      <returns>データを格納するオブジェクト</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.UsageCredit.Identifier">
      <summary>クレジット識別子を取得または設定します。</summary>
      <returns>クレジット識別子。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.UsageCredit.KeyName">
      <summary>クレジットに関連付けられたキー名を取得または設定します。</summary>
      <returns>クレジットに関連付けられたキー名。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.UsageCredit.NHBasicUnit">
      <summary>通知ハブの基本単位を取得または設定します。</summary>
      <returns>通知ハブの基本単位。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.UsageCredit.NHStandardUnit">
      <summary>通知ハブの標準単位を取得または設定します。</summary>
      <returns>通知ハブの標準単位。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.UsageCredit.RequestorService">
      <summary>要求元サービスを取得または設定します。</summary>
      <returns>要求元サービス。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.UsageCredit.Revision">
      <summary>クレジット リビジョンを取得または設定します。</summary>
      <returns>クレジット リビジョン。</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.UsageCredit.Serializer">
      <summary>使用クレジット シリアライザーを指定します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.UsageCredit.ToString">
      <summary><see cref="T:Microsoft.ServiceBus.Management.UsageCredit" /> の文字列表現を返します。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.Management.UsageCredit" /> の文字列表現。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.UsageCredit.UpdatedAt">
      <summary>クレジットの詳細が更新された最後の日付を取得または設定します。</summary>
      <returns>クレジットの詳細が更新された最後の日付。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.UserValidationResult">
      <summary>ユーザー検証に関連付けられた結果を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.UserValidationResult.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Management.UserValidationResult" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.UserValidationResult.Reason">
      <summary>ユーザー検証の理由を取得または設定します。</summary>
      <returns>ユーザー検証の理由。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.UserValidationResult.Result">
      <summary>検証の結果を取得または設定します。</summary>
      <returns>検証の結果。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.AccessRights">
      <summary>ユーザーに対して可能なアクセス権を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.AccessRights.Listen">
      <summary>アクセス権は Listen です。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.AccessRights.Manage">
      <summary>アクセス権は Manage です。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.AccessRights.Send">
      <summary>アクセス権は Send です。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.AllowRule">
      <summary>許可するルールを表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AllowRule.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.AllowRule" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AllowRule.#ctor(System.String,Microsoft.ServiceBus.Messaging.AllowRuleClaimType,System.String,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AccessRights})">
      <summary>指定されたパラメーターで <see cref="T:Microsoft.ServiceBus.Messaging.AllowRule" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="issuerName">クレーム発行者の  <see cref="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.IssuerName" />名。</param>
      <param name="claimType">クレームの <see cref="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.ClaimType" /> タイプ。</param>
      <param name="claimValue">クレームの <see cref="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.ClaimValue" /> 値。</param>
      <param name="rights">可能な <see cref="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.Rights" /> のリスト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AllowRule.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AccessRights})">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.AllowRule" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="issuerName">クレーム発行者の  <see cref="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.IssuerName" />名。</param>
      <param name="claimType">クレームの <see cref="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.ClaimType" /> タイプ。</param>
      <param name="claimValue">クレームの <see cref="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.ClaimValue" /> 値。</param>
      <param name="rights">可能な <see cref="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.Rights" /> のリスト。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.AllowRule.KeyName">
      <summary>許可ルール キー名を取得または設定します。</summary>
      <returns>許可ルール キー名。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.AllowRuleClaimType">
      <summary>AllowRuleClaim タイプのリストを指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.AllowRuleClaimType.Role">
      <summary>タイプは Role です。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.AllowRuleClaimType.Upn">
      <summary>タイプは Upn です。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.AuthorizationRule">
      <summary>操作が許容されるかどうかを判断するために使用される Azure Service Bus 承認ルールを定義します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.ClaimType">
      <summary>クレームのタイプを取得または設定します。</summary>
      <returns>クレームのタイプ。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.ClaimValue">
      <summary>「Send」、「Listen」、または「Manage」のいずれかであるクレーム値を取得または設定します。</summary>
      <returns>「Send」、「Listen」、「Manage」のいずれかのクレーム値。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRule.Clone">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" /> のコピーを作成します。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" /> の作成済みコピー。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.CreatedTime">
      <summary>承認ルールが作成された日時を取得または設定します。</summary>
      <returns>承認ルールが作成された日時。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRule.Equals(System.Object)">
      <summary>指定されたオブジェクトが現在のオブジェクトと等しいかどうかを決定します。</summary>
      <returns>指定されたオブジェクトが現在のオブジェクトと等しい場合は true、それ以外の場合は false です。</returns>
      <param name="obj">現在のオブジェクトと比較するオブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRule.GetHashCode">
      <summary>このインスタンスのハッシュ コードを返します。</summary>
      <returns>このインスタンスのハッシュ コード。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.IssuerName">
      <summary>発行者の名前識別子を取得または設定します。</summary>
      <returns>発行者の名前識別子。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.KeyName">
      <summary>承認ルール キー名を取得または設定します。</summary>
      <returns>承認ルール キー名。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.ModifiedTime">
      <summary>承認ルールが変更された日時を取得または設定します。</summary>
      <returns>承認ルールが変更された日時。</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.AuthorizationRule.NameIdentifierClaimType">
      <summary>名前識別子要求ルール。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRule.OnValidate">
      <summary>承認ルールを検証する際に派生クラスがカスタム処理を提供できるようにします。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.Revision">
      <summary>変更リビジョン番号を取得または設定します。</summary>
      <returns>変更リビジョン番号。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.Rights">
      <summary>権限の一覧を取得または設定します。</summary>
      <returns>権限の一覧。</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.AuthorizationRule.RoleClaimType">
      <summary>役割要求ルール。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.AuthorizationRule.RoleRoleClaimType">
      <summary>役割役割要求ルール。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.AuthorizationRule.SharedAccessKeyClaimType">
      <summary>共有アクセス キー要求ルール。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.AuthorizationRule.ShortNameIdentifierClaimType">
      <summary>短い名前の識別子要求ルール。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.AuthorizationRule.ShortUpnClaimType">
      <summary>短い UPN 要求ルール。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.AuthorizationRule.UpnClaimType">
      <summary>UPN 要求ルール。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRule.ValidateRights(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AccessRights})">
      <summary>指定されたアクセス権の有効性を確認します。</summary>
      <param name="value">チェックするアクセス権。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.AuthorizationRules">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" /> のコレクションを表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.#ctor(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AuthorizationRule})">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" /> 一覧で <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="enumerable"><see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" /> の一覧。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.Add(Microsoft.ServiceBus.Messaging.AuthorizationRule)">
      <summary>指定された <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" /> をコレクションに追加します。</summary>
      <param name="item">追加される <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.Clear">
      <summary>コレクション内のすべての要素をクリアします。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.Contains(Microsoft.ServiceBus.Messaging.AuthorizationRule)">
      <summary>指定された項目がコレクションに存在するかどうかを指定します。</summary>
      <returns>指定された項目が見つかった場合は true、それ以外の場合は false です。</returns>
      <param name="item">コレクション内で検索する項目。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.CopyTo(Microsoft.ServiceBus.Messaging.AuthorizationRule[],System.Int32)">
      <summary>指定された配列インデックスから始まる配列に要素をコピーします。</summary>
      <param name="array">コピーされた要素を保持する配列。</param>
      <param name="arrayIndex">コピーを開始する、ゼロから始まるインデックス。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.AuthorizationRules.Count">
      <summary>コレクションに含まれている <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" /> の数を取得または設定します。</summary>
      <returns>コレクションに含まれている <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" /> の数。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.GetEnumerator">
      <summary>コレクションを介して反復する列挙子を取得します。</summary>
      <returns>コレクションを介して反復するために使用できる列挙子。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.GetRules(System.Predicate{Microsoft.ServiceBus.Messaging.AuthorizationRule})">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" /> のセットを取得します。</summary>
      <returns>指定された値に一致する <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" /> のセット。</returns>
      <param name="match">指定された値に一致する承認ルール。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.GetRules(System.String)">
      <summary>指定された値に一致する <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" /> のセットを取得します。</summary>
      <returns>指定された値に一致する <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" /> のセット。</returns>
      <param name="claimValue">検索する値。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.HasEqualRuntimeBehavior(Microsoft.ServiceBus.Messaging.AuthorizationRules)">
      <summary>指定された <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" /> のランタイムが、この現在のオブジェクトと等しいかどうかを判断します。</summary>
      <returns>ランタイム動作が等しい場合は true、それ以外の場合は false です。</returns>
      <param name="comparand">現在のオブジェクトと比較する <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" />。</param>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.AuthorizationRules.innerCollection">
      <summary>内部コレクションを指定します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.AuthorizationRules.IsReadOnly">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" /> が読み取り専用かどうかを取得または設定します。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" /> が読み取り専用の場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.Remove(Microsoft.ServiceBus.Messaging.AuthorizationRule)">
      <summary>指定された <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" /> をコレクションから削除します。</summary>
      <returns>操作が成功した場合は true、それ以外の場合は false です。</returns>
      <param name="item">削除する項目。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.AuthorizationRules.RequiresEncryption">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" /> で暗号化が必要かどうかを示す値を取得します。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" /> で暗号化が必要な場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.AuthorizationRules.Serializer">
      <summary>オブジェクトをシリアル化および逆シリアル化するシリアライザーを指定します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.System#Collections#IEnumerable#GetEnumerator">
      <summary>コレクションを介して反復する列挙子を取得します。</summary>
      <returns>コレクションを介して反復するために使用できる列挙子。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.TryGetSharedAccessAuthorizationRule(System.String,Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule@)">
      <summary>指定したキーに関連付けられたルールを取得します。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" /> に指定されたキーのある要素が含まれている場合は true、それ以外の場合は false です。</returns>
      <param name="keyName">キーの名前。</param>
      <param name="rule">指定されたキーに関連付けられたルール。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.BrokeredMessage">
      <summary>AppFabric ServiceBus クライアント間の通信単位を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.#ctor(System.IO.Stream)">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="messageBodyStream">メッセージ本文ストリーム。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.#ctor(System.IO.Stream,System.Boolean)">
      <summary>提供されたストリームを本文として使用し、<see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="messageBodyStream">メッセージ本文ストリーム。</param>
      <param name="ownsStream">メッセージが閉じられている場合にストリームを閉じることを示すには true、メッセージが閉じられている場合にストリームを閉じないことを示すには false を使います。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.#ctor(System.Object)">
      <summary>バイナリ XmlDictionaryWriter で DataContractSerializer を使用して、特定のオブジェクトから <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="serializableObject">シリアル化可能なオブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.#ctor(System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>提供された XmlObjectSerializer を使用して、特定のオブジェクトから <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="serializableObject">シリアル化可能なオブジェクト。</param>
      <param name="serializer">シリアライザー オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.Abandon">
      <summary>ピーク ロックされたメッセージのロックを破棄します。</summary>
      <exception cref="T:System.ObjectDisposedException">メッセージが破棄状態の場合、またはメッセージを受信した受信側が破棄状態の場合にスローされます。</exception>
      <exception cref="T:System.InvalidOperationException">メッセージ サーバーから受信されていないメッセージ、またはピーク ロック モードで受信されていないメッセージで呼び出されたメッセージに対してスローされます。</exception>
      <exception cref="T:System.TimeoutException">操作がタイムアウトしたときにスローされます。タイムアウト期間は、<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" /> を介して初期化されます。  タイムアウト値が比較的小さい場合は、この例外を回避するために <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> 値を増やす必要があります。</exception>
      <exception cref="T:System.ServiceModel.MessagingCommunicationException">メッセージを受信するキューまたはサブスクリプションがメッセージ サーバーに存在しなくなったときにスローされます。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException">サービス バス サービスがビジー状態で、要求を処理できない場合。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">メッセージを受領したメッセージ エンティティが削除されている場合。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">このメッセージに関連付けられているロックが失われたか、ロック トークンが見つからなかった場合。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.SessionLockLostException">このメッセージがセッションから受信され、セッションに関連付けられたロックが失われた場合。</exception>
      <exception cref="T:System.UnauthorizedAccessException">TokenProvider によって提供されるセキュリティ トークンに、この操作を実行する要求が含まれていない場合。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">エンティティへの同時接続の数が最大許容値を超えた場合。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.Abandon(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>ピーク ロックされたメッセージのロックを破棄します。</summary>
      <param name="propertiesToModify">変更するプロパティのキーと値のペアコレクション。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.AbandonAsync">
      <summary>ピーク ロックされたメッセージのロックを非同期的に破棄します。</summary>
      <returns>操作の非同期結果。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.AbandonAsync(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>ピーク ロックされたメッセージのロックを非同期的に破棄します。</summary>
      <returns>操作の非同期結果。</returns>
      <param name="propertiesToModify">変更するプロパティのキーと値のペアコレクション。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.BeginAbandon(System.AsyncCallback,System.Object)">
      <summary>非同期操作を開始して、ピーク ロックされたメッセージのロックを放棄します。</summary>
      <returns>非同期要求を参照して、ピーク ロックされたメッセージのロックを破棄する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">受信操作に関する情報を含むユーザー定義オブジェクト。このオブジェクトは、操作が完了すると EndAbandon デリゲートに渡されます。</param>
      <exception cref="T:System.ObjectDisposedException">メッセージが破棄状態にある場合、またはメッセージを受領した受信側が破棄状態のときにスローされます。</exception>
      <exception cref="T:System.InvalidOperationException">メッセージ サーバーから受領していないメッセージに対して呼び出されたときにスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.BeginAbandon(System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>非同期操作を開始して、ピーク ロックされたメッセージのロックを放棄します。</summary>
      <returns>非同期要求を参照して、ピーク ロックされたメッセージのロックを破棄する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="propertiesToModify">変更するプロパティのキーと値のペアコレクション。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">受信操作に関する情報を含むユーザー定義オブジェクト。このオブジェクトは、操作が完了すると EndAbandon デリゲートに渡されます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.BeginComplete(System.AsyncCallback,System.Object)">
      <summary>メッセージを完了するための非同期操作を開始します。</summary>
      <returns>非同期要求を参照してメッセージを完了する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">受信操作に関する情報を含むユーザー定義オブジェクト。このオブジェクトは、操作が完了すると EndComplete デリゲートに渡されます。</param>
      <exception cref="T:System.ObjectDisposedException">メッセージが破棄状態にある場合、またはメッセージを受領した受信側が破棄状態のときにスローされます。</exception>
      <exception cref="T:System.InvalidOperationException">メッセージ サーバーから受領していないメッセージに対して呼び出されたときにスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.BeginDeadLetter(System.AsyncCallback,System.Object)">
      <summary>メッセージを配信不能キューに移動する非同期操作を開始します。</summary>
      <returns>非同期要求を参照してメッセージを配信不能にする <see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">受信操作に関する情報を含むユーザー定義オブジェクト。このオブジェクトは、操作が完了すると EndDeadLetter デリゲートに渡されます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.BeginDeadLetter(System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>メッセージを配信不能キューに移動する非同期操作を開始します。</summary>
      <returns>非同期要求を参照してメッセージを配信不能にする <see cref="T:System.IAsyncResult" />。</returns>
      <param name="propertiesToModify">変更するプロパティのキーと値のペアコレクション。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">受信操作に関する情報を含むユーザー定義オブジェクト。このオブジェクトは、操作が完了すると EndDeadLetter デリゲートに渡されます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.BeginDeadLetter(System.String,System.String,System.AsyncCallback,System.Object)">
      <summary>メッセージを配信不能キューに移動する非同期操作を開始します。</summary>
      <returns>非同期要求を参照してメッセージを配信不能にする <see cref="T:System.IAsyncResult" />。</returns>
      <param name="deadLetterReason">メッセージを配信不能にする理由。</param>
      <param name="deadLetterErrorDescription">メッセージの配信不能に関する説明情報。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">受信操作に関する情報を含むユーザー定義オブジェクト。このオブジェクトは、操作が完了すると EndDeadLetter デリゲートに渡されます。</param>
      <exception cref="T:System.ObjectDisposedException">メッセージが破棄状態であるか、メッセージを受領した受信側が破棄状態のときにスローされます。</exception>
      <exception cref="T:System.InvalidOperationException">メッセージ サーバーから受領していないメッセージに対して呼び出されたときにスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.BeginDefer(System.AsyncCallback,System.Object)">
      <summary>メッセージを延期する非同期操作を開始します。</summary>
      <returns>非同期要求を参照してメッセージを延期する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">受信操作に関する情報を含むユーザー定義オブジェクト。このオブジェクトは、操作が完了すると EndDefer (System.IAsyncResult) デリゲートに渡されます。</param>
      <exception cref="T:System.ObjectDisposedException">メッセージが破棄状態であるか、メッセージを受領した受信側が破棄状態のときにスローされます。</exception>
      <exception cref="T:System.InvalidOperationException">メッセージ サーバーから受領していないメッセージに対して呼び出されたときにスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.BeginDefer(System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>メッセージを延期する非同期操作を開始します。</summary>
      <returns>非同期要求を参照してメッセージを延期する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="propertiesToModify">変更するプロパティのキーと値のペアコレクション。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">受信操作に関する情報を含むユーザー定義オブジェクト。このオブジェクトは、操作が完了すると EndDefer (System.IAsyncResult) デリゲートに渡されます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.BeginRenewLock(System.AsyncCallback,System.Object)">
      <summary>メッセージのロックを更新する非同期操作を開始します。</summary>
      <returns>非同期要求を参照してメッセージのロックを更新する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">受信操作に関する情報を含むユーザー定義オブジェクト。このオブジェクトは、操作が完了すると EndRenewLock(System.IAsyncResult) デリゲートに渡されます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.Clone">
      <summary>メッセージのクローンを新しいメッセージとして送信できるように、メッセージをクローンします。</summary>
      <returns>クローンされたメッセージを含む <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.Complete">
      <summary>メッセージの受信操作を完了し、メッセージを処理済みおよび削除済みとしてマークする必要があることを示します。</summary>
      <exception cref="T:System.ObjectDisposedException">メッセージが破棄状態であるか、メッセージを受領した受信側が破棄状態のときにスローされます。</exception>
      <exception cref="T:System.InvalidOperationException">メッセージ サーバーから受信されていないメッセージ、またはピーク ロック モードで受信されていないメッセージで呼び出されたメッセージに対してスローされます。</exception>
      <exception cref="T:System.ServiceModel.MessagingCommunicationException">メッセージを受信するキューまたはサブスクリプションがメッセージ サーバーに存在しなくなったときにスローされます。</exception>
      <exception cref="T:System.TimeoutException">操作がタイムアウトしたときにスローされます。タイムアウト期間は、<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" /> を介して初期化されます。タイムアウト値が比較的小さい場合は、この例外を回避するために <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> 値を増やす必要があります。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">メッセージのロックの有効期限が切れている場合にスローされます。LockDuration はエンティティ全体の設定であり、 <see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration" /> と <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration" /> を介してそれぞれキューとサブスクリプション向けに初期化できます。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.SessionLockLostException">セッションのロックの有効期限が切れている場合にスローされます。セッション ロック期間は、メッセージ LockDuration と同じであり、エンティティ全体の設定です。<see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration" /> と <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration" /> を介して、それぞれキューとサブスクリプション対して初期化できます。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException">サービス バス サービスがビジー状態で、要求を処理できない場合。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">メッセージを受領したメッセージ エンティティが削除されている場合。</exception>
      <exception cref="T:System.UnauthorizedAccessException">TokenProvider によって提供されるセキュリティ トークンに、この操作を実行する要求が含まれていない場合。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">エンティティへの同時接続の数が最大許容値を超えた場合。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.CompleteAsync">
      <summary>メッセージの受信操作を非同期的に完了し、メッセージを処理済みおよび削除済みとしてマークする必要があることを示します。</summary>
      <returns>操作の非同期結果。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.ContentType">
      <summary>コンテンツのタイプを取得または設定します。</summary>
      <returns>メッセージ本文の内容のタイプ。これは、アプリケーション固有のロジックに対して送信者と受信者によって使用されるコンテンツ タイプ識別子です。</returns>
      <exception cref="T:System.ObjectDisposedException">メッセージが破棄状態の場合にスローされます。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.CorrelationId">
      <summary>関連付け識別子を取得または設定します。</summary>
      <returns>関連付け識別子。</returns>
      <exception cref="T:System.ObjectDisposedException">メッセージが破棄状態の場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.DeadLetter">
      <summary>メッセージを配信不能キューに移動します。</summary>
      <exception cref="T:System.ObjectDisposedException">メッセージが破棄状態であるか、メッセージを受領した受信側が破棄状態のときにスローされます。</exception>
      <exception cref="T:System.InvalidOperationException">メッセージ サーバーから受信されていないメッセージ、またはピーク ロック モードで受信されていないメッセージで呼び出されたメッセージに対してスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.DeadLetter(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>メッセージを配信不能キューに移動します。</summary>
      <param name="propertiesToModify">変更するプロパティのキーと値のペアコレクション。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.DeadLetter(System.String,System.String)">
      <summary>メッセージを配信不能キューに移動します。</summary>
      <param name="deadLetterReason">メッセージを配信不能にする理由。</param>
      <param name="deadLetterErrorDescription">メッセージの配信不能に関する説明情報。</param>
      <exception cref="T:System.ObjectDisposedException">メッセージが破棄状態であるか、メッセージを受領した受信側が破棄状態のときにスローされます。</exception>
      <exception cref="T:System.InvalidOperationException">メッセージ サーバーから受信されていないメッセージ、またはピーク ロック モードで受信されていないメッセージで呼び出されたメッセージに対してスローされます。</exception>
      <exception cref="T:System.ServiceModel.CommunicationException">メッセージを受信するキューまたはサブスクリプションがメッセージ サーバーに存在しなくなったときにスローされます。</exception>
      <exception cref="T:System.TimeoutException">操作がタイムアウトしたときにスローされます。タイムアウト期間は、<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" /> を介して初期化されます。  タイムアウト値が比較的低い場合は、この例外を回避するために <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> の値を増やす必要があります。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">メッセージのロックの有効期限が切れている場合にスローされます。LockDuration はエンティティ全体の設定であり、 <see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration" /> と <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration" /> を介して、それぞれキューとサブスクリプション向けに初期化できます。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.SessionLockLostException">セッションのロックの有効期限が切れている場合にスローされます。セッション ロック期間は、メッセージ LockDuration と同じであり、エンティティ全体の設定です。キューとサブスクリプションに対してそれぞれ <see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration" /> と <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration" /> を介して初期化できます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.DeadLetterAsync">
      <summary>メッセージを非同期的に配信不能キューに移動します。</summary>
      <returns>操作の非同期結果。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.DeadLetterAsync(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>メッセージを非同期的に配信不能キューに移動します。</summary>
      <returns>操作の非同期結果。</returns>
      <param name="propertiesToModify">変更するプロパティのキーと値のペアコレクション。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.DeadLetterAsync(System.String,System.String)">
      <summary>メッセージを非同期的に配信不能キューに移動します。</summary>
      <returns>操作の非同期結果。</returns>
      <param name="deadLetterReason">メッセージを配信不能にする理由。</param>
      <param name="deadLetterErrorDescription">メッセージの配信不能に関する説明情報。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.Defer">
      <summary>受信者がこのメッセージの処理延期を望んでいることを示します。</summary>
      <exception cref="T:System.ObjectDisposedException">メッセージが破棄状態にある場合、またはメッセージを受領した受信側が破棄状態のときにスローされます。</exception>
      <exception cref="T:System.InvalidOperationException">メッセージ サーバーから受信されていないメッセージ、またはピーク ロック モードで受信されていないメッセージで呼び出されたメッセージに対してスローされます。</exception>
      <exception cref="T:System.ServiceModel.MessagingCommunicationException">メッセージを受信するキューまたはサブスクリプションがメッセージ サーバーに存在しなくなったときにスローされます。</exception>
      <exception cref="T:System.TimeoutException">操作がタイムアウトしたときにスローされます。タイムアウト期間は、<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" /> を介して初期化されます。タイムアウト値が比較的小さい場合は、この例外を回避するために <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> 値を増やす必要があります。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">メッセージのロックの有効期限が切れている場合にスローされます。LockDuration はエンティティ全体の設定であり、 <see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration" /> と <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration" /> を介してそれぞれキューとサブスクリプション向けに初期化できます。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.SessionLockLostException">セッションのロックの有効期限が切れている場合にスローされます。セッション ロック期間は、メッセージ LockDuration と同じであり、エンティティ全体の設定です。<see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration" /> と <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration" /> を介して、それぞれキューとサブスクリプション対して初期化できます。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException">サービス バス サービスがビジー状態で、要求を処理できない場合。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">メッセージを受領したメッセージ エンティティが削除されている場合。</exception>
      <exception cref="T:System.UnauthorizedAccessException">TokenProvider によって提供されるセキュリティ トークンに、この操作を実行する要求が含まれていない場合。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">エンティティへの同時接続の数が最大許容値を超えた場合。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.Defer(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>受信者がこのメッセージの処理延期を望んでいることを示します。</summary>
      <param name="propertiesToModify">変更するプロパティのキーと値のペアコレクション。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.DeferAsync">
      <summary>受信者がこのメッセージの処理延期を望んでいることを非同期的に示します。</summary>
      <returns>操作の非同期結果。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.DeferAsync(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>受信者がこのメッセージの処理延期を望んでいることを非同期的に示します。</summary>
      <returns>操作の非同期結果。</returns>
      <param name="propertiesToModify">変更するプロパティのキーと値のペアコレクション。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.DeliveryCount">
      <summary>出荷の数を取得します。</summary>
      <returns>出荷の数。</returns>
      <exception cref="T:System.ObjectDisposedException">メッセージが破棄状態の場合にスローされます。</exception>
      <exception cref="T:System.InvalidOperationException">メッセージが ServiceBus によって配信されていない場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.Dispose">
      <summary>アンマネージド リソースの解放、リリース、またはリセットに関連するアプリケーション定義タスクを実行します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.EndAbandon(System.IAsyncResult)">
      <summary>ピーク ロックされたメッセージのロックを破棄する非同期要求を終了します。</summary>
      <param name="result">非同期 Abandon 要求を参照する <see cref="T:System.IAsyncResult" />。</param>
      <exception cref="T:System.ArgumentException">正しくない <paramref name="result" /> が与えられた場合にスローされます。EndAbandon に渡される <paramref name="result" /> オブジェクトは、一致する BeginAbandon から返されるか、BeginAbandon に提供されたコールバックに渡されるものでなければなりません。</exception>
      <exception cref="T:System.ArgumentNullException">null <paramref name="result" /> で呼び出された場合にスローされます。</exception>
      <exception cref="T:System.TimeoutException">操作がタイムアウトしたときにスローされます。タイムアウト期間は、<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" /> を介して初期化されます。タイムアウト値が比較的小さい場合は、この例外を回避するために <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> 値を増やす必要があります。</exception>
      <exception cref="T:System.ServiceModel.MessagingCommunicationException">メッセージを受信するキューまたはサブスクリプションがメッセージ サーバーに存在しなくなったときにスローされます。</exception>
      <exception cref="T:System.InvalidOperationException">ピーク ロック モードで受信されていないメッセージで呼び出されたときにスローされます。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException">サービス バス サービスがビジー状態で、要求を処理できない場合。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">メッセージを受領したメッセージ エンティティが削除されている場合。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">このメッセージに関連付けられているロックが失われたか、ロック トークンが見つからなかった場合。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.SessionLockLostException">このメッセージがセッションから受信され、セッションに関連付けられたロックが失われた場合。</exception>
      <exception cref="T:System.UnauthorizedAccessException">TokenProvider によって提供されるセキュリティ トークンに、この操作を実行する要求が含まれていない場合。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">エンティティへの同時接続の数が最大許容値を超えた場合。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.EndComplete(System.IAsyncResult)">
      <summary>メッセージを完了するために非同期操作を終了します。</summary>
      <param name="result">非同期 Complete 要求を参照する <see cref="T:System.IAsyncResult" />。</param>
      <exception cref="T:System.ArgumentException">正しくない <paramref name="result" /> が与えられた場合にスローされます。EndComplete に渡される <paramref name="result" /> オブジェクトは、一致する BeginComplete から返されるか、BeginComplete に提供されたコールバックに渡されるものでなければなりません。</exception>
      <exception cref="T:System.ArgumentNullException">null <paramref name="result" /> で呼び出された場合にスローされます。</exception>
      <exception cref="T:System.ServiceModel.MessagingCommunicationException">メッセージを受信するキューまたはサブスクリプションがメッセージ サーバーに存在しなくなったときにスローされます。</exception>
      <exception cref="T:System.TimeoutException">操作がタイムアウトしたときにスローされます。タイムアウト期間は、<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" /> を介して初期化されます。タイムアウト値が比較的小さい場合は、この例外を回避するために <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> 値を増やす必要があります。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">メッセージのロックの有効期限が切れている場合にスローされます。LockDuration はエンティティ全体の設定であり、 <see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration" /> と <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration" /> を介してそれぞれキューとサブスクリプション向けに初期化できます。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.SessionLockLostException">セッションのロックの有効期限が切れている場合にスローされます。セッション ロック期間は、メッセージ LockDuration と同じであり、エンティティ全体の設定です。<see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration" /> と <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration" /> を介して、それぞれキューとサブスクリプション対して初期化できます。</exception>
      <exception cref="T:System.InvalidOperationException">ピーク ロック モードで受信されていないメッセージで呼び出されたときにスローされます。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException">サービス バス サービスがビジー状態で、要求を処理できない場合。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">メッセージを受領したメッセージ エンティティが削除されている場合。</exception>
      <exception cref="T:System.UnauthorizedAccessException">TokenProvider によって提供されるセキュリティ トークンに、この操作を実行する要求が含まれていない場合。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">エンティティへの同時接続の数が最大許容値を超えた場合。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.EndDeadLetter(System.IAsyncResult)">
      <summary>メッセージを配信不能キューに移動する非同期要求を終了します。</summary>
      <param name="result">非同期要求を配信不能メッセージに参照する <see cref="T:System.IAsyncResult" />。</param>
      <exception cref="T:System.ArgumentException">正しくない <paramref name="result" /> が与えられた場合にスローされます。EndDeadLetter に渡される <paramref name="result" /> オブジェクトは、一致する BeginDeadLetter から返されるか、BeginDeadLetter に提供されたコールバックに渡されるものでなければなりません。</exception>
      <exception cref="T:System.ArgumentNullException">null <paramref name="result" /> で呼び出された場合にスローされます。</exception>
      <exception cref="T:System.ServiceModel.MessagingCommunicationException">メッセージを受信するキューまたはサブスクリプションがメッセージ サーバーに存在しなくなったときにスローされます。</exception>
      <exception cref="T:System.TimeoutException">操作がタイムアウトしたときにスローされます。タイムアウト期間は、<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" /> を介して初期化されます。タイムアウト値が比較的低い場合は、この例外を回避するために <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> の値を増やす必要があります。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">メッセージのロックの有効期限が切れている場合にスローされます。LockDuration はエンティティ全体の設定であり、 <see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration" /> と <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration" /> を介して、それぞれキューとサブスクリプション向けに初期化できます。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.SessionLockLostException">セッションのロックの有効期限が切れている場合にスローされます。セッション ロック期間は、メッセージ LockDuration と同じであり、エンティティ全体の設定です。キューとサブスクリプションに対してそれぞれ <see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration" /> と <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration" /> を介して初期化できます。</exception>
      <exception cref="T:System.InvalidOperationException">ピーク ロック モードで受信されていないメッセージで呼び出されたときにスローされます。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">メッセージを受領したメッセージ エンティティが削除されている場合。</exception>
      <exception cref="T:System.UnauthorizedAccessException">TokenProvider によって提供されるセキュリティ トークンに、この操作を実行する要求が含まれていない場合。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">エンティティへの同時接続の数が最大許容値を超えた場合。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException">サービス バス サービスがビジー状態で、要求を処理できない場合。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.EndDefer(System.IAsyncResult)">
      <summary>メッセージを延期する非同期要求を終了します。</summary>
      <param name="result">非同期 Defer 要求を参照する <see cref="T:System.IAsyncResult" />。</param>
      <exception cref="T:System.ArgumentException">正しくない <paramref name="result" /> が与えられた場合にスローされます。EndDefer に渡される <paramref name="result" /> オブジェクトは、一致する BeginDefer から返されるか、BeginDefer に提供されたコールバックに渡されるものでなければなりません。</exception>
      <exception cref="T:System.ArgumentNullException">null <paramref name="result" /> で呼び出された場合にスローされます。</exception>
      <exception cref="T:System.ServiceModel.MessagingCommunicationException">メッセージを受信するキューまたはサブスクリプションがメッセージ サーバーに存在しなくなったときにスローされます。</exception>
      <exception cref="T:System.TimeoutException">操作がタイムアウトしたときにスローされます。タイムアウト期間は、<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" /> を介して初期化されます。タイムアウト値が比較的低い場合は、この例外を回避するために <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> の値を増やす必要があります。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">メッセージのロックの有効期限が切れている場合にスローされます。LockDuration はエンティティ全体の設定であり、 <see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration" /> と <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration" /> を介して、それぞれキューとサブスクリプション向けに初期化できます。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.SessionLockLostException">セッションのロックの有効期限が切れている場合にスローされます。セッション ロック期間は、メッセージ LockDuration と同じであり、エンティティ全体の設定です。キューとサブスクリプションに対してそれぞれ <see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration" /> と <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration" /> を介して初期化できます。</exception>
      <exception cref="T:System.InvalidOperationException">ピーク ロック モードで受信されていないメッセージで呼び出されたときにスローされます。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException">サービス バス サービスがビジー状態で、要求を処理できない場合。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">メッセージを受領したメッセージ エンティティが削除されている場合。</exception>
      <exception cref="T:System.UnauthorizedAccessException">TokenProvider によって提供されるセキュリティ トークンに、この操作を実行する要求が含まれていない場合。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">エンティティへの同時接続の数が最大許容値を超えた場合。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.EndRenewLock(System.IAsyncResult)">
      <summary>メッセージのロックを更新する非同期要求を終了します。</summary>
      <param name="result">RenewLock メソッドを参照する <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.EnqueuedSequenceNumber">
      <summary>エンキューされたメッセージのシーケンス番号を取得または設定します。</summary>
      <returns>エンキューされたメッセージのシーケンス番号。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.EnqueuedTimeUtc">
      <summary>UTC で送信された時刻の日付と時刻を取得または設定します。</summary>
      <returns>UTC のエンキュー時間。この値は、メッセージをエンキューする実際の時間を表します。</returns>
      <exception cref="T:System.ObjectDisposedException">メッセージが破棄状態の場合にスローされます。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.ExpiresAtUtc">
      <summary>メッセージの有効期限が設定されている UTC の日付と時刻を取得します。</summary>
      <returns>UTC のメッセージの有効期限。</returns>
      <exception cref="T:System.ObjectDisposedException">メッセージが破棄状態の場合にスローされます。</exception>
      <exception cref="T:System.InvalidOperationException">メッセージが ServerBus によって配信されていない場合。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.ForcePersistence">
      <summary>メッセージを短時間メモリに保持するのではなく、メッセージをデータベースに即座に永続化するかどうかを示す値を取得または設定します。メッセージが非高速キューまたはトピックに送信される場合、このプロパティは無視されます。</summary>
      <returns>短時間メモリに保持されるのではなく、メッセージをすぐにデータベースに永続化する場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.GetBody``1">
      <summary>バイナリ <see cref="T:System.Xml.XmlDictionaryReader" /> で <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> を使用して、ブローカー メッセージ本文を指定されたタイプのオブジェクトに逆シリアル化します。 </summary>
      <returns>逆シリアル化されたオブジェクトまたはグラフ。</returns>
      <typeparam name="T">メッセージ本文が逆シリアル化されるタイプ。</typeparam>
      <exception cref="T:System.ObjectDisposedException">メッセージが破棄状態にある場合、またはメッセージ本文ストリームが既に破棄されている場合。</exception>
      <exception cref="T:System.InvalidOperationException">メッセージに null 本文ストリームが含まれている場合、または本文ストリームにデータが含まれていない場合、またはメッセージ本文が既に使用されている場合。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.GetBody``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>提供された <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> を使用して、ブローカー メッセージ本文を指定されたタイプのオブジェクトに逆シリアル化します。</summary>
      <returns>逆シリアル化されたオブジェクトまたはグラフ。</returns>
      <param name="serializer">シリアライザー オブジェクト。</param>
      <typeparam name="T">ジェネリック タイプのパラメーター。</typeparam>
      <exception cref="T:System.ObjectDisposedException">メッセージが破棄された状態であるか、メッセージ本文が既に使用されている場合にスローされます。</exception>
      <exception cref="T:System.ArgumentNullException">null <paramref name="serializer" /> オブジェクトを使用して呼び出されたときにスローされます。</exception>
      <exception cref="T:System.InvalidOperationException">メッセージに null 本文ストリームが含まれている場合、または本文ストリームにデータが含まれていない場合、あるいはメッセージ本文が既に使用されている場合にスローされます。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.IsBodyConsumed">
      <summary>メッセージが使用されたかどうかを指定します。</summary>
      <returns>メッセージが使用された場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.Label">
      <summary>アプリケーション固有のラベルを取得または設定します。</summary>
      <returns>アプリケーション固有のラベル。</returns>
      <exception cref="T:System.ObjectDisposedException">メッセージが破棄状態の場合にスローされます。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.LockedUntilUtc">
      <summary>メッセージがキュー/サブスクリプションでロックされるまでの日時を UTC で取得します。</summary>
      <returns>メッセージがキュー/サブスクリプションでロックされるまでの日時。</returns>
      <exception cref="T:System.ObjectDisposedException">メッセージが破棄状態の場合にスローされます。</exception>
      <exception cref="T:System.InvalidOperationException">メッセージが ServiceBus から受信されなかった場合にスローされます。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.LockToken">
      <summary>Service Bus によってこのメッセージに割り当てられたロック トークンを取得します。</summary>
      <returns>Service Bus によってこのメッセージに割り当てられたロック トークン。</returns>
      <exception cref="T:System.ObjectDisposedException">メッセージが破棄状態の場合にスローされます。</exception>
      <exception cref="T:System.InvalidOperationException">メッセージが ServiceBus から受信されなかった場合にスローされます。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.MessageId">
      <summary>メッセージの識別子を取得または設定します。</summary>
      <returns>メッセージの識別子。</returns>
      <exception cref="T:System.ObjectDisposedException">メッセージが破棄状態の場合にスローされます。</exception>
      <exception cref="T:System.ArgumentException">メッセージ識別子が null または長さが 128 字を超える場合にスローされます。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.PartitionKey">
      <summary>セッションに対応しないキューまたはトピックにトランザクション メッセージを送信するためのパーティション キーを取得または設定します。</summary>
      <returns>トランザクション メッセージを送信するためのパーティション キー。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.Properties">
      <summary>アプリケーション固有のメッセージ プロパティを取得します。</summary>
      <returns>アプリケーション固有のメッセージ プロパティ。</returns>
      <exception cref="T:System.ObjectDisposedException">メッセージが破棄状態の場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.RenewLock">
      <summary>メッセージのロックを更新します。</summary>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException"><see cref="P:Microsoft.ServiceBus.Messaging.MessagingException.IsTransient" /> が true の場合は、すぐに操作を再試行できます。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingCommunicationException">操作をすぐに再試行できます。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException"><see cref="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.RenewLock" /> を呼び出すのが遅すぎた場合にスローされます。セッションでは、これは決してスローされません。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.SessionLockLostException">メッセージが <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" /> からの場合、<see cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException" /> の代わりにされます。 </exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.RenewLockAsync">
      <summary>メッセージのロックを非同期的に更新します。</summary>
      <returns>操作の非同期結果。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.ReplyTo">
      <summary>応答するキューのアドレスを取得または設定します。</summary>
      <returns>キュー アドレスへの応答。</returns>
      <exception cref="T:System.ObjectDisposedException">メッセージが破棄状態の場合にスローされます。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.ReplyToSessionId">
      <summary>応答するセッション識別子を取得または設定します。</summary>
      <returns>応答するセッション識別子。</returns>
      <exception cref="T:System.ObjectDisposedException">メッセージが破棄状態の場合にスローされます。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.ScheduledEnqueueTimeUtc">
      <summary>メッセージがエンキューされる日時を UTC で取得または設定します。このプロパティは UTC の時刻を返します。プロパティを設定する場合、指定された DateTime 値も UTC でなくてはなりません。</summary>
      <returns>UTC でスケジュールされたエンキュー時間。この値は、メッセージの送信遅延用です。これは将来、特定の時間に送信されるメッセージを遅らせるために使用されます。</returns>
      <exception cref="T:System.ObjectDisposedException">メッセージが破棄状態の場合にスローされます。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">渡された値が DateTime.MaxValue の場合にスローされます。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.SequenceNumber">
      <summary>Service Bus によってメッセージに割り当てられた一意の番号を取得します。</summary>
      <returns>Service Bus によってメッセージに割り当てられた一意の番号。</returns>
      <exception cref="T:System.ObjectDisposedException">メッセージが破棄状態の場合にスローされます。</exception>
      <exception cref="T:System.InvalidOperationException">メッセージがメッセージ サーバーから受信されなかった場合にスローされます。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.SessionId">
      <summary>セッションの識別子を取得または設定します。</summary>
      <returns>セッションの識別子。</returns>
      <exception cref="T:System.ObjectDisposedException">メッセージが破棄状態の場合にスローされます。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.Size">
      <summary>メッセージのサイズをバイトで取得します。</summary>
      <returns>メッセージ サイズ (バイト)</returns>
      <exception cref="T:System.ObjectDisposedException">メッセージが破棄状態の場合にスローされます。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.State">
      <summary>メッセージの状態を取得または設定します。</summary>
      <returns>メッセージの状態。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>このメソッドは予約されているため、使用できません。IXmlSerializable インターフェイスを実装する場合は、このメソッドから null (Visual Basic では Nothing) を返す必要があります。その代わりにカスタム スキーマを指定する必要がある場合は、クラスに XmlSchemaProviderAttribute を適用します。</summary>
      <returns>WriteXml メソッドによって生成され、ReadXml メソッドによって使用されるオブジェクトの XML 表現を記述する XmlSchema。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>XML 表記からオブジェクトを生成します。このメソッドは内部使用向けなので、直接的または間接的に使用しないでください (シリアライザーやフォーマッターの使用など)。</summary>
      <param name="reader">オブジェクトが逆シリアル化される元の XmlReader ストリーム。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>オブジェクトを XML 表記に変換します。このメソッドは内部使用向けなので、直接的または間接的に使用しないでください (シリアライザーやフォーマッターの使用など)。</summary>
      <param name="writer">オブジェクトがシリアル化される先の XmlWriter ストリーム。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.TimeToLive">
      <summary>メッセージのライブ値の時刻を取得または設定します。これは、メッセージの有効期限が切れる期間です (この期間はメッセージが Service Bus に送信された時点で始まります)。TimeToLive 値より古いメッセージは期限切れになり、メッセージ ストアに保持されなくなります。サブスクライバーは期限切れのメッセージを受信できません。TimeToLive は、メッセージが受信できる最大有効期間ですが、その値は宛先キューまたはサブスクリプションのエンティティで指定された <see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.DefaultMessageTimeToLive" /> 値を超えることはできません。より低い TimeToLive 値を指定すると、個々のメッセージに適用されます。ただし、より大きな値をメッセージに指定すると、エンティティの DefaultMessageTimeToLive 値によってオーバーライドされます。</summary>
      <returns>メッセージのライブ値の時刻。</returns>
      <exception cref="T:System.ObjectDisposedException">メッセージが破棄状態の場合にスローされます。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">渡された値が TimeSpan.Zero 以下の場合にスローされます。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.To">
      <summary>宛先への送信を取得または設定します。</summary>
      <returns>宛先への送信。</returns>
      <exception cref="T:System.ObjectDisposedException">メッセージが破棄状態の場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.ToString">
      <summary>現在のメッセージを表す文字列を返します。</summary>
      <returns>現在のメッセージの文字列表現。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.ViaPartitionKey">
      <summary>トランザクションを使用し、転送キューを介してメッセージを送信する場合に、パーティション キー値を取得または設定します。</summary>
      <returns>トランザクションを使用し、転送キューを介してメッセージを送信する場合のパーティション キー値。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> のプロパティ バッグを表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.ContentType">
      <summary>コンテンツのタイプを取得または設定します。</summary>
      <returns>メッセージ本文の内容のタイプ。これは、アプリケーション固有のロジックに対して送信者と受信者によって使用されるコンテンツ タイプ識別子です。</returns>
      <exception cref="T:System.ObjectDisposedException">メッセージが破棄状態の場合。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.CorrelationId">
      <summary>関連付け識別子を取得または設定します。</summary>
      <returns>関連付け識別子。</returns>
      <exception cref="T:System.ObjectDisposedException">メッセージが破棄状態の場合。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.DeliveryCount">
      <summary>このメッセージを配信するために行われた出荷数を取得します。</summary>
      <returns>このメッセージを配信するために行われた出荷数。</returns>
      <exception cref="T:System.ObjectDisposedException">メッセージが破棄状態の場合。</exception>
      <exception cref="T:System.InvalidOperationException">メッセージが ServiceBus によって配信されていない場合。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.EnqueuedTimeUtc">
      <summary>UTC で送信された時刻の日付と時刻を取得または設定します。</summary>
      <returns>UTC のエンキュー時間。この値は、メッセージをエンキューする実際の時間を表します。</returns>
      <exception cref="T:System.ObjectDisposedException">メッセージが破棄状態の場合。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.ExpiresAtUtc">
      <summary>メッセージの有効期限が設定されている UTC の日付と時刻を取得します。</summary>
      <returns>UTC のメッセージの有効期限。</returns>
      <exception cref="T:System.ObjectDisposedException">メッセージが破棄状態の場合。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.ForcePersistence">
      <summary>このプロパティに永続性を強制するかどうかを取得または設定します。</summary>
      <returns>このプロパティに永続性を強制する場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.Label">
      <summary>アプリケーション固有のラベルを取得または設定します。</summary>
      <returns>アプリケーション固有のラベル。</returns>
      <exception cref="T:System.ObjectDisposedException">メッセージが破棄状態の場合。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.LockedUntilUtc">
      <summary>メッセージがキュー/サブスクリプションでロックされるまでの日時を UTC で取得します。</summary>
      <returns>メッセージがキュー/サブスクリプションでロックされるまでの日時。</returns>
      <exception cref="T:System.ObjectDisposedException">メッセージが破棄状態の場合。</exception>
      <exception cref="T:System.InvalidOperationException">メッセージが ServiceBus から受信されなかった場合。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.LockToken">
      <summary>Service Bus によってメッセージに割り当てられたロック トークンを取得します。</summary>
      <returns>サービス バスによってメッセージに割り当てられたロック トークン。</returns>
      <exception cref="T:System.ObjectDisposedException">メッセージが破棄状態の場合。</exception>
      <exception cref="T:System.InvalidOperationException">メッセージが ServiceBus から受信されなかった場合。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.Message">
      <summary>ブローカー メッセージを取得します。</summary>
      <returns>ブローカー メッセージ オブジェクト。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.MessageId">
      <summary>メッセージの識別子を取得または設定します。</summary>
      <returns>メッセージ識別子。</returns>
      <exception cref="T:System.ObjectDisposedException">メッセージが破棄状態の場合。</exception>
      <exception cref="T:System.ArgumentException">メッセージ識別子が null または 128 字を超える場合。</exception>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.Name">
      <summary>メッセージの送信時に <see cref="T:System.ServiceModel.Channels.Message" /> にプロパティ バッグを適用するために使用される名前。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.PartitionKey">
      <summary>セッションに対応しないキューまたはトピックにトランザクション メッセージを送信するためのパーティション キーを取得または設定します。</summary>
      <returns><see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.Properties">
      <summary>ブローカー メッセージのプロパティを取得します。</summary>
      <returns>ブローカー メッセージのプロパティ。</returns>
      <exception cref="T:System.ObjectDisposedException">メッセージが破棄状態の場合。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.ReplyTo">
      <summary>応答するキューのアドレスを取得または設定します。</summary>
      <returns>キュー アドレスへの応答。</returns>
      <exception cref="T:System.ObjectDisposedException">メッセージが破棄状態の場合。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.ReplyToSessionId">
      <summary>応答するセッション識別子を取得または設定します。</summary>
      <returns>応答するセッション識別子。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.ScheduledEnqueueTimeUtc">
      <summary>メッセージがエンキューされる日時を UTC で取得または設定します。</summary>
      <returns>UTC でスケジュールされたエンキュー時間。この値は、メッセージの送信遅延用です。これは将来、特定の時間に送信されるメッセージを遅らせるために使用されます。</returns>
      <exception cref="T:System.ObjectDisposedException">メッセージが破棄状態の場合。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">渡された値が DateTime.MaxValue の場合。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.SequenceNumber">
      <summary>Service Bus によってメッセージに割り当てられた一意の番号を取得します。</summary>
      <returns>Service Bus によってメッセージに割り当てられた一意の番号。</returns>
      <exception cref="T:System.ObjectDisposedException">メッセージが破棄状態の場合。</exception>
      <exception cref="T:System.InvalidOperationException">メッセージがメッセージ サーバーから受信されなかった場合。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.SessionId">
      <summary>セッションの識別子を取得または設定します。</summary>
      <returns>セッションの識別子。</returns>
      <exception cref="T:System.ObjectDisposedException">メッセージが破棄状態の場合。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.System#ServiceModel#Channels#IMessageProperty#CreateCopy">
      <summary>ブローカー メッセージの現在のインスタンスのコピーを作成します。</summary>
      <returns>ブローカー メッセージの現在のインスタンスのコピー。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.TimeToLive">
      <summary>メッセージのライブ値の時刻を取得または設定します。これは、メッセージの有効期限が切れる期間です (この期間はメッセージが Service Bus に送信された時点で始まります)。TimeToLive 値より古いメッセージが期限切れになり、メッセージ ストアに保持されなくなります。サブスクライバーは期限切れのメッセージを受信できません。</summary>
      <returns>メッセージのライブ値の時刻。</returns>
      <exception cref="T:System.ObjectDisposedException">メッセージが破棄状態の場合。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">渡された値が TimeSpan.Zero 以下の場合。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.To">
      <summary>宛先への送信を取得または設定します。</summary>
      <returns>宛先キューのアドレス。</returns>
      <exception cref="T:System.ObjectDisposedException">メッセージが破棄状態の場合。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.ViaPartitionKey">
      <summary>トランザクションを使用し、転送キューを介してメッセージを送信する場合に、パーティション キー値を取得または設定します。</summary>
      <returns><see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.CorrelationFilter">
      <summary>関連付けフィルター式を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.CorrelationFilter.#ctor">
      <summary>既定値で <see cref="T:Microsoft.ServiceBus.Messaging.CorrelationFilter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.CorrelationFilter.#ctor(System.String)">
      <summary>指定された関連付け識別子で <see cref="T:Microsoft.ServiceBus.Messaging.CorrelationFilter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="correlationId">関連付け識別子。</param>
      <exception cref="T:System.ArgumentException"><paramref name="correlationId" />が null または空の場合にスローされます。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.CorrelationFilter.ContentType">
      <summary>メッセージのコンテンツ タイプを取得します。</summary>
      <returns>メッセージのコンテンツ タイプ。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.CorrelationFilter.CorrelationId">
      <summary>関連付け識別子を取得します。</summary>
      <returns>関連付け識別子。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.CorrelationFilter.Label">
      <summary>アプリケーション固有のラベルを取得します。</summary>
      <returns>アプリケーション固有のラベル。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.CorrelationFilter.Match(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>メッセージが現在の SQL 式と一致するかどうかを示します。</summary>
      <returns>メッセージが現在の SQL 式と一致する場合は true、それ以外の場合は false です。</returns>
      <param name="message"><see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.CorrelationFilter.MessageId">
      <summary>メッセージの識別子を取得します。</summary>
      <returns>メッセージの識別子。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.CorrelationFilter.Preprocess">
      <summary>前処理されたフィルター式を取得します。</summary>
      <returns>前処理されたフィルター式。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.CorrelationFilter.Properties">
      <summary>メッセージのアプリケーション固有のプロパティを取得します。</summary>
      <returns>メッセージのアプリケーション固有のプロパティ。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.CorrelationFilter.ReplyTo">
      <summary>応答するキューのアドレスを取得します。</summary>
      <returns>応答するキューのアドレス。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.CorrelationFilter.ReplyToSessionId">
      <summary>応答するセッション識別子を取得します。</summary>
      <returns>応答するセッション識別子。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.CorrelationFilter.RequiresPreprocessing">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.CorrelationFilter" /> 式に前処理が必要かどうかを示す値を取得します。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.Messaging.CorrelationFilter" />式に前処理が必要な場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.CorrelationFilter.SessionId">
      <summary>セッション識別子を取得します。</summary>
      <returns>セッション識別子。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.CorrelationFilter.To">
      <summary>送信先のアドレスを取得します。</summary>
      <returns>送信先のアドレス。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.CorrelationFilter.Validate">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.CorrelationFilter" /> オブジェクトを検証します。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.DuplicateMessageException">
      <summary>メッセージの重複エラーを通知する場合の例外。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.DuplicateMessageException.#ctor(System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.DuplicateMessageException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外に関するエラー メッセージ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.DuplicateMessageException.#ctor(System.String,System.Exception)">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.DuplicateMessageException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外に関するエラー メッセージ。</param>
      <param name="innerException">現在の例外の原因である内部例外。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.EntityAvailabilityStatus">
      <summary>エンティティの可用性の状態を列挙します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.EntityAvailabilityStatus.Available">
      <summary>エンティティは使用可能です。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.EntityAvailabilityStatus.Limited">
      <summary>エンティティには制限があります。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.EntityAvailabilityStatus.Restoring">
      <summary>エンティティを復元しています。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.EntityAvailabilityStatus.Unknown">
      <summary>エンティティが不明です。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.EntityDescription">
      <summary>エンティティの説明を表します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.EntityDescription.ExtensionData">
      <summary>追加データを含む構造を取得または設定します。</summary>
      <returns>データ コントラクトに属するものとして認識されないデータを含む <see cref="T:System.Runtime.Serialization.ExtensionDataObject" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.EntityDescription.IsReadOnly">
      <summary>エンティティの説明が読み取り専用であるかどうかを示す値を取得または設定します。</summary>
      <returns>エンティティの説明が読み取り専用の場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EntityDescription.ThrowIfReadOnly">
      <summary>エンティティの説明が読み取り専用の場合は、例外をスローします。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.EntityStatus">
      <summary>メッセージング エンティティの状態に対して可能な値を列挙します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.EntityStatus.Active">
      <summary>メッセージング エンティティの状態がアクティブです。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.EntityStatus.Disabled">
      <summary>メッセージング エンティティの状態は無効です。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.EntityStatus.ReceiveDisabled">
      <summary>メッセージング エンティティの受信状態は無効です。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.EntityStatus.Restoring">
      <summary>メッセージング エンティティの以前の状態を再開します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.EntityStatus.SendDisabled">
      <summary>メッセージング エンティティの送信状態は無効です。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.ExceptionReceivedEventArgs">
      <summary><see cref="E:Microsoft.ServiceBus.Messaging.OnMessageOptions.ExceptionReceived" />イベントのデータを提供します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.ExceptionReceivedEventArgs.#ctor(System.Exception,System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.ExceptionReceivedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="exception">このイベント データが属する例外。</param>
      <param name="action">イベントに関連付けられたアクション。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.ExceptionReceivedEventArgs.Action">
      <summary>イベントに関連付けられたアクションを取得または設定します。</summary>
      <returns>イベントに関連付けられたアクション。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.ExceptionReceivedEventArgs.Exception">
      <summary>このイベント データが属する例外を取得または設定します。</summary>
      <returns>このイベント データが属する例外。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.FalseFilter">
      <summary>false フィルター式を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.FalseFilter.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.FalseFilter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.FalseFilter.Match(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>メッセージを現在の SQL 式と一致させます。</summary>
      <returns>一致する場合は true、それ以外の場合は false です。</returns>
      <param name="message">ブローカー メッセージ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.FalseFilter.Preprocess">
      <summary>前処理されたフィルター式を取得します。</summary>
      <returns>前処理されたフィルター式。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.FalseFilter.RequiresPreprocessing">
      <summary>SQL フィルター式に前処理が必要かどうかを示す値を取得します。</summary>
      <returns>SQL フィルター式で前処理が必要な場合は true、それ以外の場合は false です。現在は常に true を返します。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.FalseFilter.Validate">
      <summary>SQL 式を検証します。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.Filter">
      <summary>ブローカー メッセージに対して評価されるフィルター式について説明します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.Filter.Match(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>ブローカー メッセージをフィルター式と一致させます。</summary>
      <returns>ブローカー メッセージがフィルター 式と一致する場合は true、それ以外の場合は false です。</returns>
      <param name="message">BrokeredMessage オブジェクト。</param>
      <exception cref="T:System.InvalidOperationException">この操作は、オブジェクトの現在の状態では無効です。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.FilterActionException">フィルターの評価に失敗しました。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.Filter.Preprocess">
      <summary>フィルター式を前処理し、前処理された FilterExpression を返します。</summary>
      <returns>前処理された FilterExpression。</returns>
      <exception cref="T:System.InvalidOperationException">この操作は、オブジェクトの現在の状態では無効です。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.Filter.RequiresPreprocessing">
      <summary>フィルター式に前処理が必要かどうかを示す値を取得します。</summary>
      <returns>フィルター式に前処理が必要な場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.Filter.System#Runtime#Serialization#IExtensibleDataObject#ExtensionData">
      <summary>余分なデータを含むオブジェクトを取得または設定します。</summary>
      <returns>余分なデータを含むオブジェクト。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.Filter.Validate">
      <summary>FilterExpression を検証し、有効な文法規則に準拠していることを確認します。</summary>
      <exception cref="T:Microsoft.ServiceBus.Messaging.FilterActionException">フィルター ステートメントが無効、またはステートメントを評価するときに多くのコンピューティング能力を消費するほど複雑である可能性があります。</exception>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.FilterException">
      <summary>シグナリング フィルター アクション エラーに対してスローされる例外。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.FilterException.#ctor(System.String)">
      <summary>指定されたメッセージを使用して、<see cref="T:Microsoft.ServiceBus.Messaging.FilterException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外メッセージ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.FilterException.#ctor(System.String,System.Exception)">
      <summary>指定されたメッセージと内部例外を使用して、<see cref="T:Microsoft.ServiceBus.Messaging.FilterException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外メッセージ。</param>
      <param name="innerException">内部例外。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler">
      <summary>メッセージ セッションの非同期ハンドラーのインターフェイスを表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnCloseSessionAsync(Microsoft.ServiceBus.Messaging.MessageSession)">
      <summary>セッションが非同期的に閉じられたときに生じるイベントを発生させます。</summary>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
      <param name="session">閉じたセッション。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnMessageAsync(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>メッセージが仲介されたときに発生するイベントを発生させます。</summary>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
      <param name="session">メッセージ セッション。</param>
      <param name="message">ブローカー メッセージ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnSessionLostAsync(System.Exception)">
      <summary>セッションが失われたときに生じるイベントを発生させます。</summary>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
      <param name="exception">セッションが失われる原因となった例外。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory">
      <summary>メッセージ セッションに関連付けられたハンドラー ファクトリのインターフェイスを表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory.CreateInstance(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>ハンドラー ファクトリのインスタンスを作成します。</summary>
      <returns>作成されたインスタンス。</returns>
      <param name="session">メッセージ セッション。</param>
      <param name="message">メッセージ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory.DisposeInstance(Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler)">
      <summary>ハンドラー ファクトリ インスタンスに関連付けられているリソースを解放します。</summary>
      <param name="handler">ハンドラー インスタンス。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.IMessageSessionHandler">
      <summary>メッセージ セッションに関連付けられたハンドラーのインターフェイスを表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.IMessageSessionHandler.OnCloseSession(Microsoft.ServiceBus.Messaging.MessageSession)">
      <summary>アクティブなセッションが閉じたときに生じるイベントを発生させます。</summary>
      <param name="session">終了セッション。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.IMessageSessionHandler.OnMessage(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>メッセージが仲介されたときに生じるイベントを発生させます。</summary>
      <param name="session">現在のメッセージ セッション。</param>
      <param name="message">ブローカー メッセージ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.IMessageSessionHandler.OnSessionLost(System.Exception)">
      <summary>セッションが失われたときに生じるイベントを発生させます。</summary>
      <param name="exception">セッションが失われる原因になったエラー。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory">
      <summary>メッセージ セッションに関連付けられたハンドラー ファクトリのインターフェイスを表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory.CreateInstance(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>ハンドラー ファクトリのインスタンスを作成します。</summary>
      <returns>作成されたインスタンス。</returns>
      <param name="session">メッセージ セッション。</param>
      <param name="message">メッセージ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory.DisposeInstance(Microsoft.ServiceBus.Messaging.IMessageSessionHandler)">
      <summary>ハンドラー ファクトリ インスタンスに関連付けられているリソースを解放します。</summary>
      <param name="handler">ハンドラー インスタンス。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.ManagementStrings">
      <summary>Windows Azure Service Bus メッセージングで使用される文字列定数を提供します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AccessedAt">
      <summary>AccessedAt 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AccessRights">
      <summary>AccessRights 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AcsManagementEndpoint">
      <summary>AcsManagementEndpoint 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Action">
      <summary>Action 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AdmCredential">
      <summary>AdmCredential 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AdminApiUserName">
      <summary>AdminApiUserName 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AdminGroup">
      <summary>AdminGroup 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AdmRegistrationDescription">
      <summary>AdmRegistrationDescription 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AdmRegistrationId">
      <summary>AdmRegistrationId 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AdmRegistrationsCount">
      <summary>AdmRegistrationsCount 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AdmTemplateRegistrationDescription">
      <summary>AdmTemplateRegistrationDescription 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AllowRule">
      <summary>AllowRule 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AllRegistrationsCount">
      <summary>AllRegistrationsCount 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AmqpPort">
      <summary>AmqpPort 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AmqpsPort">
      <summary>AmqpsPort 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ApiVersion">
      <summary>ApiVersion 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ApiVersionName">
      <summary>ApiVersionName 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ApnsCredential">
      <summary>ApnsCredential 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AppleRegistrationDescription">
      <summary>AppleRegistrationDescription 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AppleRegistrationsCount">
      <summary>AppleRegistrationsCount 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AppleTemplateRegistrationDescription">
      <summary>AppleTemplateRegistrationDescription 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ApplicationPlatform">
      <summary>ApplicationPlatform 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AtomEntryContentType">
      <summary>AtomEntryContentType 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AuthorizationRules">
      <summary>AuthorizationRules 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AuthorizationType">
      <summary>AuthorizationType 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AutoDeleteOnIdle">
      <summary>AutoDeleteOnIdle 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.BodyTemplate">
      <summary>BodyTemplate 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.BrokerExternalUrls">
      <summary>BrokerExternalUrls 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.CancelScheduledNotification">
      <summary>CancelScheduledNotification 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.CertificateInfo">
      <summary>CancelScheduledNotification 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Channel">
      <summary>Channel 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Channels">
      <summary>Channels 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ChannelUri">
      <summary>ChannelUri 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ClaimType">
      <summary>ClaimType 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ClaimValue">
      <summary>ClaimValue 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ClientConnectionEndpointPort">
      <summary>ClientConnectionEndpointPort 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ClusterConnectionEndpointPort">
      <summary>ClusterConnectionEndpointPort 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Code">
      <summary>Code 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ConnectionDetail">
      <summary>ConnectionDetail 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ConnectionInformationDescription">
      <summary>ConnectionInformationDescription 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ConnectionString">
      <summary>ConnectionString 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.CorrelationFilter">
      <summary>CorrelationFilter 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.CountDetails">
      <summary>CountDetails 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.CreatedAt">
      <summary>CreatedAt 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Critical">
      <summary>Critical 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.CurrentAbsoluteSKUUnits">
      <summary>CurrentAbsoluteSKUUnits 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.CurrentDatabaseCount">
      <summary>CurrentDatabaseCount 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.CurrentSKUUnits">
      <summary>CurrentSKUUnits 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DailyApiCalls">
      <summary>DailyApiCalls 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DailyMaxActiveDevices">
      <summary>DailyMaxActiveDevices 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DailyMaxActiveRegistrations">
      <summary>DailyMaxActiveRegistrations 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DailyOperations">
      <summary>DailyOperations 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DailyPushes">
      <summary>DailyPushes 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Data">
      <summary>Data 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DatabaseName">
      <summary>DatabaseName 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DatabaseServer">
      <summary>DatabaseServer 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DatabaseSizeInMB">
      <summary>DatabaseSizeInMB 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DataCenter">
      <summary>DataCenter 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DeadLetteringOnFilterEvaluationExceptions">
      <summary>DeadLetteringOnFilterEvaluationExceptions 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DeadLetteringOnMessageExpiration">
      <summary>DeadLetteringOnMessageExpiration 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DefaultKey">
      <summary>DefaultKey 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DefaultMessageTimeToLive">
      <summary>DefaultMessageTimeToLive 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DefaultRuleDescription">
      <summary>DefaultRuleDescription 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DeleteMethod">
      <summary>DeleteMethods 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DesiredDatabaseCount">
      <summary>DesiredDatabaseCount 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DeviceChallenge">
      <summary>DeviceChallenge 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DeviceToken">
      <summary>DeviceToken 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DuplicateDetectionHistoryTimeWindow">
      <summary>DuplicateDetectionHistoryTimeWindow 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EmailAddress">
      <summary>EmailAddress 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EmailRegistrationDescription">
      <summary>EmailRegistrationDescription 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EmptyFilterAction">
      <summary>EmptyFilterAction 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EmptyRuleAction">
      <summary>EmptyRuleAction 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EnableBatchedOperations">
      <summary>EnableBatchedOperations 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Enabled">
      <summary>Enabled 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EnableExpress">
      <summary>EnableExpress 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EnablePartitioning">
      <summary>EnablePartitioning 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EnableRuleAction">
      <summary>EnableRuleAction 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EnableSubscriptionPartitioning">
      <summary>EnableSubscriptionPartitioning 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EncryptionCertificate">
      <summary>EncryptionCertificate 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EntitiesCount">
      <summary>EntitiesCount 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EntityAvailabilityStatus">
      <summary>EntityAvailabilityStatus 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EntityStatus">
      <summary>EntityStatus 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EnumerationResourceName">
      <summary>EnumerationResourceName 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ETag">
      <summary>ETag 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventFeedbackQueueName">
      <summary>EventFeedbackQueueName 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventFeedbackQueueSharedAccessSignature">
      <summary>EventFeedbackQueueSharedAccessSignature 署名文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventHubCollection">
      <summary>EventHubCollection 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventHubDescription">
      <summary>EventHubDescription 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventInputQueueName">
      <summary>EventInputQueueName 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventInputQueueSharedAccessSignature">
      <summary>EventInputInputSharedAccessSignature 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventInputTableName">
      <summary>EventInputTableName 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventInputTableSharedAccessSignature">
      <summary>EventInputTableSharedAccessSignature 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventQueueEndpoint">
      <summary>EventQueueEndpoint 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventSourceInfo">
      <summary>EventSourceInfo 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventSourceName">
      <summary>EventSourceName 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventTableEndpoint">
      <summary>EventTableEndpoint 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ExpirationTime">
      <summary>ExpirationTime 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Expiry">
      <summary>Expiry 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.FailedFilePath">
      <summary>FailedFilePath 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Failure">
      <summary>Failure 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.FalseFilter">
      <summary>FalseFilter 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.FarmCertificate">
      <summary>FarmCertificate 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.FarmDNS">
      <summary>FarmDNS 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.FarmType">
      <summary>FarmType 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Filter">
      <summary>Filter 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.FilteringMessagesBeforePublishing">
      <summary>FilteringMessagesBeforePublishing 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ForwardDeadLetteredMessagesTo">
      <summary>ForwardDeadLetteredMessagesTo 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ForwardTo">
      <summary>ForwardTo 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.FullName">
      <summary>FullName 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.GatewayDBConnectionString">
      <summary>GatewayDBConnectionString 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.GcmCredential">
      <summary>GcmCredential 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.GcmRegistrationDescription">
      <summary>GcmRegistrationDescription 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.GcmRegistrationId">
      <summary>GcmRegistrationId 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.GcmRegistrationsCount">
      <summary>GcmRegistrationsCount 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.GcmTemplateRegistrationDescription">
      <summary>GcmTemplateRegistrationDescription 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.GetMethod">
      <summary>GetMethod 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.GetVersionInfo">
      <summary>GetVersionInfo 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.GetVersionInfoHeaderName">
      <summary>GetVersionInfoHeaderName 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Host">
      <summary>Host 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.HostId">
      <summary>HostId 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.HostName">
      <summary>HostName 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Hosts">
      <summary>Hosts 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.HostStatus">
      <summary>HostStatus 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.HttpsPort">
      <summary>HttpsPort 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Id">
      <summary>Id 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Identifier">
      <summary>Identifier 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.IfMatch">
      <summary>IfMatch 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ImportFileUri">
      <summary>ImportFileUri 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.InputProperties">
      <summary>InputProperties 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.IsAnonymousAccessible">
      <summary>IsAnonymousAccessible 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.IsDynamic">
      <summary>IsDynamic 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.IsExpress">
      <summary>IsExpress 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.IsPremium">
      <summary>IsPremium 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.IssueRegistrationSecretPayload">
      <summary>IssueRegistrationSecretPayload 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.IssuerName">
      <summary>IssuerName 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.JobType">
      <summary>JobType 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.KeyName">
      <summary>KeyName 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.LeaseDriverEndpointPort">
      <summary>LeaseDriverEndpointPort 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ListenerCount">
      <summary>ListenerCount 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ListenerType">
      <summary>ListenerType 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.LockDuration">
      <summary>LockDuration 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ManagementSuffix">
      <summary>ManagementSuffix 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxAllowedApiCallsPerDayPerUnit">
      <summary>MaxAllowedApiCallPerPerUnit 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxAllowedDevicesPerUnit">
      <summary>MaxAllowedDevicesPerUnit 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxAllowedOperationsPerDayPerUnit">
      <summary>MaxAllowedOperationsPerDayPerUnit 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxAllowedPushesPerDayPerUnit">
      <summary>MaxAllowedPushsPerDayUnit 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxAllowedRegistrationsPerUnit">
      <summary>MaxAllowedRegistrationsPerUnit 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxAllowedUnits">
      <summary>MaxAllowedUnits 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxCorrelationFiltersPerTopic">
      <summary>MaxCorrelationFiltersPerTopic 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxDeliveryCount">
      <summary>MaxDeliveryCount 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxMessageSizeInBytes">
      <summary>MaxMessageSizeInBytes 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxSizeInMegabytes">
      <summary>MaxSizeInMegabytes 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxSqlFiltersPerTopic">
      <summary>MaxSqlFiltersPerTopic 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxSubscriptionsPerTopic">
      <summary>MaxSubscriptionsPerTopic 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MessageBrokerPort">
      <summary>MessageBrokerPort 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MessageContainerInfo">
      <summary>MessageContainerInfo 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MessageCount">
      <summary>MessageCount 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MessageCountDetails">
      <summary>MessageCountDetails 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MinAllowedUnits">
      <summary>MinAllowedUnits 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MpnsCredential">
      <summary>MpnsCredential 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MpnsHeader">
      <summary>MpnsHeader 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MpnsHeaders">
      <summary>MpnsHeaders 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MpnsRegistrationDescription">
      <summary>MpnsRegistrationDescription 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MpnsRegistrationsCount">
      <summary>MpnsRegistrationsCount 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MpnsTemplateRegistrationDescription">
      <summary>MpnsTemplateRegistrationDescription 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Name">
      <summary>Name 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Namespace">
      <summary>Namespace 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NamespaceAvailability">
      <summary>NamespaceAvailability 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NamespaceDescription">
      <summary>NamespaceDescription 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NamespaceEntityStats">
      <summary>NamespaceEntityStats 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NamespaceMessagingPlan">
      <summary>NamespaceMessagingPlan 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NewPnsHandle">
      <summary>NewPnsHandle 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NHBasicUnit">
      <summary>NHBasicUnit 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NHStandardUnit">
      <summary>NHStandardUnit 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationHubCollection">
      <summary>NotificationHubCollection 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationHubCount">
      <summary>NotificationHubCount 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationHubDescription">
      <summary>NotificationHubDescription 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationHubJob">
      <summary>NotificationHubJob 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationHubJobId">
      <summary>NotificationHubJobId 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationHubPlan">
      <summary>NotificationHubPlan 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationHubPnsCredentials">
      <summary>NotificationHubPnsCredentials 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationHubSKU">
      <summary>NotificationHubSKU 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationOutcome">
      <summary>NotificationOutcome 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.OriginalPnsHandle">
      <summary>OriginalPnsHandle 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Outcome">
      <summary>Outcome 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.OutputContainerUri">
      <summary>OutputContainerUri 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.OutputFilePath">
      <summary>OutputFilePath 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.OutputProperties">
      <summary>OutputProperties 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.PartitionCount">
      <summary>PartitionCount 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Path">
      <summary>Path 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.PnsCredential">
      <summary>PnsCredential 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.PnsCredentialName">
      <summary>PnsCredentialName 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.PnsCredentials">
      <summary>PnsCredentials文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.PnsHandle">
      <summary>PnsHandle 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.PostMethod">
      <summary>PostMethod 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.PrimaryKey">
      <summary>PrimaryKey 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Progress">
      <summary>Progress 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.PublishToRegistry">
      <summary>PublishToRegistry 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.PutMethod">
      <summary>PutMethod 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.QueueCollection">
      <summary>QueueCollection 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.QueueCount">
      <summary>QueueCount 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.QueueDescription">
      <summary>QueueDescription 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ReasonDetail">
      <summary>ReasonDetail 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Region">
      <summary>Region 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RegionCodeDescription">
      <summary>RegionCodeDescription 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RegistrationBoundVariable">
      <summary>RegistrationBoundVariable 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RegistrationCollection">
      <summary>RegistrationCollection 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RegistrationCounts">
      <summary>RegistrationCounts 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RegistrationId">
      <summary>RegistrationId 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RegistrationIds">
      <summary>RegistrationIds 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RegistrationResult">
      <summary>RegistrationResult 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Registrations">
      <summary>Registrations 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RegistrationSecretGcmPayload">
      <summary>RegistrationSecretGcmPayload 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RegistrationSecretPayload">
      <summary>RegistrationSecretPayload 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RegistrationTtl">
      <summary>RegistrationTtl 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RelayCollection">
      <summary>RelayCollection 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RelayCount">
      <summary>RelayCount 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RelayDescription">
      <summary>RelayDescription 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RelayType">
      <summary>RelayType 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RequestorService">
      <summary>RequestorService 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RequiresClientAuthorization">
      <summary>RequiresClientAuthorization 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RequiresDuplicateDetection">
      <summary>RequiresDuplicateDetection  文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RequiresSession">
      <summary>RequiresSession 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RequiresTransportSecurity">
      <summary>RequiresTransportSecurity 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Result">
      <summary>Result 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Results">
      <summary>Results 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Revision">
      <summary>Revision 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Rights">
      <summary>Rights 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RPHttpsPort">
      <summary>RPHttpsPort 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RPHttpsUrl">
      <summary>RPHttpsUrl 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RuleAction">
      <summary>RuleAction 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RuleCollection">
      <summary>RuleCollection 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RuleDescription">
      <summary>RuleDescription 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RunAsAccount">
      <summary>RunAsAccount 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SBFarmDBConnectionString">
      <summary>SBFarmDBConnectionString 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SBFarmInfo">
      <summary>SBFarmInfo 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ScaleUnit">
      <summary>ScaleUnit 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ScaleUnitKey">
      <summary>ScaleUnitKey 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ScheduledNotification">
      <summary>ScheduledNotification 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ScheduledNotificationId">
      <summary>ScheduledNotificationId 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ScheduledNotificationPayload">
      <summary>ScheduledNotificationPayload 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ScheduledNotificationTags">
      <summary>ScheduledNotificationTags 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ScheduledNotificationTime">
      <summary>ScheduledNotificationTime 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SecondaryConnectionString">
      <summary>SecondaryConnectionString 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SecondaryKey">
      <summary>SecondaryKey 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SelectedSKUMaxUnits">
      <summary>SelectedSKUMaxUnits 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SelectedSKUMinUnits">
      <summary>SelectedSKUMinUnits 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Service">
      <summary>Service 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ServiceBusEndpoint">
      <summary>ServiceBusEndpoint 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ServiceBusFarmStatusInfo">
      <summary>ServiceBusFarmStatusInfo 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ServiceConnectionEndpointPort">
      <summary>ServiceConnectionEndpointPort 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ServiceInfo">
      <summary>ServiceInfo 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ServiceName">
      <summary>ServiceName 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SharedAccessAuthorizationRule">
      <summary>SharedAccessAuthorizationRule 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SizeInBytes">
      <summary>SizeInBytes 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SKU">
      <summary>SKU 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SmtpCredential">
      <summary>SmtpCredential 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SqlFilter">
      <summary>SqlFilter 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SqlRuleAction">
      <summary>SqlRuleAction 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Status">
      <summary>Status 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SubscriptionCollection">
      <summary>SubscriptionCollection 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SubscriptionCount">
      <summary>SubscriptionCount 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SubscriptionDescription">
      <summary>SubscriptionDescription 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SubscriptionId">
      <summary>SubscriptionId 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Success">
      <summary>Success 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SupportOrdering">
      <summary>SupportOrdering 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Tag">
      <summary>Tag 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Tags">
      <summary>Tags 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.TcpPort">
      <summary>TcpPort 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.TemplateName">
      <summary>TemplateName 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.TenantApiUserName">
      <summary>TenantApiUserName 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.TextContentType">
      <summary>TextContentType 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.TopicCollection">
      <summary>TopicCollection 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.TopicCount">
      <summary>TopicCount 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.TopicDescription">
      <summary>TopicDescription 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.TrackingId">
      <summary>TrackingId 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.TrueFilter">
      <summary>TrueFilter 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.UpdatedAt">
      <summary>UpdateAt 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.UpdatePnsHandlePayload">
      <summary>UpdatePnsHandlePayload 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.UsageCredit">
      <summary>UsageCredit 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.UserMetadata">
      <summary>UserMetadata 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.UserValidationResult">
      <summary>UserValidationResult 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.WANHDeviceChallenge">
      <summary>WANHDeviceChallenge 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.WANHExpirationTime">
      <summary>WANHExpirationTime 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.WANHRegistrationSecret">
      <summary>WANHRegistrationSecret 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.WindowsRegistrationDescription">
      <summary>WindowsRegistrationDescription 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.WindowsRegistrationsCount">
      <summary>WindowsRegistrationsCount 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.WindowsTemplateRegistrationDescription">
      <summary>WindowsTemplateRegistrationDescription 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.WnsCredential">
      <summary>WnsCredential 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.WnsHeaders">
      <summary>WnsHeaders 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.XProcessAtHttpHeader">
      <summary>XProcessAtHttpHeader 文字列の値を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.XProcessAtHttpHeaderAttributeValue">
      <summary>XProcessAtHttpHeaderAttributeValue 文字列の値を指定します。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessageClientEntity">
      <summary>メッセージ クライアント エンティティを表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageClientEntity.Abort">
      <summary>メッセージ クライアント エンティティを中止し、そのステータスを終了状態にします。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageClientEntity.BeginClose(System.AsyncCallback,System.Object)">
      <summary>メッセージ クライアント エンティティを閉じる非同期操作を開始します。</summary>
      <returns>非同期操作を参照してメッセージ クライアント エンティティを閉じる <see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageClientEntity.Close">
      <summary>メッセージ クライアント エンティティを閉じ、そのステータスを閉じた状態にします。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageClientEntity.CloseAsync">
      <summary>メッセージ クライアント エンティティを非同期的に閉じ、そのステータスを閉じた状態にします。</summary>
      <returns>非同期操作。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageClientEntity.EndClose(System.IAsyncResult)">
      <summary>非同期操作を終了して、メッセージ クライアント エンティティを閉じます。</summary>
      <param name="result">非同期操作を参照してメッセージ クライアント エンティティを閉じる <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageClientEntity.Fault">
      <summary>メッセージ クライアント エンティティを障害状態にします。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageClientEntity.IsClosed">
      <summary>メッセージ クライアント エンティティが閉じているかどうかを示す値を取得または設定します。</summary>
      <returns>メッセージ クライアント エンティティが閉じている場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageClientEntity.OnAbort">
      <summary>Abort 操作を呼び出したときに実行されます。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageClientEntity.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>BeginClose 操作を呼び出したときに実行されます。</summary>
      <returns>非同期操作を参照してメッセージ クライアント エンティティを閉じる <see cref="T:System.IAsyncResult" />。</returns>
      <param name="timeout">操作がタイムアウトする前に待機する時間間隔。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageClientEntity.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>メッセージ クライアント エンティティを開き始めるために操作を呼び出すと実行されます。</summary>
      <returns>非同期操作を参照して、メッセージ クライアント エンティティを開き始める <see cref="T:System.IAsyncResult" />。</returns>
      <param name="timeout">操作がタイムアウトする前に待機する時間間隔。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageClientEntity.OnClose(System.TimeSpan)">
      <summary>Close 操作を呼び出すと実行されます。</summary>
      <param name="timeout">操作がタイムアウトする前に待機する時間間隔。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageClientEntity.OnClosed">
      <summary>メッセージ クライアント エンティティが終了状態に移行されたときに発生します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageClientEntity.OnEndClose(System.IAsyncResult)">
      <summary>EndClose 操作を呼び出したときに実行されます。</summary>
      <param name="result">非同期操作を参照してメッセージ クライアント エンティティを閉じる <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageClientEntity.OnEndOpen(System.IAsyncResult)">
      <summary>メッセージ クライアント エンティティを開くために終了する操作を呼び出すと実行されます。</summary>
      <param name="result">非同期操作を参照してメッセージ クライアント エンティティを開く <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageClientEntity.OnFaulted">
      <summary>Fault 操作を呼び出すと実行されます。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageClientEntity.OnOpen(System.TimeSpan)">
      <summary>メッセージ クライアント エンティティを開くために操作を呼び出すと実行されます。</summary>
      <param name="timeout">操作がタイムアウトする前に待機する時間間隔。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageClientEntity.OnOpened">
      <summary>メッセージ クライアント エンティティが開かれたときに実行します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageClientEntity.RetryPolicy">
      <summary>このインスタンスに関連付けられ、要求を再試行するかどうかを決定するた再試行ポリシーを取得または設定します。</summary>
      <returns>このインスタンスに関連付けられ、要求を再試行するかどうかを決定する再試行ポリシー。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageClientEntity.ThisLock">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.MessageClientEntity" /> インスタンスのロックに使用するオブジェクトを提供します。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.Messaging.MessageClientEntity" />インスタンスのロックに使用されるオブジェクト。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageClientEntity.ThrowIfClosed">
      <summary>メッセージ クライアント エンティティが閉じている場合に例外をスローします。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageClientEntity.ThrowIfDisposed">
      <summary>メッセージ クライアント エンティティが破棄された場合に例外をスローします。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageClientEntity.ThrowIfDisposedOrImmutable">
      <summary>クライアントが破棄または不変の場合に例外をスローします。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageClientEntity.ThrowIfDisposedOrNotOpen">
      <summary>クライアントが破棄されている場合、または開いていない場合に例外をスローします。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageClientEntity.ThrowIfFaulted">
      <summary>クライアントに障害が発生した場合に例外をスローします。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessageCountDetails">
      <summary>このクラスには、プライマリ メッセージング エンティティ (キュー、トピック、サブスクリプション) のサブキューからメッセージの詳細を取得できるプロパティが含まれています。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageCountDetails.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.MessageCountDetails" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageCountDetails.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64)">
      <summary>アクティブなメッセージの数、配信不能、スケジュールされたメッセージ、他のキューやサブスクリプション、トピックに転送されたメッセージ、配信不能キューに転送されたメッセージの数を使用して、<see cref="T:Microsoft.ServiceBus.Messaging.MessageCountDetails" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="activeMessageCount">アクティブなメッセージの数。</param>
      <param name="deadletterMessageCount">配信不能の数。</param>
      <param name="scheduledMessageCount">スケジュールされたメッセージの数。</param>
      <param name="transferMessageCount">他のキュー、サブスクリプション、またはトピックに転送されたメッセージの数。</param>
      <param name="transferDlqMessageCount">配信不能キューに転送されたメッセージの数。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageCountDetails.ActiveMessageCount">
      <summary>キュー、トピック、またはサブスクリプション内のアクティブなメッセージの数を取得または設定します。</summary>
      <returns>アクティブなメッセージの数を指定する <see cref="T:System.Int64" /> を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageCountDetails.DeadLetterMessageCount">
      <summary>配信不能なメッセージの数を取得または設定します。</summary>
      <returns>配信不能なメッセージの数を指定する <see cref="T:System.Int64" /> を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageCountDetails.ScheduledMessageCount">
      <summary>スケジュールされたメッセージの数を取得または設定します。</summary>
      <returns><see cref="T:System.Int64" />スケジュールされたメッセージの数を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageCountDetails.TransferDeadLetterMessageCount">
      <summary>配信不能に転送されるメッセージの数を取得または設定します。</summary>
      <returns>配信不能に転送されたメッセージの数を指定する <see cref="T:System.Int64" /> を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageCountDetails.TransferMessageCount">
      <summary>別のキュー、トピック、またはサブスクリプションに転送されるメッセージの数を取得または設定します。</summary>
      <returns>別のキュー、トピック、またはサブスクリプションに転送されるメッセージの数を指定する <see cref="T:System.Int64" /> を返します。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">
      <summary>メッセージ ロック喪失エラーを通知するためにスローされる例外。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageLockLostException.#ctor(System.String)">
      <summary>指定されたエラー メッセージで MessageLockLostException クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外の理由を説明するエラー メッセージ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageLockLostException.#ctor(System.String,System.Exception)">
      <summary>指定されたエラー メッセージと、この例外の原因である内部例外への参照を使用して、MessageLockLostException クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外の理由を説明するエラー メッセージ。</param>
      <param name="innerException">現在の例外の原因である例外。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessageNotFoundException">
      <summary>エラーが見つからなかったというメッセージを通知するためにスローされる例外。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageNotFoundException.#ctor(System.String)">
      <summary>指定されたエラー メッセージで <see cref="T:Microsoft.ServiceBus.Messaging.MessageNotFoundException" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外の理由を説明するエラー メッセージ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageNotFoundException.#ctor(System.String,System.Exception)">
      <summary>指定されたエラー メッセージと、この例外の原因である内部例外への参照で、<see cref="T:Microsoft.ServiceBus.Messaging.MessageNotFoundException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外の理由を説明するエラー メッセージ。</param>
      <param name="innerException">現在の例外の原因である例外。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessageReceiver">
      <summary>メッセージ コンテナーからメッセージを受信し、確認します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.Abandon(System.Guid)">
      <summary>メッセージを破棄し、メッセージ ロックの所有権を放棄します。</summary>
      <param name="lockToken">破棄するロック メッセージ インスタンスにバインドされたロック トークン。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.Abandon(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>メッセージを破棄し、メッセージ ロックの所有権を放棄します。</summary>
      <param name="lockToken">ロック トークン。</param>
      <param name="propertiesToModify">変更するプロパティ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.AbandonAsync(System.Guid)">
      <summary>メッセージを非同期的に破棄し、メッセージ ロックの所有権を放棄します。</summary>
      <returns>非同期操作。</returns>
      <param name="lockToken">破棄するロック メッセージ インスタンスにバインドされたロック トークン。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.AbandonAsync(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>メッセージを非同期的に破棄し、メッセージ ロックの所有権を放棄します。</summary>
      <returns>非同期操作。</returns>
      <param name="lockToken">ロック トークン。</param>
      <param name="propertiesToModify">変更するプロパティ。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageReceiver.BatchFlushInterval">
      <summary>バッチフラッシュ間隔を取得します。</summary>
      <returns>バッチフラッシュ間隔。既定値は 20 ミリ秒です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageReceiver.BatchingEnabled">
      <summary>バッチ処理が有効になっているかどうかを示す値を取得します。</summary>
      <returns>バッチ処理が有効な場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginAbandon(System.Guid,System.AsyncCallback,System.Object)">
      <summary>メッセージを破棄し、ロックを放棄する非同期操作を開始します。</summary>
      <returns>非同期操作を参照してメッセージを破棄し、ロックを放棄する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="lockToken"><see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> のロック トークン。これは、メッセージがピーク ロック モードで受信された場合にのみ使用できます。ロック トークンは、メッセージを完了または破棄するために内部で使用されます。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginAbandon(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>メッセージを破棄し、ロックを放棄する非同期操作を開始します。</summary>
      <returns>非同期操作を参照してメッセージを破棄し、ロックを放棄する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="lockToken">ロック トークン。</param>
      <param name="propertiesToModify">変更するプロパティ。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginComplete(System.Guid,System.AsyncCallback,System.Object)">
      <summary>メッセージの受信を完了する非同期操作を開始します。</summary>
      <returns>非同期 <see cref="M:Microsoft.ServiceBus.Messaging.MessageReceiver.Complete(System.Guid)" /> を参照する <see cref="T:System.IAsyncResult" /> オブジェクト。 </returns>
      <param name="lockToken"><see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> のロック トークン。これは、メッセージがピーク ロック モードで受信された場合にのみ使用できます。ロック トークンは、メッセージを完了または破棄するために内部で使用されます。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginCompleteBatch(System.Collections.Generic.IEnumerable{System.Guid},System.AsyncCallback,System.Object)">
      <summary>メッセージのバッチ処理を完了するための非同期操作を開始します。</summary>
      <returns>操作を参照する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="lockTokens">ロック トークン。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginDeadLetter(System.Guid,System.AsyncCallback,System.Object)">
      <summary>メッセージを配信不能キューに移動する非同期操作を開始します。</summary>
      <returns>非同期操作を参照して、メッセージを配信不能キューに移動する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="lockToken">ロックされたメッセージ インスタンスにバインドされたロック トークン。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginDeadLetter(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>メッセージを配信不能キューに移動する非同期操作を開始します。</summary>
      <returns>非同期操作を参照して、メッセージを配信不能キューに移動する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="lockToken">ロック トークン。</param>
      <param name="propertiesToModify">変更するプロパティ。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginDeadLetter(System.Guid,System.String,System.String,System.AsyncCallback,System.Object)">
      <summary>メッセージを配信不能キューに移動する非同期操作を開始します。</summary>
      <returns>非同期操作を参照して、メッセージを配信不能キューに移動する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="lockToken">ロックされたメッセージ インスタンスにバインドされたロック トークン。</param>
      <param name="deadLetterReason">メッセージを配信不能にする理由。</param>
      <param name="deadLetterErrorDescription">メッセージの配信不能に関するエラーの説明。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginDefer(System.Guid,System.AsyncCallback,System.Object)">
      <summary>メッセージの受信を中断する非同期操作を開始します。</summary>
      <returns>非同期操作を参照してメッセージの受信を中断する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="lockToken"><see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> のロック トークン。これは、メッセージがピーク ロック モードで受信された場合にのみ使用できます。ロック トークンは、メッセージを完了または破棄するために内部で使用されます。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginDefer(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>メッセージの受信を中断する非同期操作を開始します。</summary>
      <returns>非同期操作を参照してメッセージの受信を中断する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="lockToken">ロック トークン。</param>
      <param name="propertiesToModify">変更するプロパティ。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginPeek(System.AsyncCallback,System.Object)">
      <summary>メッセージをピークする操作を開始します。</summary>
      <returns>メッセージをピークする操作の結果。</returns>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginPeek(System.Int64,System.AsyncCallback,System.Object)">
      <summary>メッセージをピークする操作を開始します。</summary>
      <returns>メッセージをピークする操作の結果。</returns>
      <param name="fromSequenceNumber">メッセージをピークする場所からのシーケンス番号。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginPeekBatch(System.Int32,System.AsyncCallback,System.Object)">
      <summary>メッセージのバッチをピークする操作を開始します。</summary>
      <returns>メッセージをピークする操作の結果。</returns>
      <param name="messageCount">メッセージの数。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginPeekBatch(System.Int64,System.Int32,System.AsyncCallback,System.Object)">
      <summary>メッセージのバッチをピークする操作を開始します。</summary>
      <returns>メッセージをピークする操作の結果。</returns>
      <param name="fromSequenceNumber">メッセージのバッチをピークする場所からのシーケンス番号。</param>
      <param name="messageCount">メッセージの数。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginReceive(System.AsyncCallback,System.Object)">
      <summary>メッセージを受信する非同期操作を開始します。</summary>
      <returns>メッセージを受信する非同期操作を参照する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginReceive(System.Int64,System.AsyncCallback,System.Object)">
      <summary>メッセージを受信する非同期操作を開始します。</summary>
      <returns>メッセージを受信する非同期操作を参照する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="sequenceNumber">Service Bus によってメッセージに割り当てられた一意の番号。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>メッセージを受信する非同期操作を開始します。</summary>
      <returns>メッセージを受信する非同期操作を参照する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="serverWaitTime">操作がタイムアウトになるまでのサーバー待機時間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginReceiveBatch(System.Collections.Generic.IEnumerable{System.Int64},System.AsyncCallback,System.Object)">
      <summary>メッセージのバッチを受信する非同期操作を開始します。</summary>
      <returns>非同期操作を参照してメッセージのバッチを受信する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="sequenceNumbers">シーケンス番号。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginReceiveBatch(System.Int32,System.AsyncCallback,System.Object)">
      <summary>メッセージのバッチを受信する非同期操作を開始します。</summary>
      <returns>非同期操作を参照してメッセージのバッチを受信する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="messageCount">メッセージの数。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginReceiveBatch(System.Int32,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>メッセージのバッチを受信する非同期操作を開始します。</summary>
      <returns>非同期操作を参照してメッセージのバッチを受信する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="messageCount">メッセージの数。</param>
      <param name="serverWaitTime">サーバーの待機時間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.Complete(System.Guid)">
      <summary>メッセージの受信操作を完了します。</summary>
      <param name="lockToken"><see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> のロック トークン。これは、メッセージがピーク ロック モードで受信された場合にのみ使用できます。ロック トークンは、メッセージを完了または破棄するために内部で使用されます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.CompleteAsync(System.Guid)">
      <summary>メッセージの受信操作を非同期的に完了します。</summary>
      <returns>非同期操作。</returns>
      <param name="lockToken">ロック トークン。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.CompleteBatch(System.Collections.Generic.IEnumerable{System.Guid})">
      <summary>メッセージのバッチで受信操作を完了します。</summary>
      <param name="lockTokens">ロック トークン。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.CompleteBatchAsync(System.Collections.Generic.IEnumerable{System.Guid})">
      <summary>メッセージのバッチに対する受信操作を非同期的に完了します。</summary>
      <returns>非同期操作。</returns>
      <param name="lockTokens">ロック トークン。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.DeadLetter(System.Guid)">
      <summary>配信されていないメッセージを配信不能キューに移動します。</summary>
      <param name="lockToken">ロックされたメッセージ インスタンスにバインドされたロック トークン。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.DeadLetter(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>配信されていないメッセージを配信不能キューに移動します。</summary>
      <param name="lockToken">ロックされたメッセージ インスタンスにバインドされたロック トークン。</param>
      <param name="propertiesToModify">変更するプロパティ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.DeadLetter(System.Guid,System.String,System.String)">
      <summary>配信されていないメッセージを配信不能キューに移動します。</summary>
      <param name="lockToken">ロックされたメッセージ インスタンスにバインドされたロック トークン。</param>
      <param name="deadLetterReason">メッセージを配信不能にする理由。</param>
      <param name="deadLetterErrorDescription">メッセージの配信不能に関するエラーの説明。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.DeadLetterAsync(System.Guid)">
      <summary>配信されていないメッセージを配信不能キューに非同期的に移動します。</summary>
      <returns>非同期操作。</returns>
      <param name="lockToken">ロックされたメッセージ インスタンスにバインドされたロック トークン。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.DeadLetterAsync(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>配信されていないメッセージを配信不能キューに非同期的に移動します。</summary>
      <returns>非同期操作。</returns>
      <param name="lockToken">ロックされたメッセージ インスタンスにバインドされたロック トークン。</param>
      <param name="propertiesToModify">変更するプロパティ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.DeadLetterAsync(System.Guid,System.String,System.String)">
      <summary>配信されていないメッセージを配信不能キューに非同期的に移動します。</summary>
      <returns>非同期操作。</returns>
      <param name="lockToken">ロックされたメッセージ インスタンスにバインドされたロック トークン。</param>
      <param name="deadLetterReason">メッセージを配信不能にする理由。</param>
      <param name="deadLetterErrorDescription">メッセージの配信不能に関するエラーの説明。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.Defer(System.Guid)">
      <summary>受信者がメッセージの処理延期を希望していることを示します。</summary>
      <param name="lockToken"><see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> のロック トークン。これは、メッセージがピーク ロック モードで受信された場合にのみ使用できます。ロック トークンは、メッセージを完了または破棄するために内部で使用されます。</param>
      <exception cref="P:Microsoft.ServiceBus.Common.Fx.Exception">受信コンテキストは null です。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.Defer(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>受信者がメッセージの処理延期を希望していることを示します。</summary>
      <param name="lockToken">ロック トークン。</param>
      <param name="propertiesToModify">変更するプロパティ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.DeferAsync(System.Guid)">
      <summary>メッセージの処理を非同期的に延期します。</summary>
      <returns><see cref="T:System.Threading.Tasks.Task" /> を返します。</returns>
      <param name="lockToken">ロック トークン。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.DeferAsync(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>メッセージの処理を非同期的に延期します。</summary>
      <returns>非同期操作。</returns>
      <param name="lockToken">ロック トークン。</param>
      <param name="propertiesToModify">変更するプロパティ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.EndAbandon(System.IAsyncResult)">
      <summary>非同期操作を終了して、メッセージを破棄し、ロックを放棄します。</summary>
      <param name="result">非同期操作を参照してメッセージを破棄し、ロックを放棄する <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.EndComplete(System.IAsyncResult)">
      <summary>メッセージの受信を完了するために、非同期操作を終了します。</summary>
      <param name="result">非同期操作を参照してメッセージの受信を完了する <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.EndCompleteBatch(System.IAsyncResult)">
      <summary>バッチ メッセージの受信を完了するために非同期操作を終了します。</summary>
      <param name="result">操作の結果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.EndDeadLetter(System.IAsyncResult)">
      <summary>メッセージを配信不能キューに移動する非同期操作を終了します。</summary>
      <param name="result">非同期操作を参照してメッセージを配信不能キューに移動する <see cref="T:System.IAsyncResult" />オブジェクト。</param>
      <exception cref="T:System.TimeoutException">操作がタイムアウトします。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.EndDefer(System.IAsyncResult)">
      <summary>メッセージの受信を延期する非同期操作を終了します。</summary>
      <param name="result">非同期操作を参照して、メッセージの受信を延期する <see cref="T:System.IAsyncResult" />オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.EndPeek(System.IAsyncResult)">
      <summary>メッセージをピークする非同期操作を終了します。</summary>
      <returns>ピークされたメッセージを表す <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />。</returns>
      <param name="result">非同期操作を参照してメッセージをピークする <see cref="T:System.IAsyncResult" /> オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.EndPeekBatch(System.IAsyncResult)">
      <summary>メッセージのバッチをピークする非同期操作を終了します。</summary>
      <returns>メッセージのバッチ。</returns>
      <param name="result">非同期操作を参照してメッセージをピークする <see cref="T:System.IAsyncResult" /> オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.EndReceive(System.IAsyncResult)">
      <summary>メッセージを受信する非同期操作を終了します。</summary>
      <returns>受信したメッセージを表す <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />。</returns>
      <param name="result">非同期操作を参照してメッセージを受信する <see cref="T:System.IAsyncResult" />。</param>
      <exception cref="T:System.TimeoutException">操作がタイムアウトします。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.EndReceiveBatch(System.IAsyncResult)">
      <summary>メッセージのバッチを受信する非同期操作を終了します。</summary>
      <returns>メッセージのバッチを表す <see cref="T:System.Collections.Generic.IEnumerable`1" /> オブジェクト。</returns>
      <param name="result">操作の結果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.GetLockToken(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>メッセージにバインドされたロック トークンを取得します。</summary>
      <returns>メッセージのロック トークン。</returns>
      <param name="message">ロック トークンを取得する元になる <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.GetLockTokens(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage})">
      <summary>指定されたメッセージのコレクションからロック トークンのコレクションを取得します。</summary>
      <returns>指定されたメッセージからのロック トークンのコレクション。</returns>
      <param name="messages">ロック トークンを取得するメッセージのコレクション。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageReceiver.LastPeekedSequenceNumber">
      <summary>最後にピークしたメッセージのシーケンス番号を取得または設定します。</summary>
      <returns>最後にピークしたメッセージのシーケンス番号。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageReceiver.Mode">
      <summary>メッセージ受信モードを取得します。</summary>
      <returns>メッセージ受信モード。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnAbandon(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan)">
      <summary>Abandon 操作を呼び出すときに実行しれます。</summary>
      <param name="trackingContext">この操作を追跡するトランザクションによって関連付けられたコンテキスト情報。</param>
      <param name="lockTokens">ロックされたメッセージ インスタンスにバインドされたロック トークンのコレクション。</param>
      <param name="propertiesToModify">変更するプロパティ。</param>
      <param name="timeout">操作がタイムアウトになるまで待機する時間。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnBeginAbandon(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>OnAbandon または BeginAbandon 操作を呼び出すと実行されます。</summary>
      <returns>非同期操作を参照してメッセージを破棄し、ロックを放棄する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="trackingContext">この操作を追跡するトランザクションによって関連付けられたコンテキスト情報。</param>
      <param name="lockTokens">ロックされたメッセージ インスタンスにバインドされたロック トークンのコレクション。</param>
      <param name="propertiesToModify">変更するプロパティ。</param>
      <param name="fromSync">同期の開始。</param>
      <param name="timeout">操作がタイムアウトになるまで待機する時間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnBeginComplete(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>OnComplete または BeginComplete 操作を呼び出すと実行されます。</summary>
      <returns>非同期操作を参照してメッセージの受信を完了する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="trackingContext">この操作を追跡するトランザクションによって関連付けられたコンテキスト情報。</param>
      <param name="lockTokens">ロックされたメッセージ インスタンスにバインドされたロック トークンのコレクション。</param>
      <param name="fromSync">同期の開始。</param>
      <param name="timeout">操作がタイムアウトになるまで待機する時間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnBeginDeadLetter(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.String,System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>OnDeadLetter または BeginDeadLetter 操作を呼び出すと実行されます。</summary>
      <returns>非同期操作を参照して、配信されていないメッセージを配信不能キューに移動する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="trackingContext">この操作を追跡するトランザクションによって関連付けられたコンテキスト情報。</param>
      <param name="lockTokens">ロックされたメッセージ インスタンスにバインドされたロック トークンのコレクション。</param>
      <param name="propertiesToModify">変更するプロパティ。</param>
      <param name="deadLetterReason">メッセージを配信不能にする理由。</param>
      <param name="deadLetterErrorDescription">メッセージを配信不能にするエラーの説明。</param>
      <param name="fromSync">同期の開始。</param>
      <param name="timeout">操作がタイムアウトになるまで待機する時間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnBeginDefer(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>OnDefer または BeginDefer 操作を呼び出すと実行されます。</summary>
      <returns>非同期操作を参照してメッセージの処理を中断する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="trackingContext">この操作を追跡するトランザクションによって関連付けられたコンテキスト情報。</param>
      <param name="lockTokens">ロックされたメッセージ インスタンスにバインドされたロック トークンのコレクション。</param>
      <param name="propertiesToModify">変更するプロパティ。</param>
      <param name="fromSync">同期の開始。</param>
      <param name="timeout">操作がタイムアウトになるまで待機する時間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnBeginPeek(Microsoft.ServiceBus.Tracing.TrackingContext,System.Int64,System.Int32,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>BeginPeek 操作を呼び出すと実行されます。</summary>
      <returns>操作の結果。</returns>
      <param name="trackingContext">この操作を追跡するトランザクションによって関連付けられたコンテキスト情報。</param>
      <param name="fromSequenceNumber">操作を開始する場所からのシーケンス番号。</param>
      <param name="messageCount">メッセージの数。</param>
      <param name="timeout">操作がタイムアウトになるまで待機する時間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnBeginRenewMessageLocks(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>ロック メッセージの OnBegin 操作を呼び出すと実行されます。</summary>
      <returns>非同期操作を参照してロック メッセージの処理を更新する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="trackingContext">この操作を追跡するトランザクションによって関連付けられたコンテキスト情報。</param>
      <param name="lockTokens">ロックされたメッセージ インスタンスにバインドされたロック トークンのコレクション。</param>
      <param name="fromSync">同期の開始。</param>
      <param name="timeout">操作がタイムアウトになるまで待機する時間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnBeginTryReceive(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Int64},System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>OnTryReceive または BeginTryReceive 操作を呼び出すと実行されます。</summary>
      <returns>非同期操作を参照してメッセージの受信を試みる <see cref="T:System.IAsyncResult" />。</returns>
      <param name="trackingContext">この操作を追跡するトランザクションによって関連付けられたコンテキスト情報。</param>
      <param name="sequenceNumbers">Service Bus によってメッセージに割り当てられた一意の番号のコレクション。</param>
      <param name="timeout">操作がタイムアウトになるまで待機する時間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnBeginTryReceive(Microsoft.ServiceBus.Tracing.TrackingContext,System.Int32,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>OnTryReceive または BeginTryReceive 操作を呼び出すと実行されます。</summary>
      <returns>非同期操作を参照してメッセージの受信を試みる <see cref="T:System.IAsyncResult" />。</returns>
      <param name="trackingContext">この操作を追跡するトランザクションによって関連付けられたコンテキスト情報。</param>
      <param name="messageCount">受信を試みるメッセージの数。</param>
      <param name="serverWaitTime">操作がタイムアウトになるまで待機する時間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnBeginTryReceive2(Microsoft.ServiceBus.Tracing.TrackingContext,System.Int32,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>OnTryReceive または BeginTryReceive 操作を呼び出すと実行されます。</summary>
      <returns>非同期操作を参照してメッセージの受信を試みる <see cref="T:System.IAsyncResult" />。</returns>
      <param name="trackingContext">この操作を追跡するトランザクションによって関連付けられたコンテキスト情報。</param>
      <param name="messageCount">受信を試みるメッセージの数。</param>
      <param name="serverWaitTime">操作がタイムアウトになるまで待機する時間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnComplete(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.TimeSpan)">
      <summary>Complete 操作を呼び出すと実行されます。</summary>
      <param name="trackingContext">この操作を追跡するトランザクションによって関連付けられたコンテキスト情報。</param>
      <param name="lockTokens">ロックされたメッセージ インスタンスにバインドされたロック トークンのコレクション。</param>
      <param name="timeout">操作がタイムアウトになるまで待機する時間。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnDeadLetter(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.String,System.TimeSpan)">
      <summary>DeadLetter 操作を呼び出すと実行されます。</summary>
      <param name="trackingContext">この操作を追跡するトランザクションによって関連付けられたコンテキスト情報。</param>
      <param name="lockTokens">ロックされたメッセージ インスタンスにバインドされたロック トークンのコレクション。</param>
      <param name="propertiesToModify">変更するプロパティ。</param>
      <param name="deadLetterReason">メッセージを配信不能にする理由。</param>
      <param name="deadLetterErrorDescription">メッセージの配信不能に関するエラーの説明。</param>
      <param name="timeout">操作がタイムアウトになるまで待機する時間。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnDefer(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan)">
      <summary>Defer 操作を呼び出すと実行されます。</summary>
      <param name="trackingContext">この操作を追跡するトランザクションによって関連付けられたコンテキスト情報。</param>
      <param name="lockTokens">ロックされたメッセージ インスタンスにバインドされたロック トークンのコレクション。</param>
      <param name="propertiesToModify">変更するプロパティ。</param>
      <param name="timeout">操作がタイムアウトになるまで待機する時間。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnEndAbandon(System.IAsyncResult)">
      <summary>放棄終了アクションを実行します。</summary>
      <param name="result">結果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnEndComplete(System.IAsyncResult)">
      <summary>完了終了アクションを実行します。</summary>
      <param name="result">結果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnEndDeadLetter(System.IAsyncResult)">
      <summary>配信不能キューへの移動終了アクションを実行します。</summary>
      <param name="result">非同期で完了した操作を参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnEndDefer(System.IAsyncResult)">
      <summary>延期終了アクションを実行します。</summary>
      <param name="result">結果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnEndPeek(System.IAsyncResult)">
      <summary>EndPeek 操作を実行します。</summary>
      <returns>メッセージのリスト。</returns>
      <param name="result">操作の結果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnEndRenewMessageLocks(System.IAsyncResult)">
      <summary>メッセージ ロックに対して EndRenew アクションを実行します。</summary>
      <returns>ロック メッセージの  <see cref="T:System.Collections.Generic.IEnumerable`1" />。</returns>
      <param name="result">操作の結果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnEndTryReceive(System.IAsyncResult,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage}@)">
      <summary>受信試行終了アクションを実行します。</summary>
      <returns>成功した場合は true、失敗した場合は false。</returns>
      <param name="result">結果。</param>
      <param name="messages">受信したメッセージ コレクション。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnEndTryReceive2(System.IAsyncResult,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage}@)">
      <summary>受信試行終了アクションを実行します。</summary>
      <returns>成功した場合は true、失敗した場合は false。</returns>
      <param name="result">結果。</param>
      <param name="messages">受信したメッセージ コレクション。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnMessage(System.Action{Microsoft.ServiceBus.Messaging.BrokeredMessage},Microsoft.ServiceBus.Messaging.OnMessageOptions)">
      <summary>イベント駆動型メッセージ ポンプでメッセージを処理します。</summary>
      <param name="callback">操作が完了したときに呼び出すメソッド。</param>
      <param name="options">メッセージ ポンプをインスタンス化する <see cref="T:Microsoft.ServiceBus.Messaging.OnMessageOptions" /> オプションを指定します。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnMessageAsync(System.Func{Microsoft.ServiceBus.Messaging.BrokeredMessage,System.Threading.Tasks.Task},Microsoft.ServiceBus.Messaging.OnMessageOptions)">
      <summary>イベント駆動型メッセージ ポンプでメッセージを非同期的に処理します。</summary>
      <param name="callback">操作が完了したときに呼び出すメソッド。</param>
      <param name="options">メッセージ ポンプをインスタンス化する <see cref="T:Microsoft.ServiceBus.Messaging.OnMessageOptions" /> オプションを指定します。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnPeek(Microsoft.ServiceBus.Tracing.TrackingContext,System.Int64,System.Int32,System.TimeSpan)">
      <summary>Peek 操作を呼び出すと実行されます。</summary>
      <returns>ピークされたメッセージ。</returns>
      <param name="trackingContext">追跡コンテキスト。</param>
      <param name="fromSequenceNumber">ピーク先のシーケンス番号。</param>
      <param name="messageCount">メッセージの数。</param>
      <param name="timeout">操作がタイムアウトになるまで待機する時間。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnRenewMessageLocks(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.TimeSpan)">
      <summary>ロック メッセージの Renew アクションを実行します。</summary>
      <returns>更新されたロック メッセージ。</returns>
      <param name="trackingContext">追跡コンテキスト。</param>
      <param name="lockTokens">ロック トークン。</param>
      <param name="timeout">操作がタイムアウトになるまで待機する時間。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnTryReceive(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Int64},System.TimeSpan,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage}@)">
      <summary>TryReceive 操作を呼び出すと実行されます。</summary>
      <returns>このメソッド操作が成功したことを示す場合は true、それ以外の場合は false です。</returns>
      <param name="trackingContext">この操作を追跡するトランザクションによって関連付けられたコンテキスト情報。</param>
      <param name="sequenceNumbers">Service Bus によってメッセージに割り当てられた一意の番号のコレクション。</param>
      <param name="timeout">操作がタイムアウトになるまで待機する時間。</param>
      <param name="messages">このメソッドが返される場合は、受信したメッセージのコレクションが含まれます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnTryReceive(Microsoft.ServiceBus.Tracing.TrackingContext,System.Int32,System.TimeSpan,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage}@)">
      <summary>TryReceive 操作を呼び出すと実行されます。</summary>
      <returns>このメソッド操作が成功したことを示す場合は true、それ以外の場合は false です。</returns>
      <param name="trackingContext">この操作を追跡するトランザクションによって関連付けられたコンテキスト情報。</param>
      <param name="messageCount">受信を試みるメッセージの数。</param>
      <param name="serverWaitTime">操作がタイムアウトになるまで待機する時間。</param>
      <param name="messages">このメソッドが返される場合は、受信したメッセージのコレクションが含まれます。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageReceiver.Path">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> ベース アドレスに対するキューまたはトピックのパスを取得します。</summary>
      <returns>キューまたはトピックのパスを表す文字列。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.Peek">
      <summary>受信者またはメッセージ ソースの状態を変更せずに、次のメッセージを読み取ります。</summary>
      <returns>読み取る次のメッセージを表す <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.Peek(System.Int64)">
      <summary>受信者またはメッセージ ソースの状態を変更せずに、次のメッセージを読み取ります。</summary>
      <returns>読み取る次のメッセージを表す <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />。</returns>
      <param name="fromSequenceNumber">メッセージを読み取る場所からのシーケンス番号。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.PeekAsync">
      <summary>受信者またはメッセージ ソースの状態を変更せずに、次のメッセージを非同期的に読み取ります。</summary>
      <returns>非同期操作。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.PeekAsync(System.Int64)">
      <summary>受信者またはメッセージ ソースの状態を変更せずに、次のメッセージを非同期的に読み取ります。</summary>
      <returns>非同期操作。</returns>
      <param name="fromSequenceNumber">メッセージを読み取る場所からのシーケンス番号。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.PeekBatch(System.Int32)">
      <summary>受信者またはメッセージ ソースの状態を変更せずに、メッセージの次のバッチを読み取ります。</summary>
      <returns>読み取られるメッセージのバッチ。</returns>
      <param name="messageCount">メッセージの数。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.PeekBatch(System.Int64,System.Int32)">
      <summary>受信者またはメッセージ ソースの状態を変更せずに、メッセージの次のバッチを読み取ります。</summary>
      <returns>読み取られるメッセージのバッチ。</returns>
      <param name="fromSequenceNumber">バッチ メッセージを読み取る場所からのシーケンス番号。</param>
      <param name="messageCount">メッセージの数。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.PeekBatchAsync(System.Int32)">
      <summary>受信者またはメッセージ ソースの状態を変更せずに、メッセージの次のバッチを非同期的に読み取ります。</summary>
      <returns>非同期操作。</returns>
      <param name="messageCount">メッセージの数。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.PeekBatchAsync(System.Int64,System.Int32)">
      <summary>受信者またはメッセージ ソースの状態を変更せずに、メッセージの次のバッチを非同期的に読み取ります。</summary>
      <returns>非同期操作。</returns>
      <param name="fromSequenceNumber">バッチ メッセージを読み取る場所からのシーケンス番号。</param>
      <param name="messageCount">メッセージの数。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageReceiver.PrefetchCount">
      <summary>メッセージ受信者が同時に要求できるメッセージの数を取得または設定します。</summary>
      <returns>メッセージ受信者が同時に要求できるメッセージの数。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.Receive">
      <summary>現在のキューまたはトピックから <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> を受信します。</summary>
      <returns>受信したメッセージを表す <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.Receive(System.Int64)">
      <summary>現在のキューまたはトピックからメッセージを受信します。</summary>
      <returns>受信したメッセージを表す <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />。</returns>
      <param name="sequenceNumber">受信するメッセージのシーケンス番号。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.Receive(System.TimeSpan)">
      <summary>現在のキューまたはトピックから <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> を受信します。</summary>
      <returns>受信したメッセージを表す <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />。</returns>
      <param name="serverWaitTime">操作がタイムアウトになるまでサーバーが待機する時間。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.ReceiveAsync">
      <summary>現在のキューまたはトピックからメッセージを非同期的に受信します。</summary>
      <returns>非同期操作。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.ReceiveAsync(System.Int64)">
      <summary>現在のキューまたはトピックからメッセージを非同期的に受信します。</summary>
      <returns>非同期操作。</returns>
      <param name="sequenceNumber">受信するメッセージのシーケンス番号。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.ReceiveAsync(System.TimeSpan)">
      <summary>現在のキューまたはトピックからメッセージを非同期的に受信します。</summary>
      <returns>非同期操作。</returns>
      <param name="serverWaitTime">操作がタイムアウトになるまでサーバーが待機する時間。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.ReceiveBatch(System.Collections.Generic.IEnumerable{System.Int64})">
      <summary>メッセージのバッチを受信します。</summary>
      <returns>メッセージのバッチ。</returns>
      <param name="sequenceNumbers">シーケンス番号。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.ReceiveBatch(System.Int32)">
      <summary>メッセージのバッチを受信します。</summary>
      <returns>メッセージのバッチ。</returns>
      <param name="messageCount">バッチ内で返されるメッセージの最大数。これは近似値なので、 メッセージの数が <paramref name="messageCount" /> を超えていても、返されるメッセージの数が少なくなる可能性があります。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.ReceiveBatch(System.Int32,System.TimeSpan)">
      <summary>メッセージのバッチを受信します。</summary>
      <returns>メッセージのバッチ。</returns>
      <param name="messageCount">受信するメッセージの最大数。</param>
      <param name="serverWaitTime">サーバーの待機時間。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.ReceiveBatchAsync(System.Collections.Generic.IEnumerable{System.Int64})">
      <summary>メッセージのバッチを非同期的に受信します。</summary>
      <returns>非同期操作。</returns>
      <param name="sequenceNumbers">シーケンス番号。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.ReceiveBatchAsync(System.Int32)">
      <summary>メッセージのバッチを非同期的に受信します。</summary>
      <returns>非同期操作。</returns>
      <param name="messageCount">バッチ内で返されるメッセージの最大数。これは近似値なので、 メッセージの数が <paramref name="messageCount" /> を超えていても、返されるメッセージの数が少なくなる可能性があります。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.ReceiveBatchAsync(System.Int32,System.TimeSpan)">
      <summary>メッセージのバッチを非同期的に受信します。</summary>
      <returns>非同期操作。</returns>
      <param name="messageCount">受信するメッセージの最大数。</param>
      <param name="serverWaitTime">サーバーの待機時間。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessageSender">
      <summary>この <see cref="T:Microsoft.ServiceBus.Messaging.MessageSender" /> クラスは、Service Bus からのメッセージの送信に使用されます。<see cref="T:Microsoft.ServiceBus.Messaging.QueueClient" /> クラスを使用すると、<see cref="T:Microsoft.ServiceBus.Messaging.MessageSender" /> オブジェクトを作成しなくてもメッセージを送受信できますが、トピックかキューかに関わらず <see cref="T:Microsoft.ServiceBus.Messaging.MessageSender" /> と <see cref="T:Microsoft.ServiceBus.Messaging.MessageReceiver" /> を使用してエンティティで送信者と受信者を作成することもできます。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageSender.BatchFlushInterval">
      <summary>バッチ フラッシュ間隔を取得します。</summary>
      <returns>バッチ フラッシュ間隔。既定値は 20 ミリ秒です。</returns>
      <exception cref="T:System.OperationCanceledException"><see cref="T:Microsoft.ServiceBus.Messaging.MessageSender" />を閉じいる最中る、閉じた状態、または障害が発生した状態のときにスローされます。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageSender.BatchingEnabled">
      <summary>バッチ処理が有効になっているかどうかを示す値を取得します。</summary>
      <returns>バッチ処理が有効な場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.BeginSend(Microsoft.ServiceBus.Messaging.BrokeredMessage,System.AsyncCallback,System.Object)">
      <summary>ブローカー メッセージを送信する非同期要求を開始します。</summary>
      <returns>非同期操作を参照してキュー操作を作成する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="message">送信するブローカー メッセージ。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">受信操作に関する情報を含むユーザー定義オブジェクト。このオブジェクトは、操作の完了時に <see cref="M:Microsoft.ServiceBus.Messaging.MessageSender.EndSend(System.IAsyncResult)" /> デリゲートに渡されます。</param>
      <exception cref="T:System.TimeoutException">操作がタイムアウトしたときにスローされます。タイムアウト期間は、<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" /> を介して初期化されます。  タイムアウト値が比較的小さい場合は、この例外を回避するために <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> の値を増やす必要があります。</exception>
      <exception cref="T:System.ArgumentException">ブローカー メッセージが null の場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.BeginSendBatch(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage},System.AsyncCallback,System.Object)">
      <summary>バッチでブローカー メッセージを送信する非同期要求を開始します。</summary>
      <returns>操作の同期結果。</returns>
      <param name="messages">送信するブローカー メッセージ。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">受信操作に関する情報を含むユーザー定義オブジェクト。このオブジェクトは、操作の完了時に <see cref="M:Microsoft.ServiceBus.Messaging.MessageSender.EndSend(System.IAsyncResult)" /> デリゲートに渡されます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.EndSend(System.IAsyncResult)">
      <summary>メッセージを送信する非同期要求を終了します。</summary>
      <param name="result"><see cref="M:Microsoft.ServiceBus.Messaging.MessageSender.Send(Microsoft.ServiceBus.Messaging.BrokeredMessage)" />メソッドを参照する  <see cref="T:System.IAsyncResult" />。 </param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.EndSendBatch(System.IAsyncResult)">
      <summary>バッチでメッセージを送信する非同期要求を終了します。</summary>
      <param name="result">操作の結果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.OnBeginCancelScheduledMessage(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Int64},System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>スケジュールされたメッセージの取り消しを開始するイベントを発生させます。</summary>
      <returns>操作の非同期結果。</returns>
      <param name="trackingContext">トラッキングのコンテキスト。</param>
      <param name="sequenceNumbers">シーケンス番号。</param>
      <param name="timeout">操作のクライアント側のタイムアウト値。期間がこのタイムアウトを超える場合は、操作を中止またはキャンセルする必要があります。</param>
      <param name="callback">操作が完了したときに呼び出されるユーザー コールバック。</param>
      <param name="state">操作が完了したときにコールバックに渡される状態。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.OnBeginScheduleMessage(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage},System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>メッセージをスケジュールするときにイベントを発生させます。</summary>
      <returns>操作の非同期結果。</returns>
      <param name="trackingContext">トラッキングのコンテキスト。</param>
      <param name="messages">スケジュールするメッセージ。</param>
      <param name="timeout">操作のクライアント側のタイムアウト値。期間がこのタイムアウトを超える場合は、操作を中止またはキャンセルする必要があります。</param>
      <param name="callback">操作が完了したときに呼び出されるユーザー コールバック。</param>
      <param name="state">操作が完了したときにコールバックに渡される状態。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.OnBeginSend(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage},System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>メッセージの送信時に実行する必要がある操作を具体的に定義できます。このメソッドは、ユーザーが具体的なクラスに実装することはできません。</summary>
      <returns>操作向けの <see cref="T:System.IAsyncResult" />。</returns>
      <param name="trackingContext">トラッキングのコンテキスト。</param>
      <param name="messages">送信される <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> オブジェクトのリスト。</param>
      <param name="fromSync">同期の開始。</param>
      <param name="timeout">操作のクライアント側のタイムアウト値。期間がこのタイムアウトを超える場合は、操作を中止またはキャンセルする必要があります。</param>
      <param name="callback">操作が完了したときに呼び出されるユーザー コールバック。</param>
      <param name="state">操作が完了したときにコールバックに渡される状態。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.OnEndCancelScheduledMessage(System.IAsyncResult)">
      <summary>スケジュールされたメッセージの取り消しを終了するときにイベントを発生させます。</summary>
      <param name="result">操作の結果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.OnEndScheduleMessage(System.IAsyncResult)">
      <summary>メッセージ スケジュールを終了するときにイベントを発生させます。</summary>
      <returns>操作の結果。</returns>
      <param name="result">操作の結果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.OnEndSend(System.IAsyncResult)">
      <summary>送信終了アクションを実行します。このメソッドは、ユーザーが具体的なクラスに実装することはできません。</summary>
      <param name="result"><see cref="M:Microsoft.ServiceBus.Messaging.MessageSender.OnBeginSend(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage},System.TimeSpan,System.AsyncCallback,System.Object)" />メソッドへの呼び出しから作成された <see cref="T:System.IAsyncResult" /> オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.OnSend(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage},System.TimeSpan)">
      <summary>具体的な実装は、同期的な方法でメッセージを送信するときに実行する必要がある操作をオーバーライドできます (必要な場合)。</summary>
      <param name="trackingContext">トラッキングのコンテキスト。</param>
      <param name="messages">送信される <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> オブジェクトのリスト。</param>
      <param name="timeout">操作のクライアント側のタイムアウト値。期間がこのタイムアウトを超える場合は、操作を中止またはキャンセルする必要があります。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageSender.Path">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> ベース アドレスに対するキューまたはトピックのパスを取得します。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />ベース アドレスに対するキューまたはトピックのパス。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.Send(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>指定されたブローカー メッセージを送信します。</summary>
      <param name="message">送信するブローカー メッセージ。</param>
      <exception cref="T:System.TimeoutException">操作がタイムアウトしたときにスローされます。タイムアウト期間は、<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" /> を介して初期化されます。タイムアウト値が比較的小さい場合は、この例外を回避するために <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> 値を増やす必要があります。</exception>
      <exception cref="T:System.ArgumentException"><paramref name="message" /> が null の場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.SendAsync(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>指定されたブローカー メッセージを非同期的に送信します。</summary>
      <returns>操作の非同期結果。</returns>
      <param name="message">送信するブローカー メッセージ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.SendBatch(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage})">
      <summary>ブローカー メッセージのセットを送信します (バッチ処理用)。</summary>
      <param name="messages">送信するブローカー メッセージのコレクション。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.SendBatchAsync(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage})">
      <summary>一連のブローカー メッセージを非同期的に送信します (バッチ処理用)。</summary>
      <returns>操作の非同期結果。</returns>
      <param name="messages">送信するブローカー メッセージのコレクション。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessageSession">
      <summary>単一のトランザクションで処理するための関連メッセージのグループ化を可能にするメッセージ セッションを表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.BeginGetState(System.AsyncCallback,System.Object)">
      <summary>メッセージ セッションの状態を設定する非同期操作を開始します。</summary>
      <returns>非同期操作を参照して、メッセージ セッションの状態を取得する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.BeginRenewLock(System.AsyncCallback,System.Object)">
      <summary>メッセージ セッションのロックの更新を開始します。</summary>
      <returns>非同期操作を参照して操作の状態を取得する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.BeginSetState(System.IO.Stream,System.AsyncCallback,System.Object)">
      <summary>メッセージ セッションの状態を設定する非同期操作を開始します。</summary>
      <returns>非同期操作を参照して、メッセージ セッションの状態を取得する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="stream">get 操作がタイムアウトになるまで待機する時間間隔。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.EndGetState(System.IAsyncResult)">
      <summary>メッセージ セッションの状態を取得する非同期操作を終了します。</summary>
      <returns>状態情報が永続化されるストリーム。</returns>
      <param name="result">非同期操作を参照して、メッセージ セッションの状態を取得する <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.EndRenewLock(System.IAsyncResult)">
      <summary>メッセージ セッションのロックの更新を開始します。</summary>
      <param name="result">操作の結果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.EndSetState(System.IAsyncResult)">
      <summary>メッセージ セッションの状態を設定する非同期操作を終了します。</summary>
      <param name="result">非同期操作を参照して、メッセージ・セッションの状態を設定する <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.GetState">
      <summary>メッセージ セッションの状態を取得します。</summary>
      <returns>状態情報が永続化されるストリーム。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.GetStateAsync">
      <summary>メッセージ セッションの状態を非同期的に取得します。</summary>
      <returns>状態情報が永続化されるストリーム。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageSession.LastPeekedSequenceNumber">
      <summary>セッション内の最後にピークされたシーケンス番号を取得または設定します。</summary>
      <returns>セッション内の最後にピークされたシーケンス番号。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageSession.LockedUntilUtc">
      <summary>メッセージ セッションのロックが解除される日時を取得または設定します。</summary>
      <returns>メッセージ セッションをロックする日時。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnAbandon(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan)">
      <summary>Abandon 操作を呼び出すと実行されれます。</summary>
      <param name="trackingContext">この操作を追跡するトランザクションによって関連付けられたコンテキスト情報。</param>
      <param name="lockTokens">ロックされたメッセージ インスタンスにバインドされたロック トークンのコレクション。</param>
      <param name="propertiesToModify">変更するプロパティ。</param>
      <param name="timeout">操作がタイムアウトになるまで待機する時間。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnAbort">
      <summary>メッセージ セッションを中止します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginAbandon(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>OnAbandon または BeginAbandon 操作を呼び出すと実行されます。</summary>
      <returns>非同期操作を参照して、操作の結果を取得する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="trackingContext">この操作を追跡するトランザクションによって関連付けられたコンテキスト情報。</param>
      <param name="lockTokens">ロックされたメッセージ インスタンスにバインドされたロック トークンのコレクション。</param>
      <param name="propertiesToModify">変更するプロパティ。</param>
      <param name="fromSync">同期の開始。</param>
      <param name="timeout">操作がタイムアウトになるまで待機する時間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>メッセージ セッションの通信オブジェクトを閉じる非同期操作を開始します。</summary>
      <returns>非同期操作を参照して、メッセージ セッションの通信オブジェクトを終了する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="timeout">操作がタイムアウトする前に待機する時間間隔。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginComplete(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>OnComplete または BeginComplete 操作を呼び出すと実行されます。</summary>
      <returns>非同期操作を参照して、メッセージ セッションの通信オブジェクトを終了する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="trackingContext">この操作を追跡するトランザクションによって関連付けられたコンテキスト情報。</param>
      <param name="lockTokens">ロックされたメッセージ インスタンスにバインドされたロック トークンのコレクション。</param>
      <param name="fromSync">同期の開始。</param>
      <param name="timeout">操作がタイムアウトする前に待機する時間間隔。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginDeadLetter(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.String,System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>OnDeadLetter または BeginDeadLetter 操作を呼び出すと実行されます。</summary>
      <returns>非同期操作を参照して操作の状態を取得する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="trackingContext">この操作を追跡するトランザクションによって関連付けられたコンテキスト情報。</param>
      <param name="lockTokens">ロックされたメッセージ インスタンスにバインドされたロック トークンのコレクション。</param>
      <param name="propertiesToModify">変更するプロパティ。</param>
      <param name="deadLetterReason">メッセージを配信不能にする理由。</param>
      <param name="deadLetterErrorDescription">メッセージを配信不能にするエラーの説明。</param>
      <param name="fromSync">同期の開始。</param>
      <param name="timeout">操作がタイムアウトになるまで待機する時間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginDefer(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>OnDefer または BeginDefer 操作を呼び出すと実行されます。</summary>
      <returns>非同期操作を参照してメッセージの処理を中断する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="trackingContext">この操作を追跡するトランザクションによって関連付けられたコンテキスト情報。</param>
      <param name="lockTokens">ロックされたメッセージ インスタンスにバインドされたロック トークンのコレクション。</param>
      <param name="propertiesToModify">変更するプロパティ。</param>
      <param name="fromSync">同期の開始。</param>
      <param name="timeout">操作がタイムアウトになるまで待機する時間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginGetState(Microsoft.ServiceBus.Tracing.TrackingContext,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>OnGetState または BeginGetState 操作を呼び出すと実行されます。</summary>
      <returns>非同期操作を参照して、メッセージ セッションの状態を取得する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="trackingContext">この操作を追跡するトランザクションによって関連付けられたコンテキスト情報。</param>
      <param name="timeout">操作がタイムアウトする前に待機する時間間隔。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>メッセージ受信者の OnOpen 操作を呼び出すと実行されます。</summary>
      <returns>非同期操作を参照して、メッセージ セッションの通信オブジェクトを開く <see cref="T:System.IAsyncResult" />。</returns>
      <param name="timeout">操作がタイムアウトする前に待機する時間間隔。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginPeek(Microsoft.ServiceBus.Tracing.TrackingContext,System.Int64,System.Int32,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>OnPeek または BeginPeek 操作を呼び出すと実行されます。</summary>
      <returns>非同期操作を参照して、メッセージ セッションの通信をピークする <see cref="T:System.IAsyncResult" />。</returns>
      <param name="trackingContext">この操作を追跡するトランザクションによって関連付けられたコンテキスト情報。</param>
      <param name="fromSequenceNumber">セッションからピークするシーケンス番号。</param>
      <param name="messageCount">操作内のメッセージの数。</param>
      <param name="timeout">操作がタイムアウトする前に待機する時間間隔。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginRenewLock(Microsoft.ServiceBus.Tracing.TrackingContext,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>RenewLock または BeginRenewLock 操作を呼び出すと実行されます。</summary>
      <returns>非同期操作を参照して操作の状態を取得する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="trackingContext">この操作を追跡するトランザクションによって関連付けられたコンテキスト情報。</param>
      <param name="timeout">操作がタイムアウトする前に待機する時間間隔。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginRenewMessageLocks(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>ロック メッセージの OnBegin 操作を呼び出すと実行されます。</summary>
      <returns>非同期操作を参照してロック メッセージの処理を更新する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="trackingContext">この操作を追跡するトランザクションによって関連付けられたコンテキスト情報。</param>
      <param name="lockTokens">ロックされたメッセージ インスタンスにバインドされたロック トークンのコレクション。</param>
      <param name="fromSync">同期の開始。</param>
      <param name="timeout">操作がタイムアウトになるまで待機する時間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginSetState(Microsoft.ServiceBus.Tracing.TrackingContext,System.IO.Stream,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>OnSetState または BeginSetState 操作を呼び出すと実行されます。</summary>
      <returns>非同期操作を参照して、メッセージ・セッションの状態を設定する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="trackingContext">この操作を追跡するトランザクションによって関連付けられたコンテキスト情報。</param>
      <param name="stream">状態情報が永続化されるストリーム。</param>
      <param name="timeout">操作がタイムアウトする前に待機する時間間隔。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginTryReceive(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Int64},System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>メッセージ受信者の OnTryReceive または BeginTryReceive 操作を呼び出すと実行されます。</summary>
      <returns>非同期操作を参照してメッセージの受信を試みる <see cref="T:System.IAsyncResult" />。</returns>
      <param name="trackingContext">この操作を追跡するトランザクションによって関連付けられたコンテキスト情報。</param>
      <param name="receipts">Service Bus によってメッセージに割り当てられた一意の番号のコレクション。</param>
      <param name="timeout">操作がタイムアウトする前に待機する時間間隔。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginTryReceive(Microsoft.ServiceBus.Tracing.TrackingContext,System.Int32,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>メッセージ受信者の OnTryReceive または BeginTryReceive 操作を呼び出すと実行されます。</summary>
      <returns>非同期操作を参照してメッセージの受信を試みる <see cref="T:System.IAsyncResult" />。</returns>
      <param name="trackingContext">この操作を追跡するトランザクションによって関連付けられたコンテキスト情報。</param>
      <param name="messageCount">受信を試みるメッセージの数。</param>
      <param name="serverWaitTime">操作がタイムアウトする前に待機する時間間隔。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginTryReceive2(Microsoft.ServiceBus.Tracing.TrackingContext,System.Int32,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>メッセージ受信者の OnTryReceive または BeginTryReceive 操作を呼び出すと実行されます。</summary>
      <returns>非同期操作を参照してメッセージの受信を試みる <see cref="T:System.IAsyncResult" />。</returns>
      <param name="trackingContext">この操作を追跡するトランザクションによって関連付けられたコンテキスト情報。</param>
      <param name="messageCount">受信を試みるメッセージの数。</param>
      <param name="serverWaitTime">操作がタイムアウトする前に待機する時間間隔。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnComplete(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.TimeSpan)">
      <summary>メッセージ受信操作を完了します。</summary>
      <param name="trackingContext">この操作を追跡するトランザクションによって関連付けられたコンテキスト情報。</param>
      <param name="lockTokens">ロックされたメッセージ インスタンスにバインドされたロック トークンのコレクション。</param>
      <param name="timeout">操作がタイムアウトする前に待機する時間間隔。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnDeadLetter(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.String,System.TimeSpan)">
      <summary>DeadLetter 操作を呼び出すと実行されます。</summary>
      <param name="trackingContext">この操作を追跡するトランザクションによって関連付けられたコンテキスト情報。</param>
      <param name="lockTokens">ロックされたメッセージ インスタンスにバインドされたロック トークンのコレクション。</param>
      <param name="propertiesToModify">変更するプロパティ。</param>
      <param name="deadLetterReason">メッセージを配信不能にする理由。</param>
      <param name="deadLetterErrorDescription">メッセージの配信不能に関するエラーの説明。</param>
      <param name="timeout">操作がタイムアウトになるまで待機する時間。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnDefer(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan)">
      <summary>Defer 操作を呼び出すと実行されます。</summary>
      <param name="trackingContext">この操作を追跡するトランザクションによって関連付けられたコンテキスト情報。</param>
      <param name="lockTokens">ロックされたメッセージ インスタンスにバインドされたロック トークンのコレクション。</param>
      <param name="propertiesToModify">変更するプロパティ。</param>
      <param name="timeout">操作がタイムアウトになるまで待機する時間。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndAbandon(System.IAsyncResult)">
      <summary>非同期操作を終了して、メッセージを破棄し、ロックを放棄します。</summary>
      <param name="result">非同期操作を参照してメッセージを破棄し、ロックを放棄する <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndClose(System.IAsyncResult)">
      <summary>非同期操作を終了して、メッセージ セッションの通信オブジェクトを閉じます。</summary>
      <param name="result">非同期操作を参照して、メッセージ セッションの通信オブジェクトを終了する <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndComplete(System.IAsyncResult)">
      <summary>メッセージ受信者の完了終了操作を実行します。</summary>
      <param name="result">非同期操作を参照してメッセージの受信を完了する <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndDeadLetter(System.IAsyncResult)">
      <summary>メッセージ受信者の配信不能終了操作を実行します。</summary>
      <param name="result">非同期操作を参照して、配信されていないメッセージを配信不能キューに移動する <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndDefer(System.IAsyncResult)">
      <summary>メッセージ受信者の延期終了操作を実行します。</summary>
      <param name="result">非同期操作を参照してメッセージの処理を中断する <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndGetState(System.IAsyncResult)">
      <summary>OnGetState または EndGetState 操作を呼び出すと実行されます。</summary>
      <returns>状態情報が永続化されるストリーム。</returns>
      <param name="result">非同期操作を参照して、メッセージ セッションの状態を取得する <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndOpen(System.IAsyncResult)">
      <summary>非同期操作を終了して、メッセージ セッションの通信オブジェクトを開きます。</summary>
      <param name="result">非同期操作を参照して、メッセージ セッションの通信オブジェクトを開く <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndPeek(System.IAsyncResult)">
      <summary>EndPeek 操作を呼び出すと実行されます。</summary>
      <returns>セッションからのメッセージのリスト。</returns>
      <param name="result">非同期操作を参照して、メッセージ セッションの通信をピークする <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndRenewLock(System.IAsyncResult)">
      <summary>メッセージ受信者の EndRenewLock 操作を実行します。</summary>
      <returns>ロックの更新が終了する日時。</returns>
      <param name="result">非同期操作を参照して、メッセージ セッションの状態を取得する <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndRenewMessageLocks(System.IAsyncResult)">
      <summary>メッセージ ロックに対して EndRenew アクションを実行します。</summary>
      <returns>ロックされたメッセージの <see cref="T:System.Collections.Generic.IEnumerable`1" />。</returns>
      <param name="result">操作の結果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndSetState(System.IAsyncResult)">
      <summary>非同期操作を終了して、メッセージ セッションの状態を設定します。</summary>
      <param name="result">非同期操作を参照して、メッセージ・セッションの状態を設定する <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndTryReceive(System.IAsyncResult,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage}@)">
      <summary>メッセージ受信者の受信試行終了操作を実行します。</summary>
      <returns>成功した場合は true、失敗した場合は false。</returns>
      <param name="result">非同期操作を参照してメッセージの受信を試みる <see cref="T:System.IAsyncResult" />。</param>
      <param name="messages">このメソッドが返された場合は、受信したメッセージ コレクションが含まれます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndTryReceive2(System.IAsyncResult,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage}@)">
      <summary>メッセージ受信者の受信試行終了操作を実行します。</summary>
      <returns>成功した場合は true、失敗した場合は false。</returns>
      <param name="result">非同期操作を参照してメッセージの受信を試みる <see cref="T:System.IAsyncResult" />。</param>
      <param name="messages">このメソッドが返された場合は、受信したメッセージ コレクションが含まれます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnGetState(Microsoft.ServiceBus.Tracing.TrackingContext,System.TimeSpan)">
      <summary>GetState 操作を呼び出すと実行されます。</summary>
      <returns>状態情報が永続化されるストリーム。</returns>
      <param name="trackingContext">この操作を追跡するトランザクションによって関連付けられたコンテキスト情報。</param>
      <param name="timeout">get 操作がタイムアウトになるまで待機する時間間隔。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnRenewLock(Microsoft.ServiceBus.Tracing.TrackingContext,System.TimeSpan)">
      <summary>メッセージ ロックの RenewLock アクションを実行します。</summary>
      <returns>操作がタイムアウトになるまで待機する時間。</returns>
      <param name="trackingContext">この操作を追跡するトランザクションによって関連付けられたコンテキスト情報。</param>
      <param name="timeout">操作がタイムアウトする前に待機する時間間隔。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnSetState(Microsoft.ServiceBus.Tracing.TrackingContext,System.IO.Stream,System.TimeSpan)">
      <summary>SetState 操作を呼び出すと実行されます。</summary>
      <param name="trackingContext">この操作を追跡するトランザクションによって関連付けられたコンテキスト情報。</param>
      <param name="stream">状態情報が永続化されるストリーム。</param>
      <param name="timeout">set 操作がタイムアウトになるまで待機する時間間隔。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnTryReceive(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Int64},System.TimeSpan,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage}@)">
      <summary>メッセージ受信操作を試みます。</summary>
      <returns>受信操作が成功した場合は true、それ以外の場合は false です。</returns>
      <param name="trackingContext">この操作を追跡するトランザクションによって関連付けられたコンテキスト情報。</param>
      <param name="receipts">Service Bus によってメッセージに割り当てられた一意の番号のコレクション。</param>
      <param name="timeout">操作がタイムアウトする前に待機する時間間隔。</param>
      <param name="messages"><see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> オブジェクトのコレクション。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnTryReceive(Microsoft.ServiceBus.Tracing.TrackingContext,System.Int32,System.TimeSpan,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage}@)">
      <summary>メッセージ受信操作を試みます。</summary>
      <returns>受信操作が成功した場合は true、それ以外の場合は false です。</returns>
      <param name="trackingContext">この操作を追跡するトランザクションによって関連付けられたコンテキスト情報。</param>
      <param name="messageCount">受信を試みるメッセージの数。</param>
      <param name="serverWaitTime">操作がタイムアウトする前に待機する時間間隔。</param>
      <param name="messages"><see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> オブジェクトのコレクション。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageSession.Path">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> ベース アドレスに対するキューまたはトピックのパスを取得します。</summary>
      <returns>キューまたはトピックのパスを表す文字列。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageSession.PrefetchCount">
      <summary>メッセージ受信者が同時に要求できるメッセージの数を取得または設定します。</summary>
      <returns>メッセージ受信者が同時に要求できるメッセージの数。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.RenewLock">
      <summary>ホストがメッセージのロックを更新する期間を指定します。</summary>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException"><see cref="P:Microsoft.ServiceBus.Messaging.MessagingException.IsTransient" /> が true の場合は、すぐに操作を再試行できます。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingCommunicationException">操作をすぐに再試行できます。</exception>
      <exception cref="T:System.TimeoutException">操作をすぐに再試行できます。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.SessionLockLostException">メッセージが <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" /> からの場合、<see cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException" /> の代わりにされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.RenewLockAsync">
      <summary>ホストがメッセージのロックを更新する期間を指定します。</summary>
      <returns>ロックされているホスト。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageSession.SessionId">
      <summary>メッセージ セッション識別子を取得または設定します。</summary>
      <returns>メッセージ セッション識別子。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.SetState(System.IO.Stream)">
      <summary>メッセージ セッションの状態を設定します。</summary>
      <param name="stream">状態情報が永続化されるストリーム。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.SetStateAsync(System.IO.Stream)">
      <summary>メッセージ セッションの状態を非同期的に設定します。</summary>
      <returns>メッセージ セッションの状態。</returns>
      <param name="stream">状態情報が永続化されるストリーム。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler">
      <summary>メッセージ セッションに関連付けられている非同期ハンドラーを表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.Microsoft#ServiceBus#Messaging#IMessageSessionAsyncHandler#OnCloseSessionAsync(Microsoft.ServiceBus.Messaging.MessageSession)">
      <summary>セッションが非同期的に閉じられたときに生じるイベントを発生させます。</summary>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
      <param name="session">閉じたセッション。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.Microsoft#ServiceBus#Messaging#IMessageSessionAsyncHandler#OnMessageAsync(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>セッションにブローカー メッセージがあるときに発生するイベントを表します。</summary>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
      <param name="session">メッセージ セッション。</param>
      <param name="message">ブローカー メッセージ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.Microsoft#ServiceBus#Messaging#IMessageSessionAsyncHandler#OnSessionLostAsync(System.Exception)">
      <summary>セッションが失われたときに生じるイベントを発生させます。</summary>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
      <param name="exception">例外が発生し、セッションが失われました。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.OnCloseSessionAsync(Microsoft.ServiceBus.Messaging.MessageSession)">
      <summary>セッションが非同期的に閉じられたときに生じるイベントを発生させます。</summary>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
      <param name="session">閉じたセッション。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.OnMessageAsync(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>セッションにブローカー メッセージがあるときに発生するイベントを表します。</summary>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
      <param name="session">メッセージ セッション。</param>
      <param name="message">ブローカー メッセージ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.OnSessionLostAsync(System.Exception)">
      <summary>セッションが失われたときに生じるイベントを発生させます。</summary>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
      <param name="exception">例外が発生し、セッションが失われました。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessageSessionHandler">
      <summary>メッセージ セッションに関連付けられたハンドラーを表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionHandler.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.MessageSessionHandler" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionHandler.Microsoft#ServiceBus#Messaging#IMessageSessionHandler#OnCloseSession(Microsoft.ServiceBus.Messaging.MessageSession)">
      <summary>セッションが閉じられたときに生じるイベントを発生させます。</summary>
      <param name="session">閉じたセッション。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionHandler.Microsoft#ServiceBus#Messaging#IMessageSessionHandler#OnMessage(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>セッションにブローカー メッセージがあるときに発生するイベントを表します。</summary>
      <param name="session">メッセージ セッション。</param>
      <param name="message">ブローカー メッセージ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionHandler.Microsoft#ServiceBus#Messaging#IMessageSessionHandler#OnSessionLost(System.Exception)">
      <summary>セッションが失われたときに生じるイベントを発生させます。</summary>
      <param name="exception">例外が発生し、セッションが失われました。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionHandler.OnCloseSession(Microsoft.ServiceBus.Messaging.MessageSession)">
      <summary>セッションが閉じられたときに生じるイベントを発生させます。</summary>
      <param name="session">閉じたセッション。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionHandler.OnMessage(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>セッションにブローカー メッセージがあるときに発生するイベントを表します。</summary>
      <param name="session">メッセージ セッション。</param>
      <param name="message">ブローカー メッセージ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionHandler.OnSessionLost(System.Exception)">
      <summary>セッションが失われたときに生じるイベントを発生させます。</summary>
      <param name="exception">例外が発生し、セッションが失われました。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessageSizeExceededException">
      <summary>メッセージのサイズが最大許容サイズを超えたときに発生した例外を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSizeExceededException.#ctor(System.String)">
      <summary>指定された例外メッセージで <see cref="T:Microsoft.ServiceBus.Messaging.MessageSizeExceededException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外に関連付けられているメッセージ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSizeExceededException.#ctor(System.String,System.Exception)">
      <summary>指定された例外メッセージと例外を引き起こしたエラーを使用して、<see cref="T:Microsoft.ServiceBus.Messaging.MessageSizeExceededException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外に関連付けられているメッセージ。</param>
      <param name="innerException">現在の例外を引き起こしたエラー。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessageState">
      <summary>メッセージ状態を列挙します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.MessageState.Active">
      <summary>アクティブなメッセージの状態を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.MessageState.Deferred">
      <summary>遅延メッセージの状態を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.MessageState.Scheduled">
      <summary>スケジュールされたメッセージの状態を指定します。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessageStoreLockLostException">
      <summary>メッセージ ストア ロック喪失エラーを通知するためにスローされる例外。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageStoreLockLostException.#ctor(System.String)">
      <summary>指定されたエラー メッセージで <see cref="T:Microsoft.ServiceBus.Messaging.MessageStoreLockLostException" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外の理由を説明するエラー メッセージ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageStoreLockLostException.#ctor(System.String,System.Exception)">
      <summary>指定されたエラー メッセージと、この例外の原因である内部例外への参照で、<see cref="T:Microsoft.ServiceBus.Messaging.MessageStoreLockLostException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外の理由を説明するエラー メッセージ。</param>
      <param name="innerException">現在の例外の原因である例外。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessagingCommunicationException">
      <summary>メッセージング通信エラーを通知するためにスローされる例外。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingCommunicationException.#ctor(System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.MessagingCommunicationException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="communicationPath">通信パス。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingCommunicationException.#ctor(System.String,System.Exception)">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.MessagingCommunicationException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外の理由を説明するエラー メッセージ。</param>
      <param name="innerException">現在の例外の原因である内部例外。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">
      <summary>すでに存在するメッセージング エンティティを通知するためにスローされる例外。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException.#ctor(System.String)">
      <summary>エンティティの名前で <see cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="entityName">エンティティの名前。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException.#ctor(System.String,System.Exception)">
      <summary>指定されたエラー メッセージと、この例外の原因である内部例外への参照で、<see cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外の理由を説明するエラー メッセージ。</param>
      <param name="innerException">現在の例外の原因である例外。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>例外に関するデータでシリアル化情報を設定します。</summary>
      <param name="info">スローされる例外に関するシリアル化されたオブジェクト データ。</param>
      <param name="context">ソースまたは宛先に関するコンテキスト情報。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessagingEntityDisabledException">
      <summary>メッセージング エンティティ無効エラーを通知する例外。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingEntityDisabledException.#ctor(System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityDisabledException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="entityName">例外を担当するエンティティの名前。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingEntityDisabledException.#ctor(System.String,System.Exception)">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityDisabledException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外に関するエラー メッセージ。</param>
      <param name="innerException">現在の例外の原因である内部例外。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">
      <summary>メッセージング エンティティの「見つかりません」エラーを通知するためにスローされる例外。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException.#ctor(System.String)">
      <summary>エンティティ名で <see cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="entityName">エンティティの名前。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException.#ctor(System.String,System.Exception)">
      <summary>指定されたエラー メッセージと、この例外の原因である内部例外への参照で、<see cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外の理由を説明するエラー メッセージ。</param>
      <param name="innerException">現在の例外の原因である例外。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException.ToString">
      <summary>現在の例外の文字列表現を返します。</summary>
      <returns>現在の例外の文字列表現。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessagingException">
      <summary>メッセージング エラーを通知するためにスローされる例外を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>シリアル化情報とストリーミング コンテキストで <see cref="T:Microsoft.ServiceBus.Messaging.MessagingException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info">シリアル化情報。</param>
      <param name="context">ストリーミング コンテキスト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingException.#ctor(System.String)">
      <summary>指定されたエラー メッセージで <see cref="T:Microsoft.ServiceBus.Messaging.MessagingException" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外の理由を説明するエラー メッセージ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingException.#ctor(System.String,System.Boolean,System.Exception)">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.MessagingException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外の理由を説明するエラー メッセージ。</param>
      <param name="isTransientError">例外が一時的な場合は true、それ以外の場合は false です。</param>
      <param name="innerException">現在の例外の原因である例外。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingException.#ctor(System.String,System.Exception)">
      <summary>指定されたエラー メッセージと、この例外の原因である内部例外への参照で、<see cref="T:Microsoft.ServiceBus.Messaging.MessagingException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外の理由を説明するエラー メッセージ。</param>
      <param name="innerException">現在の例外の原因である例外。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessagingException.Data">
      <summary>例外に関連付けられたデータを取得します。</summary>
      <returns>例外に関連付けられたデータ。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessagingException.Detail">
      <summary>メッセージング例外の詳細情報を取得または設定します。</summary>
      <returns>メッセージング例外の詳細情報。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>例外に関するデータでシリアル化情報を設定します。</summary>
      <param name="info">スローされる例外に関するシリアル化されたオブジェクト データ。</param>
      <param name="context">ソースまたは宛先に関するコンテキスト情報。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessagingException.IsTransient">
      <summary>例外が一時的であるかどうかを示す値を取得または設定します。このプロパティをチェックして、操作を再試行する必要があるかどうかを判断します。</summary>
      <returns>例外が一時的な場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessagingException.Timestamp">
      <summary>メッセージング例外が発生した時刻を取得または設定します。</summary>
      <returns>メッセージング例外が発生した時刻。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail">
      <summary>メッセージング例外の詳細を提供します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.CorrelationFiltersExceeded(System.String)">
      <summary>関連付けフィルターの超過エラーに関する例外の詳細を返します。</summary>
      <returns>関連付けフィルターの超過エラーに関する例外の詳細。</returns>
      <param name="message">例外に関する説明メッセージ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.EntityConflict(System.String)">
      <summary>エンティティの競合エラーに関する例外の詳細を返します。</summary>
      <returns>エンティティの競合エラーに関する例外の詳細。</returns>
      <param name="message">例外に関する説明メッセージ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.EntityGone(System.String)">
      <summary>エンティティ消失エラーに関する例外の詳細を返します。</summary>
      <returns>エンティティ消失エラーに関する例外の詳細。</returns>
      <param name="message">例外に関する説明メッセージ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.EntityNotFound(System.String)">
      <summary>「エンティティが見つかりません」エラーに関する例外の詳細を返します。</summary>
      <returns>「エンティティが見つかりません」エラーに関する例外の詳細。</returns>
      <param name="message">例外に関する説明メッセージ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.EntityUpdateConflict(System.String)">
      <summary>エンティティ更新競合エラーに関する例外の詳細を返します。</summary>
      <returns>エンティティ更新競合エラーに関する例外の詳細。</returns>
      <param name="entityName">エンティティの名前。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.ErrorCode">
      <summary>エラー コードを取得します。</summary>
      <returns>エラー コード。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.ErrorLevel">
      <summary>エラー レベルを取得します。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.ErrorLevelType" /> リストの値の 1 つ。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.Message">
      <summary>例外に関する説明メッセージを取得します。</summary>
      <returns>例外に関する説明メッセージ。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.ServerBusy(System.String)">
      <summary>サーバー ビジー エラーに関する例外の詳細を返します。</summary>
      <returns>サーバー ビジー エラーに関する例外の詳細。</returns>
      <param name="message">例外に関する説明メッセージ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.SqlFiltersExceeded(System.String)">
      <summary>SQL フィルター超過エラーに関する例外の詳細を返します。</summary>
      <returns>SQL フィルター超過エラーに関する例外の詳細。</returns>
      <param name="message">例外に関する説明メッセージ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.StoreLockLost(System.String)">
      <summary>ストア ロック喪失エラーに関する例外の詳細を返します。</summary>
      <returns>ストア ロック喪失エラーに関する例外の詳細。</returns>
      <param name="message">例外に関する説明メッセージ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.SubscriptionsExceeded(System.String)">
      <summary>サブスクリプション超過エラーに関する例外の詳細を返します。</summary>
      <returns>サブスクリプション超過エラーに関する例外の詳細。</returns>
      <param name="message">例外に関する説明メッセージ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.UnknownDetail(System.String)">
      <summary>不明な詳細エラーに関する例外の詳細を返します。</summary>
      <returns>不明な詳細エラーに関する例外の詳細。</returns>
      <param name="message">例外に関する説明メッセージ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.UnspecifiedInternalError(System.String)">
      <summary>指定されていない内部エラーに関する例外の詳細を返します。</summary>
      <returns>指定されていない内部エラーに関する例外の詳細。</returns>
      <param name="message">例外に関する説明メッセージ。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.ErrorLevelType">
      <summary>メッセージング通信のエラー レベルのタイプを列挙します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.ErrorLevelType.ServerError">
      <summary>サーバー エラーを指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.ErrorLevelType.UserError">
      <summary>ユーザー エラーを指定します。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessagingFactory">
      <summary>メッセージング ファクトリを表します。これは、キュー、トピック、またはサブスクリプションとの間で送受信するランタイム操作に使用されるアンカー クラスです。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.AcceptMessageSession">
      <summary>サービス名前空間内でセッションが有効なすべてのサブスクリプションとキューで使用可能なセッションを返します。</summary>
      <returns>単一のトランザクションの処理に関する関連メッセージをグループ化できる <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" />。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.AcceptMessageSession(System.TimeSpan)">
      <summary>サービス名前空間内でセッションが有効なすべてのサブスクリプションとキューで使用可能なセッションを返します。</summary>
      <returns>単一のトランザクションの処理に関する関連メッセージをグループ化できる <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" />。</returns>
      <param name="serverWaitTime">処理のタイムアウト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.AcceptMessageSessionAsync">
      <summary>サービス名前空間内でセッションが有効なすべてのサブスクリプションとキューで使用可能なセッションを非同期的に返します。</summary>
      <returns>メッセージ セッションを受け入れる非同期操作を表すタスク インスタンス。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.AcceptMessageSessionAsync(System.TimeSpan)">
      <summary>サービス名前空間内でセッションが有効なすべてのサブスクリプションとキューで使用可能なセッションを非同期的に返します。</summary>
      <returns>メッセージ セッションを受け入れる非同期操作を表すタスク インスタンス。</returns>
      <param name="timeout">処理のタイムアウト。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessagingFactory.Address">
      <summary>メッセージング ファクトリのベース アドレスを取得します。</summary>
      <returns>メッセージング ファクトリのベース アドレスを表す URI。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginAcceptMessageSession(System.AsyncCallback,System.Object)">
      <summary>メッセージ セッションを受け入れる非同期操作を開始します。</summary>
      <returns>メッセージ セッションを受け入れる非同期操作を参照する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginAcceptMessageSession(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>メッセージ セッションを受け入れる非同期操作を開始します。</summary>
      <returns>メッセージ セッションを受け入れる非同期操作を参照する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="serverWaitTime">操作のタイムアウト。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginCreate(System.Collections.Generic.IEnumerable{System.String},Microsoft.ServiceBus.Messaging.MessagingFactorySettings,System.AsyncCallback,System.Object)">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />オブジェクトを作成するための非同期要求を開始します。</summary>
      <returns>非同期操作を参照して <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> 操作を作成する <see cref="T:System.IAsyncResult" /> オブジェクト。 </returns>
      <param name="addresses">名前空間のベース アドレスのリスト。</param>
      <param name="factorySettings"><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> 設定。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">作成操作に関する情報を含むユーザー指定オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginCreate(System.Collections.Generic.IEnumerable{System.String},Microsoft.ServiceBus.TokenProvider,System.AsyncCallback,System.Object)">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />オブジェクトを作成するための非同期要求を開始します。</summary>
      <returns>非同期操作を参照して <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> 操作を作成する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="addresses">名前空間のベース アドレスのリスト。</param>
      <param name="tokenProvider">トークン プロバイダー。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">作成操作に関する情報を含むユーザー指定オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginCreate(System.Collections.Generic.IEnumerable{System.String},System.AsyncCallback,System.Object)">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />オブジェクトを作成するための非同期要求を開始します。</summary>
      <returns>非同期操作を参照して <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> 操作を作成する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="addresses">名前空間のベース アドレスのリスト。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">作成操作に関する情報を含むユーザー指定オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginCreate(System.Collections.Generic.IEnumerable{System.Uri},Microsoft.ServiceBus.Messaging.MessagingFactorySettings,System.AsyncCallback,System.Object)">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />オブジェクトを作成するための非同期要求を開始します。</summary>
      <returns>非同期操作を参照して <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> 操作を作成する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="addresses">名前空間のベース アドレスのリスト。</param>
      <param name="factorySettings"><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> 設定。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">作成操作に関する情報を含むユーザー指定オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginCreate(System.Collections.Generic.IEnumerable{System.Uri},Microsoft.ServiceBus.TokenProvider,System.AsyncCallback,System.Object)">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />オブジェクトを作成するための非同期要求を開始します。</summary>
      <returns>非同期操作を参照して <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> 操作を作成する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="addresses">名前空間のベース アドレスのリスト。</param>
      <param name="tokenProvider">トークン プロバイダー。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">作成操作に関する情報を含むユーザー指定オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginCreate(System.Collections.Generic.IEnumerable{System.Uri},System.AsyncCallback,System.Object)">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />オブジェクトを作成するための非同期要求を開始します。</summary>
      <returns>非同期操作を参照して <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> 操作を作成する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="addresses">名前空間のベース アドレスのリスト。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">作成操作に関する情報を含むユーザー指定オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginCreate(System.String,Microsoft.ServiceBus.Messaging.MessagingFactorySettings,System.AsyncCallback,System.Object)">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />オブジェクトを作成するための非同期要求を開始します。</summary>
      <returns>非同期操作を参照して <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> 操作を作成する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="address">名前空間のベース アドレス。</param>
      <param name="factorySettings"><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> 設定。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">作成操作に関する情報を含むユーザー指定オブジェクト。このオブジェクトは、操作の完了時に <see cref="M:Microsoft.ServiceBus.Messaging.MessagingFactory.EndCreate(System.IAsyncResult)" /> デリゲートに渡されます。</param>
      <exception cref="T:System.UriFormatException"><paramref name="address" /> は空または null です。</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="credential" /> は null です。</exception>
      <exception cref="T:System.ArgumentException"><paramref name="address" /> には、サービス名前空間の完全なアドレスに追加されたパスが含まれています。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginCreate(System.String,Microsoft.ServiceBus.TokenProvider,System.AsyncCallback,System.Object)">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />オブジェクトを作成するための非同期要求を開始します。</summary>
      <returns>非同期操作を参照して <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> 操作を作成する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="address">名前空間のベース アドレス。</param>
      <param name="tokenProvider">トークン プロバイダー。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">作成操作に関する情報を含むユーザー指定オブジェクト。このオブジェクトは、操作の完了時に <see cref="M:Microsoft.ServiceBus.Messaging.MessagingFactory.EndCreate(System.IAsyncResult)" /> デリゲートに渡されます。</param>
      <exception cref="T:System.ArgumentException"><paramref name="address" /> には、サービス名前空間の完全なアドレスに追加されたパスが含まれています。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginCreate(System.String,System.AsyncCallback,System.Object)">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />オブジェクトを作成するための非同期要求を開始します。</summary>
      <returns>非同期操作を参照して <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> 操作を作成する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="address">名前空間のベース アドレス。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">作成操作に関する情報を含むユーザー指定オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginCreate(System.Uri,Microsoft.ServiceBus.Messaging.MessagingFactorySettings,System.AsyncCallback,System.Object)">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />オブジェクトを作成するための非同期要求を開始します。</summary>
      <returns>非同期操作を参照して <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> 操作を作成する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="address">名前空間のベース アドレス。</param>
      <param name="factorySettings"><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> 設定。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">作成操作に関する情報を含むユーザー指定オブジェクト。このオブジェクトは、操作の完了時に <see cref="M:Microsoft.ServiceBus.Messaging.MessagingFactory.EndCreate(System.IAsyncResult)" /> デリゲートに渡されます。</param>
      <exception cref="T:System.UriFormatException"><paramref name="address" /> は空または null です。</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="credential" /> は null です。</exception>
      <exception cref="T:System.ArgumentException"><paramref name="address" /> には、サービス名前空間の完全なアドレスに追加されたパスが含まれています。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginCreate(System.Uri,Microsoft.ServiceBus.TokenProvider,System.AsyncCallback,System.Object)">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />オブジェクトを作成するための非同期要求を開始します。</summary>
      <returns>非同期操作を参照して <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> 操作を作成する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="address">名前空間のベース アドレス。</param>
      <param name="tokenProvider">トークン プロバイダー。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">作成操作に関する情報を含むユーザー指定オブジェクト。このオブジェクトは、操作の完了時に <see cref="M:Microsoft.ServiceBus.Messaging.MessagingFactory.EndCreate(System.IAsyncResult)" /> デリゲートに渡されます。</param>
      <exception cref="T:System.ArgumentException"><paramref name="address" /> には、サービス名前空間の完全なアドレスに追加されたパスが含まれています。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginCreate(System.Uri,System.AsyncCallback,System.Object)">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />オブジェクトを作成するための非同期要求を開始します。</summary>
      <returns>非同期操作を参照して <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> 操作を作成する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="address">名前空間のベース アドレス。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">作成操作に関する情報を含むユーザー指定オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginCreateMessageReceiver(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.AsyncCallback,System.Object)">
      <summary>メッセージ受信者の作成を開始します。</summary>
      <returns>非同期操作を参照してメッセージ受信者作成する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="entityPath">エンティティのパス。</param>
      <param name="receiveMode">受信モード。</param>
      <param name="callback">コールバック。</param>
      <param name="state">状態。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginCreateMessageReceiver(System.String,System.AsyncCallback,System.Object)">
      <summary>メッセージ受信者の作成を開始します。</summary>
      <returns>非同期操作を参照してメッセージ受信者を作成する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="entityPath">エンティティのパス。</param>
      <param name="callback">コールバック。</param>
      <param name="state">状態。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginCreateMessageSender(System.String,System.AsyncCallback,System.Object)">
      <summary>メッセージの送信者の作成を開始します。</summary>
      <returns>非同期操作を参照してメッセージ送信者を作成する <see cref="T:System.IAsyncResult" />オブジェクト。</returns>
      <param name="entityPath">エンティティのパス。</param>
      <param name="callback">コールバック。</param>
      <param name="state">状態。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginCreateMessageSender(System.String,System.String,System.AsyncCallback,System.Object)">
      <summary>メッセージの送信者の作成を開始します。</summary>
      <returns>非同期操作を参照してメッセージ送信者を作成する <see cref="T:System.IAsyncResult" />オブジェクト。</returns>
      <param name="transferDestinationEntityPath">転送先エンティティ パス。</param>
      <param name="viaEntityPath">エンティティ経由パス。</param>
      <param name="callback">コールバック。</param>
      <param name="state">状態。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginPairNamespace(Microsoft.ServiceBus.Messaging.PairedNamespaceOptions,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>名前空間のペアリングを開始します。</summary>
      <returns>操作の非同期結果。</returns>
      <param name="options">ペアリング オプション。</param>
      <param name="timeout">ペアリング タイムアウト。</param>
      <param name="callback">非同期ペアリング コールバック。</param>
      <param name="state">ペアリング状態。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create">
      <summary>新しいメッセージング ファクトリ オブジェクトを作成します。</summary>
      <returns>新しく作成された <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> オブジェクト。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable{System.String})">
      <summary>新しい <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> オブジェクトを作成します。</summary>
      <returns>新しく作成された <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> オブジェクト。</returns>
      <param name="addresses">ベース アドレスのリスト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable{System.String},Microsoft.ServiceBus.Messaging.MessagingFactorySettings)">
      <summary>新しい <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> オブジェクトを作成します。</summary>
      <returns>新しく作成された <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> オブジェクト。</returns>
      <param name="addresses">ベース アドレスのリスト。</param>
      <param name="factorySettings">工場出荷時の設定。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable{System.String},Microsoft.ServiceBus.TokenProvider)">
      <summary>新しい <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> オブジェクトを作成します。</summary>
      <returns>新しく作成された <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> オブジェクト。</returns>
      <param name="addresses">ベース アドレスのリスト。</param>
      <param name="tokenProvider">トークン プロバイダー。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable{System.Uri})">
      <summary>新しい <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> オブジェクトを作成します。</summary>
      <returns>新しく作成された <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> オブジェクト。</returns>
      <param name="addresses">アドレスのリスト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable{System.Uri},Microsoft.ServiceBus.Messaging.MessagingFactorySettings)">
      <summary>新しい <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> オブジェクトを作成します。</summary>
      <returns>新しく作成された <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> オブジェクト。</returns>
      <param name="addresses">アドレスのリスト。</param>
      <param name="factorySettings">工場出荷時の設定。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable{System.Uri},Microsoft.ServiceBus.TokenProvider)">
      <summary>新しい <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> オブジェクトを作成します。</summary>
      <returns>新しく作成された <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> オブジェクト。</returns>
      <param name="addresses">アドレスのリスト。</param>
      <param name="tokenProvider">トークン プロバイダー。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.String)">
      <summary>新しい <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> オブジェクトを作成します。</summary>
      <returns>新しく作成された <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> オブジェクト。</returns>
      <param name="address">サービス名前空間のベース アドレス。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.String,Microsoft.ServiceBus.Messaging.MessagingFactorySettings)">
      <summary>新しい <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> オブジェクトを作成します。</summary>
      <returns>新しく作成された <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> オブジェクト。</returns>
      <param name="address">サービス名前空間のベース アドレス。</param>
      <param name="factorySettings"><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> 設定。</param>
      <exception cref="T:System.UriFormatException"><paramref name="address" /> が空の場合にスローされます。</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="factorySettings" /> または  <paramref name="address" /> が null の場合にスローされます。 </exception>
      <exception cref="T:System.ArgumentException"><paramref name="address" /> には、サービス名前空間の完全なアドレスに追加されたパスが含まれています。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.String,Microsoft.ServiceBus.TokenProvider)">
      <summary>新しい <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> オブジェクトを作成します。</summary>
      <returns>新しく作成された <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> オブジェクト。</returns>
      <param name="address">名前空間のベース アドレス。</param>
      <param name="tokenProvider">トークン プロバイダー。</param>
      <exception cref="T:System.ArgumentException"><paramref name="address" /> には、サービス名前空間の完全なアドレスに追加されたパスが含まれています。</exception>
      <exception cref="T:System.UriFormatException"><paramref name="address" /> が空の場合にスローされます。</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="tokenProvider" /> または  <paramref name="address" /> が null の場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Uri)">
      <summary>新しい <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> オブジェクトを作成します。</summary>
      <returns>新しく作成された <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> オブジェクト。</returns>
      <param name="address">名前空間のベース アドレス。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Uri,Microsoft.ServiceBus.Messaging.MessagingFactorySettings)">
      <summary>新しい <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> オブジェクトを作成します。</summary>
      <returns>新しく作成された <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> オブジェクト。</returns>
      <param name="address">名前空間のベース アドレス。</param>
      <param name="factorySettings"><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> 設定。</param>
      <exception cref="T:System.ArgumentNullException"><paramref name="address" /> または <paramref name="factorySettings" /> が null の場合にスローされます。 </exception>
      <exception cref="T:System.ArgumentException"><paramref name="address" /> には、サービス名前空間の完全なアドレスに追加されたパスが含まれています。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Uri,Microsoft.ServiceBus.TokenProvider)">
      <summary>新しい <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> オブジェクトを作成します。</summary>
      <returns>新しく作成された <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> オブジェクト。</returns>
      <param name="address">名前空間のベース アドレス。</param>
      <param name="tokenProvider">トークン プロバイダー。</param>
      <exception cref="T:System.ArgumentException"><paramref name="address" /> には、サービス名前空間の完全なアドレスに追加されたパスが含まれています。</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="tokenProvider" /> または  <paramref name="address" /> が null の場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable{System.String})">
      <summary>新しいメッセージング ファクトリ オブジェクトを非同期的に作成します。</summary>
      <returns>非同期作成操作を表すタスク インスタンス。</returns>
      <param name="addresses">ベース アドレスのリスト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable{System.String},Microsoft.ServiceBus.Messaging.MessagingFactorySettings)">
      <summary>新しいメッセージング ファクトリ オブジェクトを非同期的に作成します。</summary>
      <returns>非同期作成操作を表すタスク インスタンス。</returns>
      <param name="addresses">ベース アドレスのリスト。</param>
      <param name="factorySettings"><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> 設定。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable{System.String},Microsoft.ServiceBus.TokenProvider)">
      <summary>新しいメッセージング ファクトリ オブジェクトを非同期的に作成します。</summary>
      <returns>非同期作成操作を表すタスク インスタンス。</returns>
      <param name="addresses">ベース アドレスのリスト。</param>
      <param name="tokenProvider">トークン プロバイダー。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable{System.Uri})">
      <summary>新しいメッセージング ファクトリ オブジェクトを非同期的に作成します。</summary>
      <returns>非同期作成操作を表すタスク インスタンス。</returns>
      <param name="addresses">アドレスのリスト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable{System.Uri},Microsoft.ServiceBus.Messaging.MessagingFactorySettings)">
      <summary>新しいメッセージング ファクトリ オブジェクトを非同期的に作成します。</summary>
      <returns>非同期作成操作を表すタスク インスタンス。</returns>
      <param name="addresses">アドレスのリスト。</param>
      <param name="factorySettings"><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> 設定。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable{System.Uri},Microsoft.ServiceBus.TokenProvider)">
      <summary>新しいメッセージング ファクトリ オブジェクトを非同期的に作成します。</summary>
      <returns>非同期作成操作を表すタスク インスタンス。</returns>
      <param name="addresses">アドレスのリスト。</param>
      <param name="tokenProvider">トークン プロバイダー。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.String)">
      <summary>新しいメッセージング ファクトリ オブジェクトを非同期的に作成します。</summary>
      <returns>非同期作成操作を表すタスク インスタンス。</returns>
      <param name="address">サービス名前空間のベース アドレス。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.String,Microsoft.ServiceBus.Messaging.MessagingFactorySettings)">
      <summary>新しいメッセージング ファクトリ オブジェクトを非同期的に作成します。</summary>
      <returns>非同期作成操作を表すタスク インスタンス。</returns>
      <param name="address">サービス名前空間のベース アドレス。</param>
      <param name="factorySettings"><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> 設定。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.String,Microsoft.ServiceBus.TokenProvider)">
      <summary>新しいメッセージング ファクトリ オブジェクトを非同期的に作成します。</summary>
      <returns>非同期作成操作を表すタスク インスタンス。</returns>
      <param name="address">サービス名前空間のベース アドレス。</param>
      <param name="tokenProvider">トークン プロバイダー。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Uri)">
      <summary>新しいメッセージング ファクトリ オブジェクトを非同期的に作成します。</summary>
      <returns>非同期作成操作を表すタスク インスタンス。</returns>
      <param name="address">名前空間のベース アドレス。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Uri,Microsoft.ServiceBus.Messaging.MessagingFactorySettings)">
      <summary>新しいメッセージング ファクトリ オブジェクトを非同期的に作成します。</summary>
      <returns>非同期作成操作を表すタスク インスタンス。</returns>
      <param name="address">名前空間のベース アドレス。</param>
      <param name="factorySettings"><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> 設定。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Uri,Microsoft.ServiceBus.TokenProvider)">
      <summary>新しいメッセージング ファクトリ オブジェクトを非同期的に作成します。</summary>
      <returns>非同期作成操作を表すタスク インスタンス。</returns>
      <param name="address">名前空間のベース アドレス。</param>
      <param name="tokenProvider">トークン プロバイダー。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateFromConnectionString(System.String)">
      <summary>接続文字列から新しい <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> オブジェクトを作成します。</summary>
      <returns>新しく作成された <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> オブジェクト。</returns>
      <param name="connectionString">接続文字列。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageReceiver(System.String)">
      <summary>メッセージ受信者を作成します。</summary>
      <returns>新しく作成されたメッセージ受信者。</returns>
      <param name="entityPath">エンティティのパス。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageReceiver(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)">
      <summary>メッセージ受信者を作成します。</summary>
      <returns>新しく作成されたメッセージ受信者。</returns>
      <param name="entityPath">エンティティのパス。</param>
      <param name="receiveMode">受信モード。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageReceiverAsync(System.String)">
      <summary>メッセージ受信者を非同期的に作成します。</summary>
      <returns>非同期メッセージ受信者作成操作を表すタスク インスタンス。</returns>
      <param name="entityPath">エンティティのパス。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageReceiverAsync(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)">
      <summary>メッセージ受信者を非同期的に作成します。</summary>
      <returns>非同期メッセージ受信者作成操作を表すタスク インスタンス。</returns>
      <param name="entityPath">エンティティのパス。</param>
      <param name="receiveMode">受信モード。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageSender(System.String)">
      <summary>メッセージの送信者を作成します。</summary>
      <returns>新しく作成されたメッセージの送信者。</returns>
      <param name="entityPath">エンティティのパス。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageSender(System.String,System.String)">
      <summary>メッセージの送信者を作成します。</summary>
      <returns>作成された <see cref="T:Microsoft.ServiceBus.Messaging.MessageSender" /> オブジェクト。</returns>
      <param name="transferDestinationEntityPath">転送先エンティティ パス。</param>
      <param name="viaEntityPath">エンティティ経由パス。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageSenderAsync(System.String)">
      <summary>メッセージの送信者を非同期的に作成します。</summary>
      <returns>非同期メッセージ送信者作成操作を表すタスク インスタンス。</returns>
      <param name="entityPath">エンティティのパス。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageSenderAsync(System.String,System.String)">
      <summary>メッセージの送信者を非同期的に作成します。</summary>
      <returns>非同期メッセージ送信者作成操作を表すタスク インスタンス。</returns>
      <param name="transferDestinationEntityPath">転送先エンティティ パス。</param>
      <param name="viaEntityPath">エンティティ経由パス。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateQueueClient(System.String)">
      <summary>新しいキュー クライアントを作成します。</summary>
      <returns>新しく作成されたキュー クライアント。</returns>
      <param name="path">サービス名前空間のベース アドレスに対するキューのパス。</param>
      <exception cref="T:System.ArgumentException"><paramref name="path" /> は null または空です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="path" /> 長さが <see cref="F:Microsoft.ServiceBus.Messaging.Constants.TopicNameMaximumLength" /> を超えています。</exception>
      <exception cref="T:System.TimeoutException">操作のタイムアウト。タイムアウト期間は、 <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" /> オブジェクトを介して初期化されます。タイムアウト値が比較的小さい場合は、この例外を回避するために <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> 値を増やす必要があります。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">内部エラーまたは予期しない例外が発生します。</exception>
      <exception cref="T:System.OperationCanceledException">工場は閉鎖されるか中止されました。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateQueueClient(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)">
      <summary>新しいキュー クライアントを作成します。</summary>
      <returns>新しく作成されたキュー クライアント。</returns>
      <param name="path">サービス名前空間のベース アドレスに対するキューのパス。</param>
      <param name="receiveMode">受信モード。</param>
      <exception cref="T:System.ArgumentException"><paramref name="path" /> は null または空です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="path" /> 長さが <see cref="F:Microsoft.ServiceBus.Messaging.Constants.TopicNameMaximumLength" /> を超えています。</exception>
      <exception cref="T:System.TimeoutException">操作のタイムアウト。タイムアウト期間は、 <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" /> オブジェクトを介して初期化されます。タイムアウト値が比較的小さい場合は、この例外を回避するために <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> 値を増やす必要があります。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">内部エラーまたは予期しない例外が発生します。</exception>
      <exception cref="T:System.OperationCanceledException">工場は閉鎖されるか中止されました。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateSubscriptionClient(System.String,System.String)">
      <summary>サブスクリプション クライアントを作成します。</summary>
      <returns>新しく作成されたサブスクリプション クライアント。</returns>
      <param name="topicPath">サービス名前空間へのトピック パス。</param>
      <param name="name">サブスクリプションの名前。</param>
      <exception cref="T:System.ArgumentException">指定された <paramref name="topicPath" /> は null または空です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="topicPath" /> の長さは <see cref="F:Microsoft.ServiceBus.Messaging.Constants.TopicNameMaximumLength" /> を超えています。</exception>
      <exception cref="T:System.TimeoutException">操作のタイムアウト。タイムアウト期間は、 <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" /> オブジェクトを介して初期化されます。タイムアウト値が比較的小さい場合は、この例外を回避するために <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> 値を増やす必要があります。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">内部エラーまたは予期しない例外が発生します。</exception>
      <exception cref="T:System.OperationCanceledException">工場は閉鎖されるか中止されました。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateSubscriptionClient(System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)">
      <summary>新しいサブスクリプション クライアントを作成します。</summary>
      <returns>新しく作成されたサブスクリプション クライアント。</returns>
      <param name="topicPath">サービス名前空間へのトピック パス。</param>
      <param name="name">サブスクリプションの名前。</param>
      <param name="receiveMode">受信モード。</param>
      <exception cref="T:System.ArgumentException">指定された <paramref name="topicPath" /> は null または空です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="topicPath" /> の長さは <see cref="F:Microsoft.ServiceBus.Messaging.Constants.TopicNameMaximumLength" /> を超えています。</exception>
      <exception cref="T:System.TimeoutException">操作のタイムアウト。タイムアウト期間は、 <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" /> オブジェクトを介して初期化されます。タイムアウト値が比較的小さい場合は、この例外を回避するために <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> 値を増やす必要があります。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">内部エラーまたは予期しない例外が発生します。</exception>
      <exception cref="T:System.OperationCanceledException">工場は閉鎖されるか中止されました。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateTopicClient(System.String)">
      <summary>新しいトピック クライアントを作成します。</summary>
      <returns>新しく作成されたトピック クライアント。</returns>
      <param name="path">サービス名前空間のベース アドレスに関連したトピック パス。</param>
      <exception cref="T:System.ArgumentNullException">指定された <paramref name="path" /> は null です。</exception>
      <exception cref="T:System.TimeoutException">操作のタイムアウト。タイムアウト期間は、 <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" /> オブジェクトを介して初期化されます。タイムアウト値が比較的小さい場合は、この例外を回避するために <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> 値を増やす必要があります。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">内部エラーまたは予期しない例外が発生します。</exception>
      <exception cref="T:System.OperationCanceledException">工場は閉鎖されるか中止されました。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.EndAcceptMessageSession(System.IAsyncResult)">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />オブジェクトを受け入れる非同期要求を終了します。</summary>
      <returns>終了した <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" />。</returns>
      <param name="result">結果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.EndCreate(System.IAsyncResult)">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> オブジェクトを作成する非同期要求を終了します。</summary>
      <returns>新しく作成された <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> オブジェクト。</returns>
      <param name="result"><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />オブジェクトの作成を参照する <see cref="T:System.IAsyncResult" /> 。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.EndCreateMessageReceiver(System.IAsyncResult)">
      <summary>メッセージ受信者の作成を終了します。</summary>
      <returns>新しく作成された <see cref="T:Microsoft.ServiceBus.Messaging.MessageReceiver" /> オブジェクト。</returns>
      <param name="result">結果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.EndCreateMessageSender(System.IAsyncResult)">
      <summary>メッセージ送信者の作成を終了します。</summary>
      <returns>新しく作成された <see cref="T:Microsoft.ServiceBus.Messaging.MessageSender" /> オブジェクト。</returns>
      <param name="result">結果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.EndPairNamespace(System.IAsyncResult)">
      <summary>名前空間のペアリングを終了します。</summary>
      <param name="result">操作の結果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.GetSettings">
      <summary>メッセージング ファクトリの設定のコピーを取得します。</summary>
      <returns>メッセージング ファクトリ設定のコピー。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnAbort">
      <summary>中止アクションを実行します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnAcceptMessageSession(Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.TimeSpan)">
      <summary>メッセージ受け入れセッションを実行します。</summary>
      <returns>実行されたメッセージ セッション。</returns>
      <param name="receiveMode">メッセージ受信モード。</param>
      <param name="serverWaitTime">サーバーの待機時間。</param>
      <param name="timeout">操作のタイムアウト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnAcceptSessionReceiver(System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan)">
      <summary>セッション受信者受け入れアクションを実行します。</summary>
      <returns>非同期セッション受信者受け入れアクションを参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="entityName">エンティティの名前。</param>
      <param name="sessionId">セッション識別子。</param>
      <param name="receiveMode">メッセージ受信モード。</param>
      <param name="timeout">操作がタイムアウトするまでの待機時間。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginAcceptMessageSession(Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>メッセージ セッション受け入れ開始アクションを実行します。</summary>
      <returns>操作の非同期結果。</returns>
      <param name="receiveMode">受信モード。</param>
      <param name="serverWaitTime">サーバーの待機時間。</param>
      <param name="timeout">操作のタイムアウト。</param>
      <param name="callback">非同期コールバック。</param>
      <param name="state">セッションの状態。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginAcceptSessionReceiver(System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>セッション受信者受け入れ開始アクションを実行します。</summary>
      <returns>非同期セッション受信者受け入れアクションを参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="entityName">エンティティの名前。</param>
      <param name="sessionId">セッション識別子。</param>
      <param name="receiveMode">メッセージ受信モード。</param>
      <param name="timeout">操作がタイムアウトするまでの待機時間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">受信操作に関する情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>終了開始アクションを実行します。</summary>
      <returns>非同期終了アクションを参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="timeout">タイムアウト。</param>
      <param name="callback">コールバック。</param>
      <param name="state">状態。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginCreateMessageReceiver(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>メッセージ受信者の作成開始アクションを実行します。</summary>
      <returns>非同期メッセージ受信者作成アクションを参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="entityName">エンティティの名前。</param>
      <param name="receiveMode">メッセージ受信モード。</param>
      <param name="timeout">操作がタイムアウトするまでの待機時間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">受信操作に関する情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginCreateMessageSender(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>メッセージ送信者の作成開始アクションを実行します。</summary>
      <returns>非同期メッセージ送信者作成アクションを参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="transferDestinationEntityName">転送先エンティティの名前。</param>
      <param name="viaEntityName">経由エンティティ名。</param>
      <param name="timeout">タイムアウト。</param>
      <param name="callback">コールバック メッセージ。</param>
      <param name="state">状態。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginCreateMessageSender(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>メッセージ送信者の作成開始アクションを実行します。</summary>
      <returns>非同期メッセージ送信者作成アクションを参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="entityName">エンティティの名前。</param>
      <param name="timeout">タイムアウト。</param>
      <param name="callback">コールバック。</param>
      <param name="state">状態。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnClose(System.TimeSpan)">
      <summary>終了アクションを実行します。</summary>
      <param name="timeout">タイムアウト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateMessageReceiver(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan)">
      <summary>メッセージ受信者作成アクションを実行します。</summary>
      <returns>非同期メッセージ受信者作成アクションを参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="entityName">エンティティの名前。</param>
      <param name="receiveMode">メッセージ受信モード。</param>
      <param name="timeout">タイムアウト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateMessageSender(System.String,System.String,System.TimeSpan)">
      <summary>メッセージ送信者作成アクションを実行します。</summary>
      <returns>実行された <see cref="T:Microsoft.ServiceBus.Messaging.MessageSender" /> アクション。</returns>
      <param name="transferDestinationEntityName">転送先エンティティの名前。</param>
      <param name="viaEntityName">経由エンティティ名。</param>
      <param name="timeout">メッセージのタイムアウト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateMessageSender(System.String,System.TimeSpan)">
      <summary>メッセージ送信者作成アクションを実行します。</summary>
      <returns>非同期メッセージ送信者作成アクションを参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="entityName">エンティティの名前。</param>
      <param name="timeout">タイムアウト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateQueueClient(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)">
      <summary>キュー クライアント作成アクションを実行します。</summary>
      <returns>新しく作成されたキュー クライアント。</returns>
      <param name="path">サービス名前空間のベース アドレスに対するキューのパス。</param>
      <param name="receiveMode">受信モード。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateSubscriptionClient(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)">
      <summary>サブスクリプション クライアント作成アクションを実行します。</summary>
      <returns>新しく作成されたサブスクリプション クライアント。</returns>
      <param name="subscriptionPath">サブスクリプション パス。</param>
      <param name="receiveMode">受信モード。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateSubscriptionClient(System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)">
      <summary>サブスクリプション クライアント作成アクションを実行します。</summary>
      <returns>新しく作成されたサブスクリプション クライアント。</returns>
      <param name="topicPath">サービス名前空間ベース アドレスに対するサブスクリプションのパス。</param>
      <param name="name">サブスクリプションの名前。</param>
      <param name="receiveMode">受信モード。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateTopicClient(System.String)">
      <summary>トピック クライアント作成アクションを実行します。</summary>
      <returns>新しく作成されたトピック クライアント。</returns>
      <param name="path">サービス名前空間ベース アドレスに対するトピックのパス。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndAcceptMessageSession(System.IAsyncResult)">
      <summary>メッセージ セッション受け入れ終了アクションを実行します。</summary>
      <returns>実行された <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" /> アクション。</returns>
      <param name="result">操作の結果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndAcceptSessionReceiver(System.IAsyncResult)">
      <summary>セッション受信者受け入れ終了アクションを実行します。</summary>
      <returns>実行された <see cref="T:Microsoft.ServiceBus.Messaging.SessionReceiver" /> オブジェクト。</returns>
      <param name="result">この非同期操作の状態情報とユーザー定義データを格納する <see cref="T:System.IAsyncResult" /> オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndClose(System.IAsyncResult)">
      <summary>クローズ終了アクションを実行します。</summary>
      <param name="result">結果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndCreateMessageReceiver(System.IAsyncResult)">
      <summary>メッセージ受信者の作成終了アクションを実行します。</summary>
      <returns>実行された <see cref="T:Microsoft.ServiceBus.Messaging.MessageReceiver" /> アクション。</returns>
      <param name="result">結果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndCreateMessageSender(System.IAsyncResult)">
      <summary>メッセージ送信者の作成終了アクションを実行します。</summary>
      <returns>実行された <see cref="T:Microsoft.ServiceBus.Messaging.MessageSender" /> アクション。</returns>
      <param name="result">結果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.PairNamespaceAsync(Microsoft.ServiceBus.Messaging.PairedNamespaceOptions)">
      <summary>名前空間を非同期的にペアリングします。</summary>
      <returns>操作の結果。</returns>
      <param name="options">ペアリング オプション。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessagingFactory.PrefetchCount">
      <summary>メッセージ受信者が同時に要求できるメッセージの数を取得または設定します。</summary>
      <returns>メッセージ受信者が同時に要求できるメッセージの数。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings">
      <summary>メッセージング ファクトリの設定を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.#ctor(Microsoft.ServiceBus.Messaging.MessagingFactorySettings)">
      <summary>クローン用に指定されたメッセージング ファクトリ設定で <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="other">指定されたメッセージング ファクトリの設定。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.AmqpTransportSettings">
      <summary>高度なメッセージ キュー プロトコル (AMQP) のトランスポート設定を取得または設定します。</summary>
      <returns>高度なメッセージ キュー プロトコル (AMQP) のトランスポート設定。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.Clone">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" /> のコピーを作成します。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" /> の作成済みコピー。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.EnableAdditionalClientTimeout">
      <summary>メッセージング操作で追加のクライアント タイムアウトを有効にできるかどうかを示す値を取得または設定します。</summary>
      <returns>メッセージング操作で追加のクライアント タイムアウトを有効にできる場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.NetMessagingTransportSettings">
      <summary>ネット メッセージングに必要なトランスポート設定を取得または設定します。</summary>
      <returns>ネット メッセージングに必要なトランスポート設定。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OnBeginCreateFactory(System.Collections.Generic.IEnumerable{System.Uri},System.AsyncCallback,System.Object)">
      <summary>非同期ファクトリ作成開始アクションを実行します。</summary>
      <returns>非同期要求を参照してファクトリを作成する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="uriAddresses">統一されたリソース識別子のコレクション。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">受信操作に関する情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OnBeginCreateFactory(System.Uri,System.AsyncCallback,System.Object)">
      <summary>非同期ファクトリ作成開始アクションを実行します。</summary>
      <returns>非同期要求を参照してファクトリを作成する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="uri">統一されたリソース識別子。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">受信操作に関する情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OnEndCreateFactory(System.IAsyncResult)">
      <summary>ファクトリを作成する非同期要求を終了します。</summary>
      <returns>新しく作成されたメッセージング ファクトリ。</returns>
      <param name="result">非同期要求を参照してファクトリを作成する <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout">
      <summary>タイムアウトになる前にメッセージング操作を完了する必要がある時間を指定する <see cref="T:System.TimeSpan" /> を取得または設定します。</summary>
      <returns>タイムアウトになる前にメッセージング操作を完了する必要がある時間を指定する <see cref="T:System.TimeSpan" /> 。既定値は 1 分です。</returns>
      <exception cref="T:System.ArgumentNullException">null が設定されます (たとえば、Nullable <see cref="T:System.TimeSpan" />)。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">ゼロまたは負の <see cref="T:System.TimeSpan" /> が設定されます。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.TokenProvider">
      <summary>ファクトリ設定のトークン プロバイダーを取得または設定します。</summary>
      <returns>工場出荷時設定のトークン プロバイダー。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.TransportType">
      <summary>メッセージング トランスポートのタイプを取得または設定します。</summary>
      <returns>メッセージング トランスポートのタイプ。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.NetMessagingBinding">
      <summary>ネット メッセージングに使用されるバインディングを表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingBinding.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.NetMessagingBinding" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingBinding.#ctor(System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.NetMessagingBinding" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="configurationName">初期化に使用する構成。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingBinding.CreateBindingElements">
      <summary>現在のバインディングに含まれるバインディング要素の順序付きコレクションを返します。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.Messaging.NetMessagingBinding" /> で記述されたバインディング要素の順序付きスタックを含む <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> オブジェクト。下から始まるバインディング要素の順序は、トランスポート、エンコード、およびセキュリティです。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingBinding.MaxBufferPoolSize">
      <summary>バインディングによって処理される TCP メッセージを格納するバッファー プールで許可される最大サイズを取得または設定します。</summary>
      <returns>バインディングによって処理される TCP メッセージを格納するバッファー プールで許可される最大サイズ。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingBinding.PrefetchCount">
      <summary>メッセージ受信者が事前にフェッチできるメッセージの数を取得または設定します。</summary>
      <returns>メッセージ受信者が事前にフェッチできるメッセージの数。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingBinding.Scheme">
      <summary>このバインディングで構成されているチャネルとリスナーの URI トランスポート スキームを取得します。</summary>
      <returns>このバインディングで構成されるチャネルとリスナーの URI トランスポート スキーム。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingBinding.SessionIdleTimeout">
      <summary>セッションがタイムアウトする前に待機する非アクティブ期間を指定するタイムスパン値を取得または設定します。</summary>
      <returns>セッションがタイムアウトする前に待機する非アクティブ期間を指定するタイムスパン値。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingBinding.TransportSettings">
      <summary>ネット メッセージングのトランスポート設定を取得または設定します。</summary>
      <returns>ネット メッセージングのトランスポート設定。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement">
      <summary>Service Bus でメッセージを送信するためのネット メッセージング トランスポート指定で使用されるバインディング要素を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>チャネル ファクトリを構築します。</summary>
      <returns>チャネル ファクトリによって実装されるインターフェイス。</returns>
      <param name="context">バインディング コンテキスト。</param>
      <typeparam name="TChannel">チャネルのタイプ。</typeparam>
      <exception cref="T:System.ArgumentException">TChannel がサポートされているチャネル タイプでない場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>チャネル リスナーを構築します。</summary>
      <returns>実装された <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> インターフェイス。</returns>
      <param name="context">バインディング コンテキスト。</param>
      <typeparam name="TChannel">チャネルのタイプ。</typeparam>
      <exception cref="T:System.ArgumentException">TChannel がサポートされているチャネル タイプでない場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>バインディング要素がチャネル ファクトリを構築できるかどうかを問い合わせます。</summary>
      <returns>バインディング要素が特定タイプのチャネルのチャネル ファクトリを構築できる場合は true、それ以外の場合は false です。</returns>
      <param name="context">バインディング コンテキスト。</param>
      <typeparam name="T">チャネルのタイプ。</typeparam>
      <exception cref="T:System.ArgumentNullException">コンテキストが null の場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>バインディング要素がチャネル リスナーを構築できるかどうかを問い合わせます。</summary>
      <returns>バインディング要素が特定タイプのチャネルのチャネル リスナーを構築できる場合は true、それ以外の場合は false です。</returns>
      <param name="context">バインディング コンテキスト。</param>
      <typeparam name="T">チャネルのタイプ。</typeparam>
      <exception cref="T:System.ArgumentNullException">コンテキストが null の場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.Clone">
      <summary>このバインディング要素のディープ コピーを作成します。</summary>
      <returns>このバインディング要素のコピー。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>特定のバインディング要素プロパティを取得します。</summary>
      <returns>バインディング要素プロパティ。</returns>
      <param name="context">バインディング コンテキスト。</param>
      <typeparam name="T">ジェネリック タイプのパラメーター。</typeparam>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.PrefetchCount">
      <summary>プリフェッチの数を取得または設定します。</summary>
      <returns>プリフェッチの数。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.Scheme">
      <summary>トランスポートの URI スキームを取得します。</summary>
      <returns>トランスポートの URI スキーム。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.SessionIdleTimeout">
      <summary>セッションがタイムアウトする前に待機する非アクティブ期間を指定するタイムスパン値を取得または設定します。</summary>
      <returns>タイムスパン値。既定値は 1 分です。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>カスタム ポリシー アサーションをエクスポートします。</summary>
      <param name="exporter">エクスポート プロセスの変更に使用できる MetadataExport オブジェクト。</param>
      <param name="context">カスタム ポリシー アサーションの挿入に使用できる PolicyConvertContext オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>カスタム Web サービス記述言語 (WSDL) 要素をコントラクト向けに生成された WSDL に書き込みます。</summary>
      <param name="exporter">コントラクト情報をエクスポートする WsdlExporter オブジェクト。</param>
      <param name="context">エクスポートされた WSDL 要素からコントラクトの説明へのマッピングを提供します。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>カスタム Web サービス記述言語 (WSDL) 要素をエンドポイント向けに生成された WSDL に書き込みます。</summary>
      <param name="exporter">エンドポイント情報をエクスポートする WsdlExporter オブジェクト。</param>
      <param name="context">エクスポートされた WSDL 要素からエンドポイント記述へのマッピングを提供します。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.TransportSettings">
      <summary>ネット メッセージングのトランスポート設定を取得または設定します。</summary>
      <returns>ネット メッセージングのトランスポート設定。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.NetMessagingTransportSettings">
      <summary>.NET メッセージングトランスポート設定を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportSettings.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.NetMessagingTransportSettings" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingTransportSettings.BatchFlushInterval">
      <summary>バッチ フラッシュ間隔を取得または設定します。</summary>
      <returns>バッチ フラッシュ間隔。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportSettings.Clone">
      <summary>このオブジェクトのディープ コピーを作成します。</summary>
      <returns>このオブジェクトのコピー。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingTransportSettings.EnableRedirect">
      <summary>メッセージ リダイレクトが有効になっているかどうかを示す値を取得します。</summary>
      <returns>メッセージ リダイレクトが有効になっている場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.NoMatchingSubscriptionException">
      <summary>サブスクリプションを一致する際にスローされ、一致がなかった場合の例外。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NoMatchingSubscriptionException.#ctor(System.String)">
      <summary>エラー メッセージで <see cref="T:Microsoft.ServiceBus.Messaging.NoMatchingSubscriptionException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外に関するエラー メッセージ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NoMatchingSubscriptionException.#ctor(System.String,System.Exception)">
      <summary>エラー メッセージと内部例外で <see cref="T:Microsoft.ServiceBus.Messaging.NoMatchingSubscriptionException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外に関するエラー メッセージ。</param>
      <param name="innerException">現在の例外の原因である内部例外。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NoMatchingSubscriptionException.ToString">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.NoMatchingSubscriptionException" /> の文字列表現を返します。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.Messaging.NoMatchingSubscriptionException" /> の文字列表現。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.OnMessageOptions">
      <summary><see cref="M:Microsoft.ServiceBus.Messaging.QueueClient.OnMessage(System.Action{Microsoft.ServiceBus.Messaging.BrokeredMessage})" /> と <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnMessage(System.Action{Microsoft.ServiceBus.Messaging.BrokeredMessage})" /> を使用して、メッセージポンプ処理に関連するオプションを提供します。 </summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.OnMessageOptions.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.OnMessageOptions" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.OnMessageOptions.AutoComplete">
      <summary>コールバックの処理が完了した後、メッセージ ポンプがメッセージで <see cref="M:Microsoft.ServiceBus.Messaging.QueueClient.Complete(System.Guid)" /> または <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Complete(System.Guid)" /> を呼び出すかどうかを示す値を取得または設定します。</summary>
      <returns>操作の正常な実行時にメッセージ処理を自動的に完了する場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.OnMessageOptions.AutoRenewTimeout">
      <summary>セッションの自動的な更新に必要な時間を取得または設定します。</summary>
      <returns>セッションの自動的な更新に必要な時間。</returns>
    </member>
    <member name="E:Microsoft.ServiceBus.Messaging.OnMessageOptions.ExceptionReceived">
      <summary>例外を受け取ると発生します。メッセージ ポンプで発生したエラーを通知できます。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.OnMessageOptions.MaxConcurrentCalls">
      <summary>メッセージ ポンプが開始するコールバックへの同時呼び出しの最大回数を取得または設定します。</summary>
      <returns>コールバックへの同時呼び出しの最大回数。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.PairedMessagingFactoryException">
      <summary>ペアリングされたメッセージング ファクトリで発生した例外を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.PairedMessagingFactoryException.#ctor(System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.PairedMessagingFactoryException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外メッセージ。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.PairedNamespaceEventArgs">
      <summary>サービス バス メッセージングのペアになっている名前空間に関連付けられたイベント引数を表します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.PairedNamespaceEventArgs.Options">
      <summary>ペアになっている名前空間に関連付けられたオプションを取得または設定します。</summary>
      <returns>ペアになっている名前空間に関連付けられたオプション。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.PairedNamespaceOptions">
      <summary>サービス バス メッセージングのペアになっている名前空間のオプションを表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.PairedNamespaceOptions.#ctor(Microsoft.ServiceBus.NamespaceManager,Microsoft.ServiceBus.Messaging.MessagingFactory)">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.PairedNamespaceOptions" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="secondaryNamespaceManager">セカンダリ名前空間マネージャー。</param>
      <param name="secondaryMessagingFactory">ペアリングされた名前空間に関連付けられたセカンダリ メッセージング ファクトリ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.PairedNamespaceOptions.#ctor(Microsoft.ServiceBus.NamespaceManager,Microsoft.ServiceBus.Messaging.MessagingFactory,System.TimeSpan)">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.PairedNamespaceOptions" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="secondaryNamespaceManager">セカンダリ名前空間マネージャー。</param>
      <param name="secondaryMessagingFactory">ペアリングされた名前空間に関連付けられたセカンダリ メッセージング ファクトリ。</param>
      <param name="failoverInterval">メッセージ <see cref="T:System.TimeSpan" /> 間隔フェールオーバー。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.PairedNamespaceOptions.ClearPairing">
      <summary>ペアリングされた名前空間のペアリングを解決します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.PairedNamespaceOptions.FailoverInterval">
      <summary>メッセージ <see cref="T:System.TimeSpan" /> 間隔フェールオーバーを取得します。</summary>
      <returns>メッセージ <see cref="T:System.TimeSpan" /> 間隔フェールオーバー。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.PairedNamespaceOptions.OnNotifyPrimarySendResult(System.String,System.Boolean)">
      <summary>結果の送信についてプライマリ メッセージングに通知します。</summary>
      <param name="path">パスの文字列。</param>
      <param name="success">結果が正常に送信された場合は true、それ以外の場合は false です。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.PairedNamespaceOptions.SecondaryMessagingFactory">
      <summary>ペアリングされた名前空間に関連付けられたセカンダリ メッセージング ファクトリを取得します。</summary>
      <returns>ペアリングされた名前空間に関連付けられたセカンダリ メッセージング ファクトリ。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.PairedNamespaceOptions.SecondaryNamespaceManager">
      <summary>ペアリングされた名前空間内のキュー、トピック、サブスクリプション、ルールなどのエンティティを管理するオブジェクトを取得します。</summary>
      <returns>ペアリングされた名前空間内のキュー、トピック、サブスクリプション、ルールなどのエンティティを管理するオブジェクト。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.PartitionNotOwnedException">
      <summary>エラーのないパーティションを通知するためにスローされる例外。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.PartitionNotOwnedException.#ctor(System.String)">
      <summary>指定されたエラー メッセージで <see cref="T:Microsoft.ServiceBus.Messaging.PartitionNotOwnedException" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外の原因を説明するエラー メッセージ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.PartitionNotOwnedException.#ctor(System.String,System.Exception)">
      <summary>指定されたエラー メッセージと内部例外の参照で <see cref="T:Microsoft.ServiceBus.Messaging.PartitionNotOwnedException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外の原因を説明するエラー メッセージ。</param>
      <param name="innerException">現在の例外の原因である内部例外。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.PnsCredentialProperties">
      <summary>プッシュ通知サービスの資格情報プロパティを表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.PnsCredentialProperties.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.PnsCredentialProperties" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.QueueClient">
      <summary>キュー クライアント オブジェクトを表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Abandon(System.Guid)">
      <summary>メッセージを破棄し、メッセージ ロックの所有権を放棄します。</summary>
      <param name="lockToken">破棄するロック メッセージ インスタンスにバインドされたロック トークン。</param>
      <exception cref="T:System.TimeoutException"><see cref="T:Microsoft.ServiceBus.Messaging.ServiceBusMessagingFactorySettings.OperationTimeout" /> によって設定されたタイムアウト値を操作が超えた場合にスローされます。</exception>
      <exception cref="T:System.OperationCanceledException">クライアント エンティティが終了または中止された場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Abandon(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>メッセージを破棄し、メッセージ ロックの所有権を放棄します。</summary>
      <param name="lockToken">破棄するロック メッセージ インスタンスにバインドされたロック トークン。</param>
      <param name="propertiesToModify">変更するメッセージのプロパティ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AbandonAsync(System.Guid)">
      <summary>メッセージを非同期的に破棄し、メッセージ ロックの所有権を放棄します。</summary>
      <returns>破棄されたメッセージ。</returns>
      <param name="lockToken">破棄するロック メッセージ インスタンスにバインドされたロック トークン。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AbandonAsync(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>メッセージを非同期的に破棄し、メッセージ ロックの所有権を放棄します。</summary>
      <returns>破棄されたメッセージ。</returns>
      <param name="lockToken">破棄するロック メッセージ インスタンスにバインドされたロック トークン。</param>
      <param name="propertiesToModify">変更するメッセージのプロパティ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptMessageSession">
      <summary>単一のトランザクションで処理するための関連メッセージのグループ化を可能にするメッセージ セッションを受け入れます。</summary>
      <returns>単一のトランザクションの処理に関する関連メッセージをグループ化できる <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" />。</returns>
      <exception cref="T:System.TimeoutException"><see cref="T:Microsoft.ServiceBus.Messaging.ServiceBusMessagingFactorySettings.OperationTimeout" /> によって設定されたタイムアウト値を操作が超えた場合にスローされます。</exception>
      <exception cref="T:System.OperationCanceledException">クライアントが既に終了、中止、または破棄されている場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptMessageSession(System.String)">
      <summary>特定のセッション識別子を使用して、単一のトランザクションで処理する関連メッセージのグループ化を可能にするメッセージ セッションを受け入れます。</summary>
      <returns>単一のトランザクションの処理に関する関連メッセージをグループ化できる <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" />。</returns>
      <param name="sessionId">メッセージ セッションのセッション識別子。</param>
      <exception cref="T:System.ArgumentException">sessionId が null、空、または空白の場合にスローされます。</exception>
      <exception cref="T:System.TimeoutException"><see cref="T:Microsoft.ServiceBus.Messaging.ServiceBusMessagingFactorySettings.OperationTimeout" /> によって設定されたタイムアウト値を操作が超えた場合にスローされます。</exception>
      <exception cref="T:System.OperationCanceledException">クライアントが既に終了、中止、または破棄されている場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptMessageSession(System.String,System.TimeSpan)">
      <summary>特定のセッション識別子と待機時間を使用して、単一のトランザクションで処理する関連メッセージのグループ化を可能にするメッセージ セッションを受け入れます。</summary>
      <returns>単一のトランザクションの処理に関する関連メッセージをグループ化できる <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" />。</returns>
      <param name="sessionId">メッセージ セッションのセッション識別子。</param>
      <param name="serverWaitTime">タイムアウトになるまで、サーバーがメッセージの処理を待機する時間。</param>
      <exception cref="T:System.ArgumentException">sessionId が null、空、または空白の場合にスローされます。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="serverWaitTime" /> が正の TimeSpan 値でない場合にスローされます。</exception>
      <exception cref="T:System.TimeoutException"><see cref="T:Microsoft.ServiceBus.Messaging.ServiceBusMessagingFactorySettings.OperationTimeout" /> によって設定されたタイムアウト値を操作が超えた場合にスローされます。</exception>
      <exception cref="T:System.OperationCanceledException">クライアントが既に終了、中止、または破棄されている場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptMessageSession(System.TimeSpan)">
      <summary>指定されたサーバー待機時間を使用して、単一のトランザクションで処理する関連メッセージのグループ化を可能にするメッセージ セッションを受け入れます。</summary>
      <returns>単一のトランザクションの処理に関する関連メッセージをグループ化できる <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" />。</returns>
      <param name="serverWaitTime">タイムアウトになるまで、サーバーがメッセージの処理を待機する時間。</param>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="serverWaitTime" /> が正の TimeSpan 値でない場合にスローされます。</exception>
      <exception cref="T:System.TimeoutException"><paramref name="serverWaitTime" /> によって設定されたタイムアウト値を操作が超えた場合にスローされます。</exception>
      <exception cref="T:System.OperationCanceledException">クライアントが既に終了、中止、または破棄されている場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptMessageSessionAsync">
      <summary>単一のトランザクションで処理するための関連メッセージのグループ化を可能にするメッセージ セッションを非同期的に受け入れます。</summary>
      <returns>非同期操作の結果。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptMessageSessionAsync(System.String)">
      <summary>特定のセッション識別子を使用して、単一のトランザクションで処理する関連メッセージのグループ化を可能にするメッセージ セッションを非同期的に受け入れます。</summary>
      <returns>非同期操作の結果。</returns>
      <param name="sessionId">メッセージ セッションのセッション識別子。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptMessageSessionAsync(System.String,System.TimeSpan)">
      <summary>特定のセッション識別子と待機時間を使用して、単一のトランザクションで処理する関連メッセージのグループ化を可能にするメッセージ セッションを非同期的に受け入れます。</summary>
      <returns>非同期操作の結果。</returns>
      <param name="sessionId">メッセージ セッションのセッション識別子。</param>
      <param name="serverWaitTime">タイムアウトになるまで、サーバーがメッセージの処理を待機する時間。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptMessageSessionAsync(System.TimeSpan)">
      <summary>指定されたサーバー待機時間を使用して、単一のトランザクションで処理する関連メッセージのグループ化を可能にするメッセージ セッションを非同期的に受け入れます。</summary>
      <returns>非同期操作の結果。</returns>
      <param name="serverWaitTime">タイムアウトになるまで、サーバーがメッセージの処理を待機する時間。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginAbandon(System.Guid,System.AsyncCallback,System.Object)">
      <summary>メッセージを破棄し、ロックを放棄する非同期操作を開始します。</summary>
      <returns>非同期操作を参照してメッセージを破棄し、ロックを放棄する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="lockToken">破棄するロック メッセージ インスタンスにバインドされたロック トークン。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginAbandon(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>メッセージを破棄し、ロックを放棄する非同期操作を開始します。</summary>
      <returns>非同期操作を参照してメッセージを破棄し、ロックを放棄する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="lockToken">破棄するロック メッセージ インスタンスにバインドされたロック トークン。</param>
      <param name="propertiesToModify">変更するメッセージのプロパティ。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginAcceptMessageSession(System.AsyncCallback,System.Object)">
      <summary>メッセージ セッションを受け入れる非同期操作を開始します。</summary>
      <returns>メッセージ セッションを受け入れる非同期操作を参照する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
      <exception cref="T:System.TimeoutException"><see cref="T:Microsoft.ServiceBus.Messaging.ServiceBusMessagingFactorySettings.OperationTimeout" /> によって設定されたタイムアウト値を操作が超えた場合にスローされます。</exception>
      <exception cref="T:System.OperationCanceledException">クライアントが既に終了、中止、または破棄されている場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginAcceptMessageSession(System.String,System.AsyncCallback,System.Object)">
      <summary>メッセージ セッションを受け入れる非同期操作を開始します。</summary>
      <returns>メッセージ セッションを受け入れる非同期操作を参照する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="sessionId">メッセージ セッションのセッション識別子。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
      <exception cref="T:System.ArgumentException">sessionId が null、空、または空白の場合にスローされます。</exception>
      <exception cref="T:System.TimeoutException"><see cref="T:Microsoft.ServiceBus.Messaging.ServiceBusMessagingFactorySettings.OperationTimeout" /> によって設定されたタイムアウト値を操作が超えた場合にスローされます。</exception>
      <exception cref="T:System.OperationCanceledException">クライアントが既に終了、中止、または破棄されている場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginAcceptMessageSession(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>メッセージ セッションを受け入れる非同期操作を開始します。</summary>
      <returns>メッセージ セッションを受け入れる非同期操作を参照する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="sessionId">メッセージ セッションのセッション識別子。</param>
      <param name="timeout">タイムアウトになるまで、サーバーがメッセージの処理を待機する時間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
      <exception cref="T:System.ArgumentException">sessionId が null、空、または空白の場合にスローされます。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="serverWaitTime" /> が正の TimeSpan 値でない場合にスローされます。</exception>
      <exception cref="T:System.TimeoutException"><see cref="serverWaitTime" /> によって設定されたタイムアウト値を操作が超えた場合にスローされます。</exception>
      <exception cref="T:System.OperationCanceledException">クライアントが既に終了、中止、または破棄されている場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginAcceptMessageSession(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>メッセージ セッションを受け入れる非同期操作を開始します。</summary>
      <returns>メッセージ セッションを受け入れる非同期操作を参照する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="serverWaitTime">タイムアウトになるまで、サーバーがメッセージの処理を待機する時間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="serverWaitTime" /> が正の TimeSpan 値でない場合にスローされます。</exception>
      <exception cref="T:System.TimeoutException"><paramref name="serverWaitTime" /> によって設定されたタイムアウト値を操作が超えた場合にスローされます。</exception>
      <exception cref="T:System.OperationCanceledException">クライアントが既に終了、中止、または破棄されている場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginComplete(System.Guid,System.AsyncCallback,System.Object)">
      <summary>メッセージの処理を完了するための非同期操作を開始します。</summary>
      <returns>メッセージの処理を完了する非同期操作を参照する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="lockToken">ロックされたメッセージ インスタンスにバインドされたロック トークン。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
      <exception cref="T:System.TimeoutException"><see cref="T:Microsoft.ServiceBus.Messaging.ServiceBusMessagingFactorySettings.OperationTimeout" /> によって設定されたタイムアウト値を操作が超えた場合にスローされます。</exception>
      <exception cref="T:System.OperationCanceledException">クライアント エンティティが終了または中止された場合にスローされます。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException"><paramref name="lockToken" /> で表されるメッセージがメッセージ ロックを失った場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginCompleteBatch(System.Collections.Generic.IEnumerable{System.Guid},System.AsyncCallback,System.Object)">
      <summary>メッセージ バッチの処理を完了する非同期操作を開始します。</summary>
      <returns>非同期操作を参照してメッセージ バッチの処理を完了する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="lockTokens">バッチ内のロックされたメッセージに関連付けられたロック トークン。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginDeadLetter(System.Guid,System.AsyncCallback,System.Object)">
      <summary>メッセージを配信不能キューに移動する非同期操作を開始します。</summary>
      <returns>非同期操作を参照して、メッセージを配信不能キューに移動する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="lockToken">ロックされたメッセージ インスタンスにバインドされたロック トークン。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
      <exception cref="T:System.TimeoutException"><see cref="T:Microsoft.ServiceBus.Messaging.ServiceBusMessagingFactorySettings.OperationTimeout" /> によって設定されたタイムアウト値を操作が超えた場合にスローされます。</exception>
      <exception cref="T:System.OperationCanceledException">クライアント エンティティが終了または中止された場合にスローされます。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException"><paramref name="lockToken" /> で表されるメッセージがメッセージ ロックを失った場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginDeadLetter(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>メッセージを配信不能キューに移動する非同期操作を開始します。</summary>
      <returns>非同期操作を参照して、メッセージを配信不能キューに移動する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="lockToken">ロックされたメッセージ インスタンスにバインドされたロック トークン。</param>
      <param name="propertiesToModify">変更するメッセージのプロパティ。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginDeadLetter(System.Guid,System.String,System.String,System.AsyncCallback,System.Object)">
      <summary>メッセージを配信不能キューに移動する非同期操作を開始します。</summary>
      <returns>非同期操作を参照して、メッセージを配信不能キューに移動する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="lockToken">ロックされたメッセージ インスタンスにバインドされたロック トークン。</param>
      <param name="deadLetterReason">メッセージを配信不能にする理由。</param>
      <param name="deadLetterErrorDescription">メッセージの配信不能に関するエラーの説明。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
      <exception cref="T:System.TimeoutException"><see cref="T:Microsoft.ServiceBus.Messaging.ServiceBusMessagingFactorySettings.OperationTimeout" /> によって設定されたタイムアウト値を操作が超えた場合にスローされます。</exception>
      <exception cref="T:System.OperationCanceledException">クライアント エンティティが終了または中止された場合にスローされます。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException"><paramref name="lockToken" /> で表されるメッセージがメッセージ ロックを失った場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginDefer(System.Guid,System.AsyncCallback,System.Object)">
      <summary>メッセージの処理を中断する非同期操作を開始します。</summary>
      <returns>メッセージの処理を中断する非同期操作を参照する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="lockToken">ロックされたメッセージ インスタンスにバインドされたロック トークン。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
      <exception cref="T:System.TimeoutException"><see cref="T:Microsoft.ServiceBus.Messaging.ServiceBusMessagingFactorySettings.OperationTimeout" /> によって設定されたタイムアウト値を操作が超えた場合にスローされます。</exception>
      <exception cref="T:System.OperationCanceledException">クライアント エンティティが終了または中止された場合にスローされます。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException"><paramref name="lockToken" /> で表されるメッセージがメッセージ ロックを失った場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginDefer(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>メッセージの処理を中断する非同期操作を開始します。</summary>
      <returns>メッセージの処理を中断する非同期操作を参照する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="lockToken">ロックされたメッセージ インスタンスにバインドされたロック トークン。</param>
      <param name="propertiesToModify">変更するメッセージのプロパティ。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginGetMessageSessions(System.AsyncCallback,System.Object)">
      <summary>メッセージ セッションを取得する非同期操作を開始します。</summary>
      <returns>非同期操作を参照してメッセージ セッションを取得する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginGetMessageSessions(System.DateTime,System.AsyncCallback,System.Object)">
      <summary>メッセージ セッションを取得する非同期操作を開始します。</summary>
      <returns>非同期操作を参照してメッセージ セッションを取得する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="lastUpdatedTime">最後の更新日時。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginPeek(System.AsyncCallback,System.Object)">
      <summary>メッセージをピークする非同期操作を開始します。</summary>
      <returns>非同期操作を参照してメッセージをピークする <see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginPeek(System.Int64,System.AsyncCallback,System.Object)">
      <summary>メッセージをピークする非同期操作を開始します。</summary>
      <returns>非同期操作を参照してメッセージをピークする <see cref="T:System.IAsyncResult" />。</returns>
      <param name="fromSequenceNumber">メッセージをピークする場所からのシーケンス番号。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginPeekBatch(System.Int32,System.AsyncCallback,System.Object)">
      <summary>メッセージのバッチをピークする非同期操作を開始します。</summary>
      <returns>非同期操作を参照してメッセージのバッチをピークする <see cref="T:System.IAsyncResult" />。</returns>
      <param name="messageCount">ピークするメッセージの数。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginPeekBatch(System.Int64,System.Int32,System.AsyncCallback,System.Object)">
      <summary>メッセージのバッチをピークする非同期操作を開始します。</summary>
      <returns>非同期操作を参照してメッセージのバッチをピークする <see cref="T:System.IAsyncResult" />。</returns>
      <param name="fromSequenceNumber">メッセージのバッチをピークする場所からのシーケンス番号。</param>
      <param name="messageCount">ピークするメッセージの数。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginReceive(System.AsyncCallback,System.Object)">
      <summary>メッセージを受信する非同期操作を開始します。</summary>
      <returns>メッセージを受信する非同期操作を参照する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
      <exception cref="T:System.OperationCanceledException">クライアント エンティティが終了または中止された場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginReceive(System.Int64,System.AsyncCallback,System.Object)">
      <summary>メッセージを受信する非同期操作を開始します。</summary>
      <returns>メッセージを受信する非同期操作を参照する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="sequenceNumber">Service Bus によってメッセージに割り当てられた一意の番号。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
      <exception cref="T:System.OperationCanceledException">クライアント エンティティが終了または中止された場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>メッセージを受信する非同期操作を開始します。</summary>
      <returns>メッセージを受信する非同期操作を参照する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="serverWaitTime">タイムアウトになるまで、サーバーがメッセージの処理を待機する時間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="serverWaitTime" /> が負の場合にスローされます。</exception>
      <exception cref="T:System.OperationCanceledException">クライアント エンティティが終了または中止された場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginReceiveBatch(System.Collections.Generic.IEnumerable{System.Int64},System.AsyncCallback,System.Object)">
      <summary>メッセージ バッチを受信する非同期操作を開始します。</summary>
      <returns>非同期操作を参照してメッセージ バッチを受信する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="sequenceNumbers">バッチ内のメッセージに関連付けられたシーケンス番号。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginReceiveBatch(System.Int32,System.AsyncCallback,System.Object)">
      <summary>メッセージ バッチを受信する非同期操作を開始します。</summary>
      <returns>非同期操作を参照してメッセージ バッチを受信する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="messageCount">バッチで受信するメッセージの最大数。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginReceiveBatch(System.Int32,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>メッセージ バッチを受信する非同期操作を開始します。</summary>
      <returns>非同期操作を参照してメッセージ バッチを受信する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="messageCount">バッチで受信するメッセージの最大数。</param>
      <param name="serverWaitTime">タイムアウトの前にサーバーがメッセージ バッチを待機する期間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginSend(Microsoft.ServiceBus.Messaging.BrokeredMessage,System.AsyncCallback,System.Object)">
      <summary>メッセージを送信する非同期操作を開始します。</summary>
      <returns>非同期操作を参照してメッセージを送信する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="message">送信するメッセージ。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
      <exception cref="T:System.TimeoutException">操作がタイムアウトしたときにスローされます。タイムアウト期間が初期化されても、タイムアウト値が比較的低い場合は、この例外を避けるために <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" /> で <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> の値を増やす必要があるかもしれません。</exception>
      <exception cref="T:System.ArgumentException"><paramref name="BrokeredMessage" /> が nullの場合にスローされます。</exception>
      <exception cref="T:System.InvalidOperationException"><paramref name="message" /> がすでに QueueClient または <see cref="T:Microsoft.ConnectedServices.Sdk.Client.MessageSender" /> によってすでに 1 回送信されている場合にスローされます。</exception>
      <exception cref="T:System.NotSupportedException">トピック/サブスクリプションが送信操作をサポートしていない場合にスローされます。つまり、配信不能キューは送信操作をサポートしていません。</exception>
      <exception cref="T:System.OperationCanceledException">クライアント エンティティが終了または中止された場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginSendBatch(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage},System.AsyncCallback,System.Object)">
      <summary>メッセージ バッチを送信する非同期操作を開始します。</summary>
      <returns>非同期操作を参照してメッセージ バッチを送信する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="messages">送信するメッセージ バッチ。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Complete(System.Guid)">
      <summary>メッセージの処理を完了します。</summary>
      <param name="lockToken">ロックされたメッセージ インスタンスにバインドされたロック トークン。</param>
      <exception cref="T:System.TimeoutException">以下によって設定されたタイムアウト値を操作が超えた場合にスローされます: <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /></exception>
      <exception cref="T:System.OperationCanceledException">クライアント エンティティが終了または中止された場合にスローされます。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException"><paramref name="lockToken" /> で表されるメッセージがメッセージ ロックを失った場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.CompleteAsync(System.Guid)">
      <summary>メッセージの処理を非同期的に完了します。</summary>
      <returns>非同期操作。</returns>
      <param name="lockToken">ロックされたメッセージ インスタンスにバインドされたロック トークン。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.CompleteBatch(System.Collections.Generic.IEnumerable{System.Guid})">
      <summary>メッセージ バッチの処理を完了します。</summary>
      <param name="lockTokens">バッチ内のロックされたメッセージに関連付けられたロック トークン。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.CompleteBatchAsync(System.Collections.Generic.IEnumerable{System.Guid})">
      <summary>メッセージ バッチの処理を非同期的に完了します。</summary>
      <returns>非同期操作。</returns>
      <param name="lockTokens">バッチ内のロックされたメッセージに関連付けられたロック トークン。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Create(System.String)">
      <summary>指定されたパスで <see cref="T:Microsoft.ServiceBus.Messaging.QueueClient" /> の新しいコピーを作成します。</summary>
      <returns>作成された <see cref="T:Microsoft.ServiceBus.Messaging.QueueClient" />。</returns>
      <param name="path">パス。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Create(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)">
      <summary>指定されたパスとモードで <see cref="T:Microsoft.ServiceBus.Messaging.QueueClient" /> の新しいコピーを作成します。</summary>
      <returns>作成された <see cref="T:Microsoft.ServiceBus.Messaging.QueueClient" />。</returns>
      <param name="path">パス。</param>
      <param name="mode">モード。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.CreateFromConnectionString(System.String,System.String)">
      <summary>指定されたパスで接続文字列から <see cref="T:Microsoft.ServiceBus.Messaging.QueueClient" /> の新しいコピーを作成します。</summary>
      <returns>作成された <see cref="T:Microsoft.ServiceBus.Messaging.QueueClient" />。</returns>
      <param name="connectionString">使用された接続文字列。</param>
      <param name="path">パス。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.CreateFromConnectionString(System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)">
      <summary>指定されたパスとモードで接続文字列から <see cref="T:Microsoft.ServiceBus.Messaging.QueueClient" /> の新しいコピーを作成します。</summary>
      <returns>作成された <see cref="T:Microsoft.ServiceBus.Messaging.QueueClient" />。</returns>
      <param name="connectionString">接続文字列。</param>
      <param name="path">パス。</param>
      <param name="mode">モード。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.DeadLetter(System.Guid)">
      <summary>配信されていないメッセージを配信不能キューに移動します。</summary>
      <param name="lockToken">ロックされたメッセージ インスタンスにバインドされたロック トークン。</param>
      <exception cref="T:System.TimeoutException">以下によって設定されたタイムアウト値を操作が超えた場合にスローされます: <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /></exception>
      <exception cref="T:System.OperationCanceledException">クライアント エンティティが終了または中止された場合にスローされます。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException"><paramref name="lockToken" /> で表されるメッセージがメッセージ ロックを失った場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.DeadLetter(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>配信されていないメッセージを配信不能キューに移動します。</summary>
      <param name="lockToken">ロックされたメッセージ インスタンスにバインドされたロック トークン。</param>
      <param name="propertiesToModify">変更するメッセージのプロパティ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.DeadLetter(System.Guid,System.String,System.String)">
      <summary>配信されていないメッセージを配信不能キューに移動します。</summary>
      <param name="lockToken">ロックされたメッセージ インスタンスにバインドされたロック トークン。</param>
      <param name="deadLetterReason">メッセージを配信不能にする理由。</param>
      <param name="deadLetterErrorDescription">メッセージの配信不能に関するエラーの説明。</param>
      <exception cref="T:System.TimeoutException">以下によって設定されたタイムアウト値を操作が超えた場合にスローされます: <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /></exception>
      <exception cref="T:System.OperationCanceledException">クライアント エンティティが終了または中止された場合にスローされます。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException"><paramref name="lockToken" /> で表されるメッセージがメッセージ ロックを失った場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.DeadLetterAsync(System.Guid)">
      <summary>配信されていないメッセージを配信不能キューに非同期的に移動します。</summary>
      <returns>非同期操作。</returns>
      <param name="lockToken">ロックされたメッセージ インスタンスにバインドされたロック トークン。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.DeadLetterAsync(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>配信されていないメッセージを配信不能キューに非同期的に移動します。</summary>
      <returns>非同期操作。</returns>
      <param name="lockToken">ロックされたメッセージ インスタンスにバインドされたロック トークン。</param>
      <param name="propertiesToModify">変更するメッセージのプロパティ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.DeadLetterAsync(System.Guid,System.String,System.String)">
      <summary>配信されていないメッセージを配信不能キューに非同期的に移動します。</summary>
      <returns>非同期操作。</returns>
      <param name="lockToken">ロックされたメッセージ インスタンスにバインドされたロック トークン。</param>
      <param name="deadLetterReason">メッセージを配信不能にする理由。</param>
      <param name="deadLetterErrorDescription">メッセージの配信不能に関するエラーの説明。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Defer(System.Guid)">
      <summary>メッセージの処理を中断します。</summary>
      <param name="lockToken">ロックされたメッセージ インスタンスにバインドされたロック トークン。</param>
      <exception cref="T:System.TimeoutException">以下によって設定されたタイムアウト値を操作が超えた場合にスローされます: <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /></exception>
      <exception cref="T:System.OperationCanceledException">クライアント エンティティが終了または中止された場合にスローされます。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException"><paramref name="lockToken" /> で表されるメッセージがメッセージ ロックを失った場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Defer(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>メッセージの処理を中断します。</summary>
      <param name="lockToken">ロックされたメッセージ インスタンスにバインドされたロック トークン。</param>
      <param name="propertiesToModify">変更するメッセージのプロパティ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.DeferAsync(System.Guid)">
      <summary>メッセージの処理を非同期的に中断します。</summary>
      <returns>非同期操作。</returns>
      <param name="lockToken">ロックされたメッセージ インスタンスにバインドされたロック トークン。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.DeferAsync(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>メッセージの処理を非同期的に中断します。</summary>
      <returns>非同期操作。</returns>
      <param name="lockToken">ロックされたメッセージ インスタンスにバインドされたロック トークン。</param>
      <param name="propertiesToModify">変更するメッセージのプロパティ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndAbandon(System.IAsyncResult)">
      <summary>非同期操作を終了して、メッセージを破棄し、ロックを放棄します。</summary>
      <param name="result">非同期メッセージ放棄操作の状態を表す <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndAcceptMessageSession(System.IAsyncResult)">
      <summary>単一のトランザクションで処理するための関連メッセージのグループ化を可能にするメッセージ セッションを受け入れる非同期操作を終了します。</summary>
      <returns>単一のトランザクションで処理するための関連メッセージをグループ化できる <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" />。</returns>
      <param name="result">非同期メッセージ セッション受け入れ操作の状態を表す <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndComplete(System.IAsyncResult)">
      <summary>メッセージの処理を完了する非同期操作を終了します。</summary>
      <param name="result">メッセージの処理を完了する非同期操作を参照する <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndCompleteBatch(System.IAsyncResult)">
      <summary>メッセージ バッチの処理を完了する非同期操作を終了します。</summary>
      <param name="result">非同期操作を参照してメッセージ バッチの処理を完了する <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndDeadLetter(System.IAsyncResult)">
      <summary>メッセージを配信不能キューに移動する非同期操作を終了します。</summary>
      <param name="result">メッセージを配信不能キューに移動する非同期操作の状態を表す <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndDefer(System.IAsyncResult)">
      <summary>メッセージの処理を中断する非同期操作を終了します。</summary>
      <param name="result">メッセージの処理を中断する非同期操作の状態を表す <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndGetMessageSessions(System.IAsyncResult)">
      <summary>メッセージ セッションを取得する非同期操作を終了します。</summary>
      <returns>メッセージ セッション。</returns>
      <param name="result">非同期操作を参照してメッセージ セッションを取得する <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndPeek(System.IAsyncResult)">
      <summary>メッセージをピークする非同期操作を終了します。</summary>
      <returns>ブローカー メッセージ。</returns>
      <param name="result">メッセージをピークする非同期操作の状態を表す <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndPeekBatch(System.IAsyncResult)">
      <summary>メッセージのバッチをピークする非同期操作を終了します。</summary>
      <returns>メッセージのバッチ。</returns>
      <param name="result">メッセージのバッチをピークする非同期操作の状態を表す <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndReceive(System.IAsyncResult)">
      <summary>メッセージを受信する非同期操作を終了します。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> を返します。</returns>
      <param name="result">メッセージを受信する非同期操作の状態を表す <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndReceiveBatch(System.IAsyncResult)">
      <summary>メッセージ バッチを受信する非同期操作を終了します。</summary>
      <returns>メッセージ バッチ。</returns>
      <param name="result">非同期操作を参照してメッセージ バッチを受信する <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndSend(System.IAsyncResult)">
      <summary>メッセージを送信する非同期操作を終了します。</summary>
      <param name="result">メッセージを送信する非同期操作の状態を表す <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndSendBatch(System.IAsyncResult)">
      <summary>メッセージ バッチを送信する非同期操作を終了します。</summary>
      <param name="result">非同期操作を参照してメッセージ バッチを送信する <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.FormatDeadLetterPath(System.String)">
      <summary>指定された配信不能キューのパスから書式名を作成します。</summary>
      <returns>指定された配信不能キューのパスの書式名構築から得られた <see cref="T:System.String" />。</returns>
      <param name="queuePath">配信不能キューへのパス。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.GetMessageSessions">
      <summary>メッセージ セッションを取得し、キュー上でセッションを参照できるようにします。</summary>
      <returns>メッセージ セッション。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.GetMessageSessions(System.DateTime)">
      <summary>セッションの状態が <paramref name="lastUpdatedTime" /> 以降に更新されたメッセージ セッションをすべて取得します。</summary>
      <returns>メッセージ セッション。</returns>
      <param name="lastUpdatedTime">セッションが最後に更新された時刻。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.GetMessageSessionsAsync">
      <summary>メッセージ セッションを非同期的に取得し、キュー上のセッションを参照できるようにします。</summary>
      <returns>非同期操作。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.GetMessageSessionsAsync(System.DateTime)">
      <summary>セッションの状態が <paramref name="lastUpdatedTime" /> 以降に更新されたメッセージ セッションすべてを非同期的に取得します。</summary>
      <returns>非同期操作。</returns>
      <param name="lastUpdatedTime">セッションが最後に更新された時刻。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueClient.MessagingFactory">
      <summary>メッセージング ファクトリを取得または設定します。</summary>
      <returns>メッセージング ファクトリ。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueClient.Mode">
      <summary>受信したメッセージを処理する際にメッセージ受信モードを取得します。</summary>
      <returns>受信したメッセージを処理する際のメッセージ <see cref="T:Microsoft.ServiceBus.Messaging.ReceiveMode" />。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnAbort">
      <summary>Abort イベントの呼び出すと実行されます。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnBeginAcceptMessageSession(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>BeginAcceptMessageSession 操作を呼び出すと実行されます。</summary>
      <returns>メッセージ セッションを受け入れる非同期操作を参照する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="sessionId">メッセージ セッションのセッション識別子。</param>
      <param name="receiveMode">受信メッセージを使用して処理する場合の受信モード。</param>
      <param name="serverWaitTime">サーバーの待機時間。</param>
      <param name="timeout">タイムアウトになるまで、サーバーがメッセージの処理を待機する時間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Close 操作を呼び出すと実行されます。</summary>
      <returns>非同期 <see cref="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptSessionReceiver" /> を参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="timeout">Close 操作がタイムアウトするまでの最大時間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">受信操作に関する情報を含むユーザー定義オブジェクト。このオブジェクトは、操作が完了すると EndClose デリゲートに渡されます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnBeginCreateReceiver(Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>受信者作成開始アクションを実行します。</summary>
      <returns>非同期 <see cref="M:Microsoft.ServiceBus.Messaging.QueueClient.CreateReceiver" /> を参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="receiveMode">メッセージ <see cref="T:Microsoft.ServiceBus.Messaging.ReceiveMode" /> 受信モード。</param>
      <param name="timeout">この操作がタイムアウトするまでの最大時間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">受信操作に関する情報を含むユーザー定義オブジェクト。このオブジェクトは、操作の完了時に <see cref="M:Microsoft.ServiceBus.Messaging.QueueClient.EndCreateReceiver(System.IAsyncResult)" /> デリゲートに渡されます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnBeginCreateReceiver(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>受信者作成開始アクションを実行します。</summary>
      <returns>非同期 <see cref="M:Microsoft.ServiceBus.Messaging.QueueClient.CreateReceiver" /> を参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="subQueueName">サブキューの名前。</param>
      <param name="receiveMode">メッセージ <see cref="T:Microsoft.ServiceBus.Messaging.ReceiveMode" /> 受信モード。</param>
      <param name="timeout">この操作がタイムアウトするまでの最大時間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">受信操作に関する情報を含むユーザー定義オブジェクト。このオブジェクトは、操作の完了時に <see cref="M:Microsoft.ServiceBus.Messaging.QueueClient.EndCreateReceiver(System.IAsyncResult)" /> デリゲートに渡されます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnBeginCreateSender(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>送信者作成開始アクションを実行します。</summary>
      <returns>非同期 <see cref="M:Microsoft.ServiceBus.Messaging.QueueClient.CreateSender" /> を参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="timeout">この操作がタイムアウトするまでの最大時間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">受信操作に関する情報を含むユーザー定義オブジェクト。このオブジェクトは、操作の完了時に <see cref="M:Microsoft.ServiceBus.Messaging.QueueClient.EndCreateSender(System.IAsyncResult)" /> デリゲートに渡されます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnBeginGetMessageSessions(System.DateTime,System.AsyncCallback,System.Object)">
      <summary>BeginGetMessageSessions アクションを実行します。</summary>
      <returns>非同期操作を参照してメッセージ セッションを取得する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="lastUpdatedTime">最後の更新日時。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnClose(System.TimeSpan)">
      <summary>Close アクションを呼び出すと実行されます。</summary>
      <param name="timeout">Close 操作がタイムアウトするまでの最大時間。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnEndAcceptMessageSession(System.IAsyncResult)">
      <summary>EndAcceptMessageSession 操作を呼び出すと実行されます。</summary>
      <returns>単一のトランザクションで処理するための関連メッセージをグループ化できる <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" />。</returns>
      <param name="result">非同期メッセージ セッション受け入れ操作の状態を表す <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnEndClose(System.IAsyncResult)">
      <summary>クローズ終了アクションを実行します。</summary>
      <param name="result">非同期 <see cref="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptSessionReceiver" /> 操作の結果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnEndCreateReceiver(System.IAsyncResult)">
      <summary>受信者作成終了アクションを実行します。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.Messaging.MessageReceiver" />オブジェクト。</returns>
      <param name="result">非同期 <see cref="M:Microsoft.ServiceBus.Messaging.QueueClient.EndCreateReceiver(System.IAsyncResult)" /> 操作の結果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnEndCreateSender(System.IAsyncResult)">
      <summary>送信者作成終了アクションを実行します。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.Messaging.MessageSender" />オブジェクト。</returns>
      <param name="result"><see cref="M:Microsoft.ServiceBus.Messaging.QueueClient.CreateSender" /> を参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnEndGetMessageSessions(System.IAsyncResult)">
      <summary>メッセージ取得終了アクションを実行します。</summary>
      <returns>単一のトランザクションで処理するための関連メッセージをグループ化できる <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" />。</returns>
      <param name="result">セッションの結果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnMessage(System.Action{Microsoft.ServiceBus.Messaging.BrokeredMessage})">
      <summary>イベント駆動型メッセージ ポンプでメッセージを処理します。</summary>
      <param name="callback">操作が完了したときに呼び出すメソッド。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnMessage(System.Action{Microsoft.ServiceBus.Messaging.BrokeredMessage},Microsoft.ServiceBus.Messaging.OnMessageOptions)">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.OnMessageOptions" /> オプションの特定のセットを使い、イベント駆動型メッセージ ポンプ内でメッセージを処理します。</summary>
      <param name="callback">操作が完了したときに呼び出すメソッド。</param>
      <param name="onMessageOptions">メッセージ ポンプをインスタンス化する <see cref="T:Microsoft.ServiceBus.Messaging.OnMessageOptions" /> オプションを指定します。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnMessageAsync(System.Func{Microsoft.ServiceBus.Messaging.BrokeredMessage,System.Threading.Tasks.Task})">
      <summary>メッセージを非同期的に処理します。</summary>
      <param name="callback">操作が完了したときに呼び出すメソッド。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnMessageAsync(System.Func{Microsoft.ServiceBus.Messaging.BrokeredMessage,System.Threading.Tasks.Task},Microsoft.ServiceBus.Messaging.OnMessageOptions)">
      <summary>メッセージを非同期的に処理します。</summary>
      <param name="callback">操作が完了したときに呼び出すメソッド。</param>
      <param name="onMessageOptions">メッセージ オプションを呼び出します。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueClient.Path">
      <summary>キューの完全なパス名を取得または設定します。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> ベース アドレスに対するキュー パス。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Peek">
      <summary>キュー内の最初のメッセージを削除せずに返します。</summary>
      <returns>ブローカー メッセージ。すべてのプロパティとメッセージ本文を返します。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Peek(System.Int64)">
      <summary>キュー内の最初のメッセージを削除せずに返します。</summary>
      <returns>ブローカー メッセージ。</returns>
      <param name="fromSequenceNumber">メッセージを参照する開始点。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.PeekAsync">
      <summary>キュー内の最初のメッセージを削除せず、非同期的に返します。</summary>
      <returns>非同期操作。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.PeekAsync(System.Int64)">
      <summary>キュー内の最初のメッセージを削除せず、非同期的に返します。</summary>
      <returns>非同期操作。</returns>
      <param name="fromSequenceNumber">メッセージをピークする場所からのシーケンス番号。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.PeekBatch(System.Int32)">
      <summary>メッセージのバッチをピークします。</summary>
      <returns>ピークされたメッセージのバッチ。すべてのプロパティとメッセージ本文を返します。</returns>
      <param name="messageCount">メッセージの数。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.PeekBatch(System.Int64,System.Int32)">
      <summary>メッセージのバッチをピークします。</summary>
      <returns>ピークされたメッセージのバッチ。</returns>
      <param name="fromSequenceNumber">メッセージのバッチを参照する開始点。</param>
      <param name="messageCount">メッセージの数。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.PeekBatchAsync(System.Int32)">
      <summary>メッセージのバッチを非同期的にピークします。</summary>
      <returns>非同期操作。</returns>
      <param name="messageCount">メッセージの数。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.PeekBatchAsync(System.Int64,System.Int32)">
      <summary>メッセージのバッチを非同期的にピークします。</summary>
      <returns>非同期操作。</returns>
      <param name="fromSequenceNumber">メッセージのバッチをピークする場所からのシーケンス番号。</param>
      <param name="messageCount">メッセージの数。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueClient.PrefetchCount">
      <summary>キュー受信者が同時に要求できるメッセージの数を取得または設定します。</summary>
      <returns>キュー受信者が同時に要求できるメッセージの数。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Receive">
      <summary><see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalReceiver" /> を使用してメッセージを受信します。</summary>
      <returns>受信したメッセージを表す <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />。受信可能なメッセージがない場合、メソッドは NULL を返します。その後、操作を再試行できます。</returns>
      <exception cref="T:System.OperationCanceledException">クライアント エンティティが終了または中止された場合にスローされます。</exception>
      <exception cref="T:System.TimeoutException">メッセージ受信操作がタイムアウトした場合にスローされます。</exception>
      <exception cref="T:System.UnauthorizedAccessException">I/O またはセキュリティ エラーが発生した場合にスローされます。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">操作に関連付けられているメッセージング エンティティが存在しない場合、または削除された場合にスローされます。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">ユーザー コードが予期しない操作を実行した場合、または Service Bus ゲートウェイがダウンしている場合にスローされます。実際のエラーについては、例外メッセージを確認してください。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Receive(System.Int64)">
      <summary><see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalReceiver" /> を使用してメッセージを受信します。</summary>
      <returns>受信したメッセージを表す <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />。受信可能なメッセージがない場合、メソッドは NULL を返します。その後、操作を再試行できます。</returns>
      <param name="sequenceNumber">受信する遅延メッセージのシーケンス番号。</param>
      <exception cref="T:System.OperationCanceledException">クライアント エンティティが終了または中止された場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Receive(System.TimeSpan)">
      <summary><see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalReceiver" /> を使用してメッセージを受信します。</summary>
      <returns>受信したメッセージを表す <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />。受信可能なメッセージがない場合、メソッドは NULL を返します。その後、操作を再試行できます。</returns>
      <param name="serverWaitTime">タイムアウトになる前にサーバーがメッセージの受信を待機する時間。</param>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="serverWaitTime" /> が負の場合にスローされます。</exception>
      <exception cref="T:System.TimeoutException">メッセージ受信操作がタイムアウトした場合にスローされます。</exception>
      <exception cref="T:System.OperationCanceledException">クライアント エンティティが終了または中止された場合にスローされます。</exception>
      <exception cref="T:System.UnauthorizedAccessException">I/O またはセキュリティ エラーが発生した場合にスローされます。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">操作に関連付けられているメッセージング エンティティが存在しない場合、または削除された場合にスローされます。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">ユーザー コードが予期しない操作を実行した場合、または Service Bus ゲートウェイがダウンしている場合にスローされます。実際のエラーについては、例外メッセージを確認してください。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.ReceiveAsync">
      <summary><see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalReceiver" /> を使用してメッセージを非同期的に受信します。</summary>
      <returns>非同期操作。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.ReceiveAsync(System.Int64)">
      <summary><see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalReceiver" /> を使用してメッセージを非同期的に受信します。</summary>
      <returns>非同期操作。</returns>
      <param name="sequenceNumber">受信する遅延メッセージのシーケンス番号。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.ReceiveAsync(System.TimeSpan)">
      <summary><see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalReceiver" /> を使用してメッセージを非同期的に受信します。</summary>
      <returns>非同期操作。</returns>
      <param name="serverWaitTime">タイムアウトになる前にサーバーがメッセージの受信を待機する時間。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.ReceiveBatch(System.Collections.Generic.IEnumerable{System.Int64})">
      <summary>メッセージ バッチを受信します。</summary>
      <returns>メッセージ バッチ。</returns>
      <param name="sequenceNumbers">バッチ内のメッセージに関連付けられたシーケンス番号。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.ReceiveBatch(System.Int32)">
      <summary>メッセージ バッチを受信します。</summary>
      <returns>メッセージ バッチ。</returns>
      <param name="messageCount">バッチ内で返されるメッセージの最大数。これは近似値なので、 メッセージの数が <paramref name="messageCount" /> を超えていても、返されるメッセージの数が少なくなる可能性があります。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.ReceiveBatch(System.Int32,System.TimeSpan)">
      <summary>メッセージ バッチを受信します。</summary>
      <returns>メッセージ バッチ。</returns>
      <param name="messageCount">バッチで受信するメッセージの最大数。</param>
      <param name="serverWaitTime">タイムアウトの前にサーバーがメッセージ バッチを待機する期間。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.ReceiveBatchAsync(System.Collections.Generic.IEnumerable{System.Int64})">
      <summary>メッセージ バッチを非同期的に受信します。</summary>
      <returns>非同期操作。</returns>
      <param name="sequenceNumbers">バッチ内のメッセージに関連付けられたシーケンス番号。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.ReceiveBatchAsync(System.Int32)">
      <summary>メッセージ バッチを非同期的に受信します。</summary>
      <returns>非同期操作。</returns>
      <param name="messageCount">バッチ内で返されるメッセージの最大数。これは近似値なので、 メッセージの数が <paramref name="messageCount" /> を超えていても、返されるメッセージの数が少なくなる可能性があります。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.ReceiveBatchAsync(System.Int32,System.TimeSpan)">
      <summary>メッセージ バッチを非同期的に受信します。</summary>
      <returns>非同期操作。</returns>
      <param name="messageCount">バッチで受信するメッセージの最大数。</param>
      <param name="serverWaitTime">タイムアウトの前にサーバーがメッセージ バッチを待機する期間。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.RegisterSessionHandler(System.Type)">
      <summary>セッション ハンドラーを特定のタイプで登録します。</summary>
      <param name="handlerType">ハンドラーのタイプ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.RegisterSessionHandler(System.Type,Microsoft.ServiceBus.Messaging.SessionHandlerOptions)">
      <summary>セッション ハンドラーを特定のタイプおよびハンドラー オプションで登録します。</summary>
      <param name="handlerType">ハンドラーのタイプ。</param>
      <param name="options">セッション ハンドラー オプション。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.RegisterSessionHandlerAsync(System.Type)">
      <summary>セッション ハンドラーを特定のタイプで非同期に登録します。</summary>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
      <param name="handlerType">ハンドラーのタイプ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.RegisterSessionHandlerAsync(System.Type,Microsoft.ServiceBus.Messaging.SessionHandlerOptions)">
      <summary>セッション ハンドラーを特定のタイプおよびハンドラー オプションで非同期に登録します。</summary>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
      <param name="handlerType">ハンドラーのタイプ。</param>
      <param name="options">セッション ハンドラー オプション。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.RegisterSessionHandlerFactory(Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory,Microsoft.ServiceBus.Messaging.SessionHandlerOptions)">
      <summary>指定されたオプションを使用して、メッセージ セッション ハンドラー ファクトリを登録します。</summary>
      <param name="factory">登録するハンドラー ファクトリ。</param>
      <param name="options">ハンドラー オプション。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.RegisterSessionHandlerFactory(Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory,Microsoft.ServiceBus.Messaging.SessionHandlerOptions)">
      <summary>指定されたオプションを使用して、メッセージ セッション ハンドラー ファクトリを登録します。</summary>
      <param name="factory">登録するハンドラー ファクトリ。</param>
      <param name="options">ハンドラー オプション。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.RegisterSessionHandlerFactoryAsync(Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory,Microsoft.ServiceBus.Messaging.SessionHandlerOptions)">
      <summary>メッセージ セッション ハンドラー ファクトリを非同期で登録します。</summary>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
      <param name="factory">登録するハンドラー ファクトリ。</param>
      <param name="options">ハンドラー オプション。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.RegisterSessionHandlerFactoryAsync(Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory,Microsoft.ServiceBus.Messaging.SessionHandlerOptions)">
      <summary>メッセージ セッション ハンドラー ファクトリを非同期で登録します。</summary>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
      <param name="factory">登録するハンドラー ファクトリ。</param>
      <param name="options">ハンドラー オプション。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Send(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary><see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalSender" /> を使用してメッセージを送信します。</summary>
      <param name="message">送信するメッセージ。</param>
      <exception cref="T:System.TimeoutException">操作がタイムアウトしたときにスローされます。タイムアウト期間が初期化されても、タイムアウト値が比較的低い場合は、この例外を避けるために <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" /> で <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> の値を増やす必要があるかもしれません。</exception>
      <exception cref="T:System.ArgumentException"><paramref name="BrokeredMessage" /> が nullの場合にスローされます。</exception>
      <exception cref="T:System.InvalidOperationException"><paramref name="message" /> がすでに QueueClient または <see cref="T:Microsoft.ConnectedServices.Sdk.Client.MessageSender" /> によってすでに 1 回送信されている場合にスローされます。</exception>
      <exception cref="T:System.InvalidOperationException">ポイントされたトピック/サブスクリプションが送信操作をサポートしていない場合にスローされます。つまり、配信不能キューは送信操作をサポートしていません。</exception>
      <exception cref="T:System.OperationCanceledException">クライアント エンティティが終了または中止された場合にスローされます。</exception>
      <exception cref="T:System.UnauthorizedAccessException">I/O エラーまたはセキュリティ エラーがある場合にスローされます。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">シリアル化または逆シリアル化中にエラーが発生した場合にスローされます。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">キューが存在しない場合にスローされます。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">メッセージング エラーがある場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.SendAsync(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary><see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalSender" /> を使用してメッセージを非同期的に送信します。</summary>
      <returns>非同期操作。</returns>
      <param name="message">送信するメッセージ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.SendBatch(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage})">
      <summary>ブローカー メッセージのセットを送信します (バッチ処理用)。</summary>
      <param name="messages">送信するブローカー メッセージのコレクション。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.SendBatchAsync(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage})">
      <summary>一連のブローカー メッセージを非同期的に送信します (バッチ処理用)。</summary>
      <returns>非同期操作。</returns>
      <param name="messages">送信するブローカー メッセージのコレクション。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.QueueDescription">
      <summary>キューのメタデータ記述を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueDescription.#ctor(System.String)">
      <summary>指定された相対パスで <see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="path">サービス名前空間のベース アドレスに対するキューのパス。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.AccessedAt">
      <summary>メッセージが最後に送信された時刻、またはこのキューへの受信が最後に要求された時刻を取得します。</summary>
      <returns>メッセージが最後に送信された時刻、またはこのキューへの受信が最後に要求された時刻。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.Authorization">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" /> を取得します。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.AutoDeleteOnIdle">
      <summary>その後にキューが自動的に削除される <see cref="T:System.TimeSpan" /> アイドル間隔を取得または設定します。最小期間は 5 分です。</summary>
      <returns>キューのアイドル時間の自動削除。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.AvailabilityStatus">
      <summary>キューのエンティティの可用性ステータスを取得します。</summary>
      <returns>キューのエンティティの可用性ステータス。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.CreatedAt">
      <summary>メッセージが作成された正確な時刻を取得します。</summary>
      <returns>メッセージが作成された時刻。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.DefaultMessageTimeToLive">
      <summary>ライブ値への既定のメッセージ時間を取得または設定します。これはメッセージの有効期限が切れる期間で、メッセージが Service Bus に送信された時点で始まります。<see cref="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.TimeToLive" /> がメッセージ自体で設定されていない場合に使用される既定値です。TimeToLive 値より古いメッセージは期限切れになり、メッセージ ストアに保持されなくなります。サブスクライバーは期限切れのメッセージを受信できません。メッセージの TimeToLive 値は、ここで指定された値よりも低くできますが、既定では TimeToLive は <see cref="T:System.TimeSpan.MaxValue" /> に設定されています。したがって、このプロパティは、メッセージに適用されるライブ値の既定時間になります。</summary>
      <returns>ライブ値への既定のメッセージ時間。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.DuplicateDetectionHistoryTimeWindow">
      <summary>重複検出履歴の期間を定義する <see cref="T:System.TimeSpan" /> 構造を取得または設定します。既定値は 10 分です。</summary>
      <returns>重複検出履歴の時間枠を表す <see cref="T:System.TimeSpan" /> 構造。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.EnableBatchedOperations">
      <summary>サーバー側のバッチ処理操作が有効になっているかどうかを示す値を取得または設定します。</summary>
      <returns>バッチ処理された操作が有効になっている場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.EnableDeadLetteringOnMessageExpiration">
      <summary>メッセージの有効期限が切れたときに、このキューに配信不能サポートがあるかどうかを示す値を取得または設定します。</summary>
      <returns>メッセージの有効期限が切れたときにキューに配信不能サポートがある場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.EnableExpress">
      <summary>キューを複数のメッセージ ブローカーに分割するかどうかを取得または設定します。高速キューは、永続的なストレージに書き込む前にメッセージを一時的にメモリに保持します。</summary>
      <returns>キューを複数のメッセージ ブローカーに分割できる場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.EnablePartitioning">
      <summary>複数のメッセージ ブローカーでキューを分割できるかどうかを示す値を取得または設定します。</summary>
      <returns>キューを複数のメッセージ ブローカーで分割できる場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.ForwardDeadLetteredMessagesTo">
      <summary>配信不能メッセージが転送される受信者へのパスを取得または設定します。</summary>
      <returns>配信不能メッセージが転送される受信者へのパス。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.ForwardTo">
      <summary>メッセージが転送される受信者へのパスを取得または設定します。</summary>
      <returns>メッセージが転送される受信者へのパス。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.IsAnonymousAccessible">
      <summary>メッセージが匿名アクセス可能かどうかを示す値を取得または設定します。</summary>
      <returns>メッセージが匿名でアクセス可能な場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration">
      <summary>ピーク ロックの期間を取得または設定します。これは、メッセージが他の受信者に対してロックされる時間です。<see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration" /> の最大値は 5 分、既定値は 1 分です。</summary>
      <returns>ロックの期間。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.MaxDeliveryCount">
      <summary>最大配信回数を取得または設定します。この回数の後、メッセージは自動的に配信不能になります。</summary>
      <returns>最大配信回数。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.MaxSizeInMegabytes">
      <summary>キューの最大サイズをメガバイト単位で取得または設定します。これはキューで可能なメモリのサイズです。</summary>
      <returns>キューの最大サイズ (メガバイト)。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.MessageCount">
      <summary>キュー内のメッセージの数を取得します。</summary>
      <returns>メッセージの数。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.MessageCountDetails">
      <summary>キューのメッセージの詳細を取得します。</summary>
      <returns>アクティブなメッセージ、配信不能、スケジュールされたメッセージ、他のキューやサブスクリプション、トピックに転送されたメッセージ、および配信不能キューに転送されたメッセージの数とともに <see cref="T:Microsoft.ServiceBus.Messaging.MessageCountDetails" /> を返します。</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.QueueDescription.MessageTimeToLiveDefaultValue">
      <summary>ライブ既定値までのメッセージ時間を指定します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.Path">
      <summary>キューの名前を取得または設定します。</summary>
      <returns>キューの名前。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.RequiresDuplicateDetection">
      <summary>このキューで重複検出が必要かどうかを示す値を取得または設定します。</summary>
      <returns>このキューで重複検出が必要な場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.RequiresSession">
      <summary>キューがセッションの概念をサポートしているかどうかを示す値を取得または設定します。</summary>
      <returns>受信側のアプリケーションが <see cref="T:Microsoft.ServiceBus.Messaging.SessionReceiver" /> を介してキューからのみ受け取ることができる場合は true、キューが <see cref="T:Microsoft.ServiceBus.Messaging.SessionReceiver" /> を使用して受け取れない場合は false になります。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.SizeInBytes">
      <summary>キューのサイズをバイトで取得します。</summary>
      <returns>キューのサイズ。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.Status">
      <summary>キューの現在の状態を取得または設定します (有効または無効)。エンティティを無効にすると、そのエンティティはメッセージを送受信できません。</summary>
      <returns>キューの現在の状態。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.SupportOrdering">
      <summary>キューが順序付けをサポートしているかどうかを示す値を取得または設定します。</summary>
      <returns>キューが順序付けをサポートしている場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.UpdatedAt">
      <summary>メッセージが更新された正確な時刻を取得します。</summary>
      <returns>メッセージが更新された時刻。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.UserMetadata">
      <summary>ユーザー メタデータを取得または設定します。</summary>
      <returns>ユーザー メタデータ。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.QuotaExceededException">
      <summary>クォータ超過エラーを通知するためにスローされる例外。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QuotaExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>シリアル化されたデータで <see cref="T:Microsoft.ServiceBus.Messaging.QuotaExceededException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info">例外に関するシリアル化された情報を含むオブジェクト。</param>
      <param name="context">送信元または宛先に関するコンテキスト情報。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QuotaExceededException.#ctor(System.String)">
      <summary>指定されたエラー メッセージで <see cref="T:Microsoft.ServiceBus.Messaging.QuotaExceededException" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外の理由を説明するエラー メッセージ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QuotaExceededException.#ctor(System.String,System.Exception)">
      <summary>指定されたエラー メッセージと、この例外の原因である内部例外への参照で、<see cref="T:Microsoft.ServiceBus.Messaging.QuotaExceededException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外の理由を説明するエラー メッセージ。</param>
      <param name="innerException">現在の例外の原因である例外。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.ReceiveMode">
      <summary>受信モードの値を列挙します。既定は <see cref="F:Microsoft.ServiceBus.Messaging.ReceiveMode.PeekLock" /> です。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ReceiveMode.PeekLock">
      <summary>PeekLock 受信モードを指定します。これは <see cref="T:Microsoft.ServiceBus.Messaging.ReceiveMode" /> の既定値です。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ReceiveMode.ReceiveAndDelete">
      <summary>ReceiveAndDelete 受信モードを指定します。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.RelayDescription">
      <summary>リレーの説明を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.RelayDescription.#ctor(System.String,Microsoft.ServiceBus.RelayType)">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.RelayDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="relayPath">リレーのパス。</param>
      <param name="type">リレー タイプ。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RelayDescription.Authorization">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" /> を取得します。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RelayDescription.CollectionName">
      <summary>リレーに関連付けられたコレクションの名前を取得または設定します。</summary>
      <returns>リレーに関連付けられたコレクションの名前。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RelayDescription.CreatedAt">
      <summary>リレーが作成された正確な時刻を取得または設定します。</summary>
      <returns>リレーが作成された正確な時刻。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RelayDescription.IsDynamic">
      <summary>リレーが動的であるかどうかを取得または設定します。</summary>
      <returns>リレーが動的な場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RelayDescription.ListenerCount">
      <summary>このリレーのリスナー数を取得または設定します。</summary>
      <returns>このリレーのリスナー数。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RelayDescription.Path">
      <summary>リレーのパスを取得または設定します。</summary>
      <returns>リレーのパス。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RelayDescription.RelayType">
      <summary>リレーのタイプを取得または設定します。</summary>
      <returns>リレー タイプ。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RelayDescription.RequiresClientAuthorization">
      <summary>このリレーでクライアント承認が必要かどうかを取得または設定します。</summary>
      <returns>このリレーでクライアント承認が必要な場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RelayDescription.RequiresTransportSecurity">
      <summary>このリレーでトランスポート セキュリティが必要かどうかを取得または設定します。</summary>
      <returns>このリレーでトランスポート セキュリティが必要な場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RelayDescription.UpdatedAt">
      <summary>リレーが更新された日付を取得または設定します。</summary>
      <returns>リレーが更新された日付。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RelayDescription.UserMetadata">
      <summary>このインスタンスに関連付けられているユーザー メタデータを取得または設定します。</summary>
      <returns>このインスタンスに関連付けられているユーザー メタデータ。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.RuleAction">
      <summary>フィルター式によって一致したメッセージの変換に使用できるフィルター アクションを表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.RuleAction.Execute(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>指定された BrokeredMessage に対してフィルター アクションを実行します。</summary>
      <returns>ルール アクションの実行後に変更された BrokeredMessage。</returns>
      <param name="message">BrokeredMessage を入力します。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.RuleAction.Preprocess">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.RuleAction" />オブジェクトを前処理します。</summary>
      <returns>前処理された <see cref="T:Microsoft.ServiceBus.Messaging.RuleAction" />オブジェクト。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RuleAction.RequiresPreprocessing">
      <summary>ルール アクションで前処理が必要かどうかを示す値を取得します。</summary>
      <returns>ルール アクションで前処理が必要な場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RuleAction.System#Runtime#Serialization#IExtensibleDataObject#ExtensionData">
      <summary>余分なデータを含むオブジェクトを取得または設定します。</summary>
      <returns>余分なデータを含むオブジェクト。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.RuleAction.Validate">
      <summary>文法に対するルール アクションを検証します。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.RuleActionException">
      <summary>フィルター アクション エラーのためにスローされ、フィルター関連の操作が失敗したときにスローされる例外。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.RuleActionException.#ctor(System.String)">
      <summary>指定されたエラー メッセージで <see cref="T:Microsoft.ServiceBus.Messaging.RuleActionException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外の理由を説明するエラー メッセージ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.RuleActionException.#ctor(System.String,System.Exception)">
      <summary>指定されたエラー メッセージと、この例外の原因である内部例外への参照を使用して、<see cref="T:Microsoft.ServiceBus.Messaging.RuleActionException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外の理由を説明するエラー メッセージ。</param>
      <param name="innerException">現在の例外の原因である例外。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.RuleDescription">
      <summary>ルールの説明を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.RuleDescription.#ctor">
      <summary>既定値で <see cref="T:Microsoft.ServiceBus.Messaging.RuleDescription" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.RuleDescription.#ctor(Microsoft.ServiceBus.Messaging.Filter)">
      <summary>指定されたフィルター式で <see cref="T:Microsoft.ServiceBus.Messaging.RuleDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="filter">メッセージの一致に使用されるフィルター式。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.RuleDescription.#ctor(System.String)">
      <summary>指定された名前で  <see cref="T:Microsoft.ServiceBus.Messaging.RuleDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">ルールの名前。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.RuleDescription.#ctor(System.String,Microsoft.ServiceBus.Messaging.Filter)">
      <summary>指定された名前とフィルター式で <see cref="T:Microsoft.ServiceBus.Messaging.RuleDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">ルールの名前。</param>
      <param name="filter">メッセージの一致に使用されるフィルター式。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RuleDescription.Action">
      <summary>メッセージがフィルター式を満たす場合に実行するアクションを取得または設定します。</summary>
      <returns>メッセージがフィルター式を満たす場合に実行するアクション。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RuleDescription.CreatedAt">
      <summary>ルールの作成時刻を取得します。</summary>
      <returns>ルールの作成時刻。</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.RuleDescription.DefaultRuleName">
      <summary>既定のルールの名前を指定します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RuleDescription.Filter">
      <summary>メッセージの一致に使用されるフィルター式を取得または設定します。</summary>
      <returns>メッセージの一致に使用されるフィルター式。</returns>
      <exception cref="T:System.ArgumentNullException">null (Visual Basic の場合は Nothing )が割り当てられます。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RuleDescription.Name">
      <summary>ルールの名前を取得または設定します。</summary>
      <returns>ルールの名前を表す <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.SendAvailabilityBacklogException">
      <summary>可用性バックログの送信中に発生した例外を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SendAvailabilityBacklogException.#ctor(System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.SendAvailabilityBacklogException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外に関連付けられているメッセージ。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.SendAvailabilityMessagingException">
      <summary>メッセージングの可用性の送信中に発生した例外を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SendAvailabilityMessagingException.#ctor(System.Exception)">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.SendAvailabilityMessagingException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="innerException">例外の原因となったエラー。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.SendAvailabilityPairedNamespaceOptions">
      <summary>ペアリングされた名前空間の可用性を送信するためのオプションを表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SendAvailabilityPairedNamespaceOptions.#ctor(Microsoft.ServiceBus.NamespaceManager,Microsoft.ServiceBus.Messaging.MessagingFactory)">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.SendAvailabilityPairedNamespaceOptions" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="secondaryNamespaceManager">セカンダリ名前空間マネージャー。</param>
      <param name="messagingFactory">メッセージング ファクトリ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SendAvailabilityPairedNamespaceOptions.#ctor(Microsoft.ServiceBus.NamespaceManager,Microsoft.ServiceBus.Messaging.MessagingFactory,System.Int32)">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.SendAvailabilityPairedNamespaceOptions" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="secondaryNamespaceManager">セカンダリ名前空間マネージャー。</param>
      <param name="messagingFactory">メッセージング ファクトリ。</param>
      <param name="backlogQueueCount">バックログ キューの数。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SendAvailabilityPairedNamespaceOptions.#ctor(Microsoft.ServiceBus.NamespaceManager,Microsoft.ServiceBus.Messaging.MessagingFactory,System.Int32,System.TimeSpan,System.Boolean)">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.SendAvailabilityPairedNamespaceOptions" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="secondaryNamespaceManager">セカンダリ名前空間マネージャー。</param>
      <param name="messagingFactory">メッセージング ファクトリ。</param>
      <param name="backlogQueueCount">バックログ キューの数。</param>
      <param name="failoverInterval">フェールオーバー間隔。</param>
      <param name="enableSyphon">サイホンを有効にするには true、それ以外の場合は false です。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SendAvailabilityPairedNamespaceOptions.BacklogQueueCount">
      <summary>バックログ キューの数を取得または設定します。</summary>
      <returns>バックログ キューの数。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SendAvailabilityPairedNamespaceOptions.EnableSyphon">
      <summary>このインスタンスでサイホンを有効にするかどうかを取得または設定します。</summary>
      <returns>このインスタンスでサイフォンが有効になっている場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SendAvailabilityPairedNamespaceOptions.MarkPathHealthy(System.String)">
      <summary>パスを正常としてマークします。</summary>
      <param name="path">マークされるパス。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SendAvailabilityPairedNamespaceOptions.PingPrimaryInterval">
      <summary>ping の間隔を取得または設定します。</summary>
      <returns>ping の間隔。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.ServerBusyException">
      <summary>サーバーが論理操作で過負荷になったときにスローされる例外。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.ServerBusyException.#ctor(System.String)">
      <summary>指定されたエラー メッセージで <see cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外の理由を説明するエラー メッセージ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.ServerBusyException.#ctor(System.String,System.Exception)">
      <summary>指定されたエラー メッセージと内部例外の参照で <see cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外の原因を説明するエラー メッセージ。</param>
      <param name="innerException">現在の例外の原因である内部例外。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.SessionCannotBeLockedException">
      <summary>メッセージがセッションのロックを取得できない場合にスローされる例外。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SessionCannotBeLockedException.#ctor(System.String)">
      <summary>指定されたエラー メッセージで <see cref="T:Microsoft.ServiceBus.Messaging.SessionCannotBeLockedException" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外の原因を説明するエラー メッセージ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SessionCannotBeLockedException.#ctor(System.String,System.Exception)">
      <summary>指定されたエラー メッセージと内部への参照を使用して、<see cref="T:Microsoft.ServiceBus.Messaging.SessionCannotBeLockedException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外の原因を説明するエラー メッセージ。</param>
      <param name="innerException">現在の例外の原因である内部例外。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.SessionHandlerOptions">
      <summary>セッション ハンドラーのオプションを表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SessionHandlerOptions.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.SessionHandlerOptions" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SessionHandlerOptions.AutoComplete">
      <summary>セッション ハンドラーのオートコンプリート オプションを有効にするかどうかを取得または設定します。</summary>
      <returns>セッション ハンドラーのオートコンプリート オプションが有効になっている場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SessionHandlerOptions.AutoRenewTimeout">
      <summary>セッションが状態を更新する前に必要な時間を取得または設定します。</summary>
      <returns>セッションが状態を更新する前に必要な時間。</returns>
    </member>
    <member name="E:Microsoft.ServiceBus.Messaging.SessionHandlerOptions.ExceptionReceived">
      <summary>セッションの処理中に例外が生じた場合に発生します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SessionHandlerOptions.MaxConcurrentSessions">
      <summary>既存のセッションの最大数を取得または設定します。</summary>
      <returns>既存のセッションの最大数。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SessionHandlerOptions.MessageWaitTimeout">
      <summary>待機中のメッセージの有効期限が切れるまでに必要な時間を取得または設定します。</summary>
      <returns>待機中のメッセージの有効期限が切れるまでに必要な時間。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.SessionLockLostException">
      <summary>セッション ロック喪失エラーを通知するためにスローされる例外。分割されたメッセージング エンティティの場合、パーティションは Service Bus ノードのロード バランシングを実現するために移動することがあります。たとえば、ノードが再起動したり、負荷を共有するために新しいノードが追加された場合です。その場合、セッション ロックは失われますが、メッセージは失われません。セッションがロックされた後にパーティションが移動すると、ロックが失われるため、確認/完了メッセージ処理の呼び出しは失敗します。ただし、メッセージは残り、もう一度読み取ることができます。このため、メッセージ自体が失われていなくても、<see cref="T:Microsoft.ServiceBus.Messaging.SessionLockLostException" /> 例外を受け取る可能性があります。この場合、メッセージ処理操作を再試行できます。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SessionLockLostException.#ctor(System.String)">
      <summary>指定されたエラー メッセージで SessionLockLostException クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外の理由を説明するエラー メッセージ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SessionLockLostException.#ctor(System.String,System.Exception)">
      <summary>指定されたエラー メッセージと、この例外の原因である内部例外への参照を使用して、SessionLockLostException クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外の理由を説明するエラー メッセージ。</param>
      <param name="innerException">現在の例外の原因である例外。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule">
      <summary>共有アクセス操作の承認ルールを定義します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.#ctor(System.String,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AccessRights})">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="keyName">承認ルール キー名。</param>
      <param name="rights">権限の一覧。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AccessRights})">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="keyName">承認ルール キー名。</param>
      <param name="primaryKey">承認ルールのプライマリ キー。</param>
      <param name="rights">権限の一覧。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AccessRights})">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="keyName">承認ルール キー名。</param>
      <param name="primaryKey">承認ルールのプライマリ キー。</param>
      <param name="secondaryKey">承認ルールのセカンダリ キー。</param>
      <param name="rights">権限の一覧。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.Equals(System.Object)">
      <summary>指定されたオブジェクトが現在のオブジェクトと等しいかどうかを決定します。</summary>
      <returns>指定されたオブジェクトが現在のオブジェクトと等しい場合は true、それ以外の場合は false です。</returns>
      <param name="obj">現在のオブジェクトと比較するオブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.GenerateRandomKey">
      <summary>承認ルールのランダム キーを生成します。</summary>
      <returns>承認ルールのランダム キー。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.GetHashCode">
      <summary>このインスタンスのハッシュ コードを返します。</summary>
      <returns>このインスタンスのハッシュ コード。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.KeyName">
      <summary>承認ルール キー名を取得または設定します。</summary>
      <returns>承認ルール キー名。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.OnValidate">
      <summary>承認ルールの有効性をチェックします。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.PrimaryKey">
      <summary>承認ルールのプライマリ キーを取得または設定します。</summary>
      <returns>承認ルールのプライマリ キー。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.SecondaryKey">
      <summary>承認ルールのセカンダリ キーを取得または設定します。</summary>
      <returns>承認ルールのセカンダリ キー。</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.Serializer">
      <summary>承認ルールに関連付けられているシリアライザー。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.ValidateRights(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AccessRights})">
      <summary>指定されたアクセス権の有効性を確認します。</summary>
      <param name="value">チェックするアクセス権。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.SqlFilter">
      <summary>式の構成と、pub/sub パイプラインで実行されるアクションであるフィルターを表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SqlFilter.#ctor(System.String)">
      <summary>指定された SQL 式を使用して <see cref="T:Microsoft.ServiceBus.Messaging.SqlFilter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="sqlExpression">SQL 式。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SqlFilter.CompatibilityLevel">
      <summary>このプロパティは、将来の使用向けの予備でます。互換性レベルを示す整数値で、現在は 20 にハードコードされています。</summary>
      <returns>互換性レベル。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SqlFilter.Match(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>メッセージが現在の SQL 式と一致するかどうかを指定します。</summary>
      <returns>メッセージが現在の SQL 式と一致する場合は true、それ以外の場合は false です。</returns>
      <param name="message">BrokeredMessage。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SqlFilter.Parameters">
      <summary>フィルター式の値を設定します。</summary>
      <returns>フィルター式の値。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SqlFilter.Preprocess">
      <summary>前処理されたフィルター式を取得します。</summary>
      <returns>前処理されたフィルター式。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SqlFilter.RequiresPreprocessing">
      <summary>SQL フィルター式に前処理が必要かどうかを示す値を取得します。</summary>
      <returns>SQL フィルター式で前処理が必要な場合は true、それ以外の場合は false です。現在は常に true を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SqlFilter.SqlExpression">
      <summary>SQL 式を取得します。</summary>
      <returns>SQL 式。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SqlFilter.ToString">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.SqlFilter" /> の文字列表現を返します。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.Messaging.SqlFilter" /> の文字列表現。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SqlFilter.Validate">
      <summary>SQL 式を検証します。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.SqlRuleAction">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> に対して実行される SQL 言語ベースの構文で書かれた一連のアクションを表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SqlRuleAction.#ctor(System.String)">
      <summary>指定された SQL 式で <see cref="T:Microsoft.ServiceBus.Messaging.SqlRuleAction" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="sqlExpression">SQL 式。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SqlRuleAction.#ctor(System.String,System.Int32)">
      <summary>指定された SQL 式と互換性レベルで、<see cref="T:Microsoft.ServiceBus.Messaging.SqlRuleAction" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="sqlExpression">SQL 式。</param>
      <param name="compatibilityLevel">将来の使用向けの予備。互換性レベルを示す整数値。現在、20 にハードコードされています。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SqlRuleAction.CompatibilityLevel">
      <summary>このプロパティは、将来の使用向けの予備でます。互換性レベルを示す整数値で、現在は 20 にハードコードされています。</summary>
      <returns>互換性レベルを示す整数値</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SqlRuleAction.Execute(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.SqlRuleAction" /> オブジェクトを実行します。</summary>
      <returns>処理された <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />。</returns>
      <param name="message"><see cref="T:Microsoft.ServiceBus.Messaging.SqlRuleAction" /> を適用する <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />。 </param>
      <exception cref="T:System.InvalidOperationException">現在の状態に対して操作が有効でない場合にスローされます。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SqlRuleAction.Parameters">
      <summary>ルール アクションの値を設定します。</summary>
      <returns>ルール アクションの値。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SqlRuleAction.Preprocess">
      <summary>前処理された <see cref="T:Microsoft.ServiceBus.Messaging.RuleAction" /> 式を取得します。</summary>
      <returns>前処理された <see cref="T:Microsoft.ServiceBus.Messaging.RuleAction" /> 式。</returns>
      <exception cref="T:Microsoft.ServiceBus.Messaging.RuleActionException">ルール アクション ステートメントが無効、または最大許容数を超えた場合にスローされます。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SqlRuleAction.RequiresPreprocessing">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.SqlRuleAction" /> で前処理が必要かどうかを示す値を取得します。</summary>
      <returns>SQL ルール アクションで前処理が必要な場合は true、それ以外の場合は false です。現在は常に true を返します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SqlRuleAction.SqlExpression">
      <summary>SQL 式を取得します。</summary>
      <returns>SQL 式。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SqlRuleAction.ToString">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.SqlRuleAction" /> の文字列表現を返します。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.Messaging.SqlRuleAction" /> の文字列表現。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SqlRuleAction.Validate">
      <summary>SQL 92 の構文とルールに対して SQL 式を検証します。</summary>
      <exception cref="T:Microsoft.ServiceBus.Messaging.RuleActionException">ルール アクション ステートメントが無効、または最大許容数を超えた場合にスローされます。</exception>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.SubscriptionClient">
      <summary>トピック サブスクリプションに関連するランタイム操作で使用されるアンカー クラスを表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Abandon(System.Guid)">
      <summary>メッセージを破棄し、メッセージ ロックの所有権を放棄します。</summary>
      <param name="lockToken">破棄するロック メッセージ インスタンスにバインドされたロック トークン。</param>
      <exception cref="T:System.TimeoutException"><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> を介して設定されたタイムアウト値を操作が超えた場合にスローされます。</exception>
      <exception cref="T:System.OperationCanceledException">クライアント エンティティが終了または中止された場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Abandon(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>メッセージを破棄し、メッセージ ロックの所有権を放棄します。</summary>
      <param name="lockToken">破棄するロック メッセージ インスタンスにバインドされたロック トークン。</param>
      <param name="propertiesToModify">変更するプロパティ オブジェクトのコレクション。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AbandonAsync(System.Guid)">
      <summary>メッセージを非同期的に破棄し、メッセージ ロックの所有権を放棄します。</summary>
      <returns>非同期放棄操作を表すタスク インスタンス。</returns>
      <param name="lockToken">破棄するロック メッセージ インスタンスにバインドされたロック トークン。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AbandonAsync(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>メッセージを非同期的に破棄し、メッセージ ロックの所有権を放棄します。</summary>
      <returns>非同期放棄操作を表すタスク インスタンス。</returns>
      <param name="lockToken">破棄するロック メッセージ インスタンスにバインドされたロック トークン。</param>
      <param name="propertiesToModify">変更するプロパティ オブジェクトのコレクション。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AcceptMessageSession">
      <summary>単一のトランザクションで処理するための関連メッセージのグループ化を可能にするメッセージ セッションを受け入れます。</summary>
      <returns>単一のトランザクションの処理に関する関連メッセージをグループ化できる <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" />。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AcceptMessageSession(System.String)">
      <summary>特定のセッション識別子を使用して、単一のトランザクションで処理する関連メッセージのグループ化を可能にするメッセージ セッションを受け入れます。</summary>
      <returns>単一のトランザクションの処理に関する関連メッセージをグループ化できる <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" />。</returns>
      <param name="sessionId">メッセージ セッションのセッション識別子。</param>
      <exception cref="T:System.ArgumentException">sessionId が null、空、または空白の場合にスローされます。</exception>
      <exception cref="T:System.TimeoutException"><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> によって設定されたタイムアウト値を操作が超えた場合にスローされます。</exception>
      <exception cref="T:System.OperationCanceledException">クライアントが既に終了、中止、または破棄されている場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AcceptMessageSession(System.String,System.TimeSpan)">
      <summary>特定のセッション識別子と待機時間を使用して、単一のトランザクションで処理する関連メッセージのグループ化を可能にするメッセージ セッションを受け入れます。</summary>
      <returns>単一のトランザクションの処理に関する関連メッセージをグループ化できる <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" />。</returns>
      <param name="sessionId">メッセージ セッションのセッション識別子。</param>
      <param name="serverWaitTime">タイムアウトになるまで、サーバーがメッセージの処理を待機する時間。</param>
      <exception cref="T:System.ArgumentException">sessionId が null、空、または空白の場合にスローされます。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">serverWaitTime が正の TimeSpan 値でない場合にスローされます。</exception>
      <exception cref="T:System.TimeoutException"><see cref="serverWaitTime" /> によって設定されたタイムアウト値を操作が超えた場合にスローされます。</exception>
      <exception cref="T:System.OperationCanceledException">クライアントが既に終了、中止、または破棄されている場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AcceptMessageSession(System.TimeSpan)">
      <summary>指定されたサーバー待機時間を使用して、単一のトランザクションで処理する関連メッセージのグループ化を可能にするメッセージ セッションを受け入れます。</summary>
      <returns>単一のトランザクションの処理に関する関連メッセージをグループ化できる <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" />。</returns>
      <param name="serverWaitTime">タイムアウトになるまで、サーバーがメッセージの処理を待機する時間。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">serverWaitTime が正の TimeSpan 値でない場合にスローされます。</exception>
      <exception cref="T:System.TimeoutException"><see cref="serverWaitTime" /> によって設定されたタイムアウト値を操作が超えた場合にスローされます。</exception>
      <exception cref="T:System.OperationCanceledException">クライアントが既に終了、中止、または破棄されている場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AcceptMessageSessionAsync">
      <summary>指定されたサーバー待機時間を使用して、単一のトランザクションで処理する関連メッセージのグループ化を可能にするメッセージ セッションを非同期的に受け入れます。</summary>
      <returns>非同期メッセージ セッション受け入れ操作を表すタスク インスタンス。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AcceptMessageSessionAsync(System.String)">
      <summary>指定されたサーバー待機時間を使用して、単一のトランザクションで処理する関連メッセージのグループ化を可能にするメッセージ セッションを非同期的に受け入れます。</summary>
      <returns>非同期メッセージ セッション受け入れ操作を表すタスク インスタンス。</returns>
      <param name="sessionId">メッセージ セッションのセッション識別子。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AcceptMessageSessionAsync(System.String,System.TimeSpan)">
      <summary>指定されたサーバー待機時間を使用して、単一のトランザクションで処理する関連メッセージのグループ化を可能にするメッセージ セッションを非同期的に受け入れます。</summary>
      <returns>非同期メッセージ セッション受け入れ操作を表すタスク インスタンス。</returns>
      <param name="sessionId">メッセージ セッションのセッション識別子。</param>
      <param name="serverWaitTime">タイムアウトになるまで、サーバーがメッセージの処理を待機する時間。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AcceptMessageSessionAsync(System.TimeSpan)">
      <summary>指定されたサーバー待機時間を使用して、単一のトランザクションで処理する関連メッセージのグループ化を可能にするメッセージ セッションを非同期的に受け入れます。</summary>
      <returns>非同期メッセージ セッション受け入れ操作を表すタスク インスタンス。</returns>
      <param name="serverWaitTime">タイムアウトになるまで、サーバーがメッセージの処理を待機する時間。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AddRule(Microsoft.ServiceBus.Messaging.RuleDescription)">
      <summary>指定されたルールの説明を使用して、<see cref="T:Microsoft.ServiceBus.Messaging.Subscription" /> に新しいルールを追加します。</summary>
      <param name="description">追加するルールのメタデータを提供するルールの説明。</param>
      <exception cref="T:System.ArgumentNullException"><paramref name="description" /> が null の場合にスローされます。</exception>
      <exception cref="T:System.ArgumentException"><paramref name="description.Name" /> が null、空白、空、または正しい形式でない場合にスローされます。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="description.Name" /> の長さが 50 字の制限を超えた場合にスローされます。</exception>
      <exception cref="T:System.TimeoutException"><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> によって設定されたタイムアウト値を操作が超えた場合にスローされます。</exception>
      <exception cref="T:System.OperationCanceledException">クライアント エンティティが終了または中止された場合にスローされます。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">このサブスクリプションと同じ名前のルールが既に <paramref name="description.Name" /> で存在する場合にスローされます。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">既に追加されているルールと同じ名前の別のルールを追加しようとしたときにスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AddRule(System.String,Microsoft.ServiceBus.Messaging.Filter)">
      <summary>指定された名前とフィルター式のあるルールを現在のサブスクリプションに追加します。</summary>
      <param name="ruleName">追加するルールの名前。</param>
      <param name="filter">メッセージが一致するフィルター式。</param>
      <exception cref="T:System.ArgumentNullException"><paramref name="filter" /> が null の場合にスローされます。</exception>
      <exception cref="T:System.ArgumentException"><paramref name="ruleName" /> が null、空白、空、または正しい形式でない場合にスローされます。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="ruleName" /> の長さが 50 字の制限を超えた場合にスローされます。</exception>
      <exception cref="T:System.TimeoutException"><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> を介して設定されたタイムアウト値を操作が超えた場合にスローされます。</exception>
      <exception cref="T:System.OperationCanceledException">クライアント エンティティが終了または中止された場合にスローされます。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">このサブスクリプションと同じ名前のルールが既に <paramref name="ruleName" /> で存在する場合にスローされます。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">既に追加されているルールと同じ名前の別のルールを追加しようとしたときにスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AddRuleAsync(Microsoft.ServiceBus.Messaging.RuleDescription)">
      <summary>指定されたルールの説明を使用して、<see cref="T:Microsoft.ServiceBus.Messaging.Subscription" /> に新しいルールが非同期的に追加されます。</summary>
      <returns>非同期ルール追加操作を表すタスク インスタンス。</returns>
      <param name="description">追加するルールのメタデータを提供するルールの説明。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AddRuleAsync(System.String,Microsoft.ServiceBus.Messaging.Filter)">
      <summary>指定された名前とフィルター式の現在のサブスクリプションにルールを非同期的に追加します。</summary>
      <returns>非同期ルール追加操作を表すタスク インスタンス。</returns>
      <param name="ruleName">追加するルールの名前。</param>
      <param name="filter">メッセージが一致するフィルター式。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginAbandon(System.Guid,System.AsyncCallback,System.Object)">
      <summary>メッセージを破棄し、ロックを放棄する非同期操作を開始します。</summary>
      <returns>非同期操作を参照してメッセージを破棄し、ロックを放棄する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="lockToken">破棄するロック メッセージ インスタンスにバインドされたロック トークン。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
      <exception cref="T:System.TimeoutException"><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> によって設定されたタイムアウト値を操作が超えた場合にスローされます。</exception>
      <exception cref="T:System.OperationCanceledException">クライアント エンティティが終了または中止された場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginAbandon(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>メッセージを破棄し、ロックを放棄する非同期操作を開始します。</summary>
      <returns>メッセージを破棄し、ロックを放棄する非同期操作。</returns>
      <param name="lockToken">破棄するロック メッセージ インスタンスにバインドされたロック トークン。</param>
      <param name="propertiesToModify">変更するプロパティ オブジェクトのコレクション。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginAcceptMessageSession(System.AsyncCallback,System.Object)">
      <summary>メッセージ セッションを受け入れる非同期操作を開始します。</summary>
      <returns>メッセージ セッションを受け入れる非同期操作を参照する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
      <exception cref="T:System.TimeoutException">以下によって設定されたタイムアウト値を操作が超えた場合にスローされます: <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /></exception>
      <exception cref="T:System.OperationCanceledException">クライアントが既に終了、中止、または破棄されている場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginAcceptMessageSession(System.String,System.AsyncCallback,System.Object)">
      <summary>メッセージ セッションを受け入れる非同期操作を開始します。</summary>
      <returns>メッセージ セッションを受け入れる非同期操作を参照する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="sessionId">メッセージ セッションのセッション識別子。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
      <exception cref="T:System.ArgumentException">sessionId が null、空、または空白の場合にスローされます。</exception>
      <exception cref="T:System.TimeoutException"><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> によって設定されたタイムアウト値を操作が超えた場合にスローされます。</exception>
      <exception cref="T:System.OperationCanceledException">クライアントが既に終了、中止、または破棄されている場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginAcceptMessageSession(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>メッセージ セッションを受け入れる非同期操作を開始します。</summary>
      <returns>メッセージ セッションを受け入れる非同期操作を参照する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="sessionId">メッセージ セッションのセッション識別子。</param>
      <param name="timeout">タイムアウトになるまで、サーバーがメッセージの処理を待機する時間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
      <exception cref="T:System.ArgumentException">sessionId が null、空、または空白の場合にスローされます。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">serverWaitTime が正の TimeSpan 値でない場合にスローされます。</exception>
      <exception cref="T:System.TimeoutException"><paramref name="serverWaitTime" /> によって設定されたタイムアウト値を操作が超えた場合にスローされます。</exception>
      <exception cref="T:System.OperationCanceledException">クライアントが既に終了、中止、または破棄されている場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginAcceptMessageSession(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>メッセージ セッションを受け入れる非同期操作を開始します。</summary>
      <returns>メッセージ セッションを受け入れる非同期操作を参照する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="serverWaitTime">タイムアウトになるまで、サーバーがメッセージの処理を待機する時間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">serverWaitTime が正の TimeSpan 値でない場合にスローされます。</exception>
      <exception cref="T:System.TimeoutException"><see cref="serverWaitTime" /> によって設定されたタイムアウト値を操作が超えた場合にスローされます。</exception>
      <exception cref="T:System.OperationCanceledException">クライアントが既に終了、中止、または破棄されている場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginAddRule(Microsoft.ServiceBus.Messaging.RuleDescription,System.AsyncCallback,System.Object)">
      <summary>サブスクリプションに新しいルールを追加する非同期操作を開始します。</summary>
      <returns>非同期操作を参照して新しいルールをサブスクリプションに追加する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="description">追加するルールのメタデータを提供するルールの説明。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException"><paramref name="description" /> が null の場合にスローされます。</exception>
      <exception cref="T:System.ArgumentException"><paramref name="description.Name" /> が null、空白、空、または正しい形式でない場合にスローされます。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="description.Name" /> の長さが 50 字の制限を超えた場合にスローされます。</exception>
      <exception cref="T:System.TimeoutException"><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> を介して設定されたタイムアウト値を操作が超えた場合にスローされます。</exception>
      <exception cref="T:System.OperationCanceledException">クライアント エンティティが終了または中止された場合にスローされます。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">このサブスクリプションと同じ名前のルールが既に <paramref name="description.Name" /> で存在する場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginAddRule(System.String,Microsoft.ServiceBus.Messaging.Filter,System.AsyncCallback,System.Object)">
      <summary>サブスクリプションに新しいルールを追加する非同期操作を開始します。</summary>
      <returns>非同期操作を参照して新しいルールをサブスクリプションに追加する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="ruleName">追加するルールの名前。</param>
      <param name="filter">メッセージが一致するフィルター式。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException"><paramref name="filter" /> が null の場合にスローされます。</exception>
      <exception cref="T:System.ArgumentException"><paramref name="ruleName" /> が null、空白、空、または正しい形式でない場合にスローされます。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="ruleName" /> の長さが 50 字の制限を超えた場合にスローされます。</exception>
      <exception cref="T:System.TimeoutException"><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> を介して設定されたタイムアウト値を操作が超えた場合にスローされます。</exception>
      <exception cref="T:System.OperationCanceledException">クライアント エンティティが終了または中止された場合にスローされます。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">このサブスクリプションと同じ名前のルールが既に <paramref name="ruleName" /> で存在する場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginComplete(System.Guid,System.AsyncCallback,System.Object)">
      <summary>メッセージの処理を完了するための非同期操作を開始します。</summary>
      <returns>メッセージの処理を完了する非同期操作を参照する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="lockToken">ロックされたメッセージ インスタンスにバインドされたロック トークン。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
      <exception cref="T:System.TimeoutException"><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> によって設定されたタイムアウトを操作が超過した場合にスローされます。</exception>
      <exception cref="T:System.OperationCanceledException">クライアント エンティティが終了または中止された場合にスローされます。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException"><paramref name="lockToken" /> で表されるメッセージでメッセージ ロックが失われた場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginCompleteBatch(System.Collections.Generic.IEnumerable{System.Guid},System.AsyncCallback,System.Object)">
      <summary>メッセージの処理を完了する非同期操作を開始します。</summary>
      <returns>メッセージの処理を完了する非同期操作。</returns>
      <param name="lockTokens">ロックされたメッセージ インスタンスにバインドされたロック トークン。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginDeadLetter(System.Guid,System.AsyncCallback,System.Object)">
      <summary>メッセージを配信不能キューに移動する非同期操作を開始します。</summary>
      <returns>非同期操作を参照して、メッセージを配信不能キューに移動する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="lockToken">ロックされたメッセージ インスタンスにバインドされたロック トークン。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
      <exception cref="T:System.TimeoutException"><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> によって設定されたタイムアウト値を操作が超えた場合にスローされます。</exception>
      <exception cref="T:System.OperationCanceledException">クライアント エンティティが終了または中止された場合にスローされます。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException"><paramref name="lockToken" /> で表されるメッセージでメッセージ ロックが失われた場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginDeadLetter(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>メッセージを配信不能キューに移動する非同期操作を開始します。</summary>
      <returns>メッセージを配信不能キューに移動する非同期操作。</returns>
      <param name="lockToken">ロックされたメッセージ インスタンスにバインドされたロック トークン。</param>
      <param name="propertiesToModify">変更するプロパティ オブジェクトのコレクション。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginDeadLetter(System.Guid,System.String,System.String,System.AsyncCallback,System.Object)">
      <summary>メッセージを配信不能キューに移動する非同期操作を開始します。</summary>
      <returns>非同期操作を参照して、メッセージを配信不能キューに移動する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="lockToken">ロックされたメッセージ インスタンスにバインドされたロック トークン。</param>
      <param name="deadLetterReason">メッセージを配信不能にする理由。</param>
      <param name="deadLetterErrorDescription">メッセージの配信不能に関するエラーの説明。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
      <exception cref="T:System.TimeoutException"><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> によって設定されたタイムアウト値を操作が超えた場合にスローされます。</exception>
      <exception cref="T:System.OperationCanceledException">クライアント エンティティが終了または中止された場合にスローされます。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException"><paramref name="lockToken" /> で表されるメッセージでメッセージ ロックが失われた場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginDefer(System.Guid,System.AsyncCallback,System.Object)">
      <summary>メッセージの処理を中断する非同期操作を開始します。</summary>
      <returns>メッセージの処理を中断する非同期操作を参照する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="lockToken">ロックされたメッセージ インスタンスにバインドされたロック トークン。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
      <exception cref="T:System.TimeoutException"><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> を介して設定されたタイムアウト値を操作が超えた場合にスローされます。</exception>
      <exception cref="T:System.OperationCanceledException">クライアント エンティティが終了または中止された場合にスローされます。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException"><paramref name="lockToken" /> で表されるメッセージでメッセージ ロックが失われた場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginDefer(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>メッセージの処理を中断する非同期操作を開始します。</summary>
      <returns>メッセージの処理を中断する非同期操作。</returns>
      <param name="lockToken">ロックされたメッセージ インスタンスにバインドされたロック トークン。</param>
      <param name="propertiesToModify">変更するプロパティ オブジェクトのコレクション。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginGetMessageSessions(System.AsyncCallback,System.Object)">
      <summary>メッセージ セッションを取得する非同期操作を開始します。</summary>
      <returns>メッセージ セッションを取得する非同期操作。</returns>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginGetMessageSessions(System.DateTime,System.AsyncCallback,System.Object)">
      <summary>メッセージ セッションを取得する非同期操作を開始します。</summary>
      <returns>メッセージ セッションを取得する非同期操作。</returns>
      <param name="lastUpdatedTime">セッションが最後に更新された時刻。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginPeek(System.AsyncCallback,System.Object)">
      <summary>キュー内の最初のメッセージを削除することなく、返す非同期操作を開始します。</summary>
      <returns>キュー内のメッセージをピークする非同期操作。</returns>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginPeek(System.Int64,System.AsyncCallback,System.Object)">
      <summary>キュー内の最初のメッセージを削除することなく、返す非同期操作を開始します。</summary>
      <returns>キュー内のメッセージをピークする非同期操作。</returns>
      <param name="fromSequenceNumber">メッセージを参照する開始点。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginPeekBatch(System.Int32,System.AsyncCallback,System.Object)">
      <summary>バッチをピークする非同期操作を開始します。</summary>
      <returns>バッチをピークする非同期操作。</returns>
      <param name="messageCount">バッチ内のメッセージの数。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginPeekBatch(System.Int64,System.Int32,System.AsyncCallback,System.Object)">
      <summary>バッチをピークする非同期操作を開始します。</summary>
      <returns>バッチをピークする非同期操作。</returns>
      <param name="fromSequenceNumber">メッセージを参照する開始点。</param>
      <param name="messageCount">バッチ内のメッセージの数。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginReceive(System.AsyncCallback,System.Object)">
      <summary>メッセージを受信する非同期操作を開始します。</summary>
      <returns>メッセージを受信する非同期操作を参照する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
      <exception cref="T:System.OperationCanceledException">クライアント エンティティが終了または中止された場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginReceive(System.Int64,System.AsyncCallback,System.Object)">
      <summary>メッセージを受信する非同期操作を開始します。</summary>
      <returns>メッセージを受信する非同期操作を参照する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="sequenceNumber">Service Bus によってメッセージに割り当てられた一意の番号。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
      <exception cref="T:System.OperationCanceledException">クライアント エンティティが終了または中止された場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>メッセージを受信する非同期操作を開始します。</summary>
      <returns>メッセージを受信する非同期操作を参照する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="serverWaitTime">タイムアウトになるまで、サーバーがメッセージの処理を待機する時間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="serverWaitTime" /> が負の場合にスローされます。</exception>
      <exception cref="T:System.OperationCanceledException">クライアント エンティティが終了または中止された場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginReceiveBatch(System.Collections.Generic.IEnumerable{System.Int64},System.AsyncCallback,System.Object)">
      <summary>バッチを受け取る非同期操作を開始します。</summary>
      <returns>メッセージを受信する非同期操作を参照する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="sequenceNumbers">Service Bus によってメッセージに割り当てられた一意の番号。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginReceiveBatch(System.Int32,System.AsyncCallback,System.Object)">
      <summary>バッチを受け取る非同期操作を開始します。</summary>
      <returns>メッセージを受信する非同期操作を参照する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="messageCount">バッチで受信するメッセージの最大数。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginReceiveBatch(System.Int32,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>バッチを受け取る非同期操作を開始します。</summary>
      <returns>メッセージを受信する非同期操作を参照する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="messageCount">バッチで受信するメッセージの最大数。</param>
      <param name="serverWaitTime">待ち時間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginRemoveRule(System.String,System.AsyncCallback,System.Object)">
      <summary>非同期ルール削除アクションを開始します。</summary>
      <returns>非同期 <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RemoveRule(System.String)" /> を参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <param name="ruleName">ルールの名前。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">受信操作に関する情報を含むユーザー定義オブジェクト。このオブジェクトは、操作の完了時に <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndRemoveRule(System.IAsyncResult)" /> デリゲートに渡されます。</param>
      <exception cref="MessagingEntityNotFoundException">ルールが存在しない場合にスローされます。</exception>
      <exception cref="T:System.ArgumentException"><paramref name="description.Name" /> が null、空白、空、または正しい形式でない場合にスローされます。</exception>
      <exception cref="T:System.TimeoutException"><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> で設定されたタイムアウト値を操作が超過する場合にスローされます。</exception>
      <exception cref="T:System.OperationCanceledException">クライアント エンティティが終了または中止された場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Complete(System.Guid)">
      <summary>メッセージの処理を完了します。</summary>
      <param name="lockToken">ロックされたメッセージ インスタンスにバインドされたロック トークン。</param>
      <exception cref="T:System.TimeoutException"><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> によって設定されたタイムアウト値を操作が超えた場合にスローされます。</exception>
      <exception cref="T:System.OperationCanceledException">クライアント エンティティが終了または中止された場合にスローされます。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException"><paramref name="lockToken" /> で表されるメッセージでメッセージ ロックが失われた場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.CompleteAsync(System.Guid)">
      <summary>メッセージの処理を非同期的に完了します。</summary>
      <returns>非同期完了操作を表すタスク インスタンス。</returns>
      <param name="lockToken">ロックされたメッセージ インスタンスにバインドされたロック トークン。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.CompleteBatch(System.Collections.Generic.IEnumerable{System.Guid})">
      <summary>バッチの処理を完了します。</summary>
      <param name="lockTokens">ロックされたメッセージ インスタンスにバインドされたロック トークン。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.CompleteBatchAsync(System.Collections.Generic.IEnumerable{System.Guid})">
      <summary>バッチの処理を非同期的に完了します。</summary>
      <returns>非同期バッチ完了操作を表すタスク インスタンス。</returns>
      <param name="lockTokens">ロックされたメッセージ インスタンスにバインドされたロック トークン。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Create(System.String,System.String)">
      <summary>指定された名前とトピックのパスで <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionClient" /> の新しいコピーを作成します。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionClient" /> の新しいコピー。</returns>
      <param name="topicPath">トピックの完全なパス名。</param>
      <param name="name">サブスクリプションの名前。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Create(System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)">
      <summary>指定された名前、トピック パス、およびモードで <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionClient" /> の新しいコピーを作成します。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionClient" /> の新しいコピー。</returns>
      <param name="topicPath">トピックの完全なパス名。</param>
      <param name="name">サブスクリプションの名前。</param>
      <param name="mode">メッセージ受信モード。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.CreateFromConnectionString(System.String,System.String,System.String)">
      <summary>指定されたトピック パスと名前の接続文字列から <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionClient" /> の新しいコピーを作成します。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionClient" /> の新しいコピー。</returns>
      <param name="connectionString">接続文字列。</param>
      <param name="topicPath">トピックの完全なパス名。</param>
      <param name="name">サブスクリプションの名前。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.CreateFromConnectionString(System.String,System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)">
      <summary>指定されたトピック パス、名前、モードの文字列から <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionClient" /> の新しいコピーを作成します。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionClient" /> の新しいコピー。</returns>
      <param name="connectionString">接続文字列。</param>
      <param name="topicPath">トピックの完全なパス名。</param>
      <param name="name">サブスクリプションの名前。</param>
      <param name="mode">メッセージ受信モード。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.DeadLetter(System.Guid)">
      <summary>配信されていないメッセージを配信不能キューに移動します。</summary>
      <param name="lockToken">ロックされたメッセージ インスタンスにバインドされたロック トークン。</param>
      <exception cref="T:System.TimeoutException"><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> によって設定されたタイムアウト値を操作が超えた場合にスローされます。</exception>
      <exception cref="T:System.OperationCanceledException">クライアント エンティティが終了または中止された場合にスローされます。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException"><paramref name="lockToken" /> で表されるメッセージでメッセージ ロックが失われた場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.DeadLetter(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>配信されていないメッセージを配信不能キューに移動します。</summary>
      <param name="lockToken">ロックされたメッセージ インスタンスにバインドされたロック トークン。</param>
      <param name="propertiesToModify">変更するプロパティ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.DeadLetter(System.Guid,System.String,System.String)">
      <summary>配信されていないメッセージを配信不能キューに移動します。</summary>
      <param name="lockToken">ロックされたメッセージ インスタンスにバインドされたロック トークン。</param>
      <param name="deadLetterReason">メッセージを配信不能にする理由。</param>
      <param name="deadLetterErrorDescription">メッセージの配信不能に関するエラーの説明。</param>
      <exception cref="T:System.TimeoutException"><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> によって設定されたタイムアウト値を操作が超えた場合にスローされます。</exception>
      <exception cref="T:System.OperationCanceledException">クライアント エンティティが終了または中止された場合にスローされます。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException"><paramref name="lockToken" /> で表されるメッセージでメッセージ ロックが失われた場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.DeadLetterAsync(System.Guid)">
      <summary>配信されていないメッセージを配信不能キューに非同期的に移動します。</summary>
      <returns>非同期配信不能操作を表すタスク インスタンス。</returns>
      <param name="lockToken">ロックされたメッセージ インスタンスにバインドされたロック トークン。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.DeadLetterAsync(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>配信されていないメッセージを配信不能キューに非同期的に移動します。</summary>
      <returns>非同期配信不能操作を表すタスク インスタンス。</returns>
      <param name="lockToken">ロックされたメッセージ インスタンスにバインドされたロック トークン。</param>
      <param name="propertiesToModify">変更するプロパティ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.DeadLetterAsync(System.Guid,System.String,System.String)">
      <summary>配信されていないメッセージを配信不能キューに非同期的に移動します。</summary>
      <returns>非同期配信不能操作を表すタスク インスタンス。</returns>
      <param name="lockToken">ロックされたメッセージ インスタンスにバインドされたロック トークン。</param>
      <param name="deadLetterReason">メッセージを配信不能にする理由。</param>
      <param name="deadLetterErrorDescription">メッセージの配信不能に関するエラーの説明。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Defer(System.Guid)">
      <summary>メッセージの処理を中断します。</summary>
      <param name="lockToken">ロックされたメッセージ インスタンスにバインドされたロック トークン。</param>
      <exception cref="T:System.TimeoutException"><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> によって設定されたタイムアウト値を操作が超えた場合にスローされます。</exception>
      <exception cref="T:System.OperationCanceledException">クライアント エンティティが終了または中止された場合にスローされます。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException"><paramref name="lockToken" /> で表されるメッセージでメッセージ ロックが失われた場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Defer(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>メッセージの処理を中断します。</summary>
      <param name="lockToken">ロックされたメッセージ インスタンスにバインドされたロック トークン。</param>
      <param name="propertiesToModify">変更するプロパティ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.DeferAsync(System.Guid)">
      <summary>メッセージの処理を非同期的に中断します。</summary>
      <returns>非同期延期操作を表すタスク インスタンス。</returns>
      <param name="lockToken">ロックされたメッセージ インスタンスにバインドされたロック トークン。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.DeferAsync(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>メッセージの処理を非同期的に中断します。</summary>
      <returns>非同期延期操作を表すタスク インスタンス。</returns>
      <param name="lockToken">ロックされたメッセージ インスタンスにバインドされたロック トークン。</param>
      <param name="propertiesToModify">変更するプロパティ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndAbandon(System.IAsyncResult)">
      <summary>非同期操作を終了して、メッセージを破棄し、ロックを放棄します。</summary>
      <param name="result">非同期メッセージ放棄操作の状態を表す <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndAcceptMessageSession(System.IAsyncResult)">
      <summary>単一のトランザクションで処理するための関連メッセージのグループ化を可能にするメッセージ セッションを受け入れる非同期操作を終了します。</summary>
      <returns>単一のトランザクションで処理するための関連メッセージをグループ化できる <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" />。</returns>
      <param name="result">非同期メッセージ セッション受け入れ操作の状態を表す <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndAddRule(System.IAsyncResult)">
      <summary>非同期ルール追加操作を終了します。</summary>
      <param name="result"><see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AddRule(Microsoft.ServiceBus.Messaging.RuleDescription)" /> を参照する <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndComplete(System.IAsyncResult)">
      <summary>メッセージの処理を完了する非同期操作を終了します。</summary>
      <param name="result">非同期メッセージ処理完了操作の状態を表す <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndCompleteBatch(System.IAsyncResult)">
      <summary>バッチの処理を完了する非同期操作を終了します。</summary>
      <param name="result">非同期メッセージ処理完了操作の状態を表す <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndDeadLetter(System.IAsyncResult)">
      <summary>メッセージを配信不能キューに移動する非同期操作を終了します。</summary>
      <param name="result">メッセージを配信不能キューに移動する非同期操作の状態を表す <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndDefer(System.IAsyncResult)">
      <summary>メッセージの処理を中断する非同期操作を終了します。</summary>
      <param name="result">メッセージの処理を中断する非同期操作の状態を表す <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndGetMessageSessions(System.IAsyncResult)">
      <summary>メッセージの処理を取得する非同期操作を終了します。</summary>
      <returns>メッセージの処理を取得する非同期操作。</returns>
      <param name="result">メッセージの処理を中断する非同期操作の状態を表す <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndPeek(System.IAsyncResult)">
      <summary>非同期ピーク操作を終了します。</summary>
      <returns>キュー内の最初のメッセージ。</returns>
      <param name="result">非同期ピーク操作の状態を表す <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndPeekBatch(System.IAsyncResult)">
      <summary>メッセージのバッチに対する非同期ピーク操作を終了します。</summary>
      <returns>バッチ内の最初のメッセージのコレクション。</returns>
      <param name="result">非同期ピーク バッチ操作の状態を表す <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndReceive(System.IAsyncResult)">
      <summary>メッセージを受信する非同期操作を終了します。</summary>
      <returns>受信したメッセージを表す <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />。</returns>
      <param name="result">メッセージを受信する非同期操作の状態を表す <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndReceiveBatch(System.IAsyncResult)">
      <summary>バッチを受け取る非同期操作を終了します。</summary>
      <returns>バッチを受け取る非同期操作。</returns>
      <param name="result">メッセージを受信する非同期操作の状態を表す <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndRemoveRule(System.IAsyncResult)">
      <summary>非同期ルール削除操作を終了します。</summary>
      <param name="result"><see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RemoveRule(System.String)" /> を参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.FormatDeadLetterPath(System.String,System.String)">
      <summary>指定されたトピック パスとサブスクリプション名を使用して、形式名配信不能パスを作成します。</summary>
      <returns>指定されたトピック パスとサブスクリプション名を使用して形式名配信不能パスが構築された <see cref="T:System.String" />。</returns>
      <param name="topicPath">トピックの完全なパス名。</param>
      <param name="subscriptionName">サブスクリプションの名前。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.FormatSubscriptionPath(System.String,System.String)">
      <summary>指定されたトピック パスとサブスクリプション名を使用して、形式名サブスクリプション パスを構築します。</summary>
      <returns>指定されたトピック パスとサブスクリプション名を使用して形式名サブスクリプション パスが構築された <see cref="T:System.String" />。</returns>
      <param name="topicPath">トピックの完全なパス名。</param>
      <param name="subscriptionName">サブスクリプションの名前。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.GetMessageSessions">
      <summary>単一のトランザクションで処理するための関連メッセージのグループ化を可能にするメッセージ セッションを取得します。</summary>
      <returns>単一のトランザクションで処理するための関連メッセージのグループ化を可能にするメッセージ セッション。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.GetMessageSessions(System.DateTime)">
      <summary>セッションの状態が <paramref name="lastUpdatedTime" /> 以降に更新されたメッセージ セッションをすべて取得します。</summary>
      <returns>単一のトランザクションで処理するための関連メッセージのグループ化を可能にするメッセージ セッション。</returns>
      <param name="lastUpdatedTime">セッションが最後に更新された時刻。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.GetMessageSessionsAsync">
      <summary>単一のトランザクションで処理するための関連メッセージのグループ化を可能にするメッセージ セッションを非同期的に取得します。</summary>
      <returns>非同期メッセージ取得セッション操作を表すタスク インスタンス。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.GetMessageSessionsAsync(System.DateTime)">
      <summary>単一のトランザクションで処理するための関連メッセージのグループ化を可能にするメッセージ セッションを非同期的に取得します。</summary>
      <returns>非同期メッセージ取得セッション操作を表すタスク インスタンス。</returns>
      <param name="lastUpdatedTime">セッションが最後に更新された時刻。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionClient.MessagingFactory">
      <summary>このサブスクリプション クライアントの作成に使用されるメッセージング ファクトリを取得します。</summary>
      <returns>このサブスクリプション クライアントの作成に使用されるメッセージング ファクトリ。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionClient.Mode">
      <summary>受信したメッセージを処理する際にメッセージ受信モードを取得します。</summary>
      <returns>受信したメッセージを処理する際のメッセージ <see cref="T:Microsoft.ServiceBus.Messaging.ReceiveMode" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionClient.Name">
      <summary>サブスクリプションの名前を取得します。</summary>
      <returns>サブスクリプションの名前。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnAbort">
      <summary>中止アクションを実行します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginAcceptMessageSession(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>BeginAcceptMessageSession 操作を呼び出すと実行されます。</summary>
      <returns>メッセージ セッションを受け入れる非同期操作を参照する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="sessionId">メッセージ セッションのセッション識別子。</param>
      <param name="receiveMode">受信メッセージを使用して処理する場合の受信モード。</param>
      <param name="serverWaitTime">タイムアウトになるまでにサーバーがメッセージの処理を待機する時間</param>
      <param name="timeout">タイムアウトになるまで、サーバーがメッセージの処理を待機する時間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginAddRule(Microsoft.ServiceBus.Messaging.RuleDescription,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>BeginAddRule 操作を呼び出すと実行されます。</summary>
      <returns>非同期操作を参照して新しいルールをサブスクリプションに追加する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="description">追加するルールのメタデータを提供するルールの説明。</param>
      <param name="timeout">タイムアウトになるまでに操作が待機する時間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>終了開始アクションを実行します。</summary>
      <returns>非同期 BeginClose を参照する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="timeout">操作がタイムアウトするまでの待機時間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">受信操作に関する情報を含むユーザー定義オブジェクト。操作が完了すると、このオブジェクトは BeginClose デリゲートに渡されます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginCreateReceiver(Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>受信者作成開始アクションを実行します。</summary>
      <returns>非同期 <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.CreateReceiver(Microsoft.ServiceBus.Messaging.ReceiveMode)" /> を参照する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="receiveMode">メッセージ <see cref="T:Microsoft.ServiceBus.Messaging.ReceiveMode" />。</param>
      <param name="timeout">操作がタイムアウトするまでの待機時間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">受信操作に関する情報を含むユーザー定義オブジェクト。このオブジェクトは、操作の完了時に <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndCreateReceiver(System.IAsyncResult)" /> デリゲートに渡されます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginCreateReceiver(System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>受信者作成開始アクションを実行します。</summary>
      <returns>非同期 <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.CreateReceiver(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)" /> を参照する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="subQueuePath">サブキューのパス。</param>
      <param name="subQueueName">サブキューの名前。</param>
      <param name="receiveMode">メッセージ <see cref="T:Microsoft.ServiceBus.Messaging.ReceiveMode" />。</param>
      <param name="timeout">操作がタイムアウトするまでの待機時間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">受信操作に関する情報を含むユーザー定義オブジェクト。このオブジェクトは、操作の完了時に <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndCreateReceiver(System.IAsyncResult)" /> デリゲートに渡されます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginGetMessageSessions(System.DateTime,System.AsyncCallback,System.Object)">
      <summary>BeginGetMessageSessions 操作を呼び出すと実行されます。</summary>
      <returns>非同期操作を参照して新しいルールをサブスクリプションに追加する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="lastUpdatedTime">セッションが最後に更新された時刻。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginRemoveRule(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>ランタイム クライアント プロトコルを介して <see cref="T:Microsoft.ServiceBus.Messaging.Subscription" /> からの <see cref="T:Microsoft.ServiceBus.Messaging.Rule" />  の削除を開始します。</summary>
      <returns>非同期 <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RemoveRule(System.String)" /> を参照する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="ruleName">削除するルールの名前。</param>
      <param name="timeout">操作がタイムアウトするまでの待機時間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">受信操作に関する情報を含むユーザー定義オブジェクト。このオブジェクトは、操作の完了時に <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RemoveRule(System.String)" /> デリゲートに渡されます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginRemoveRulesByTag(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>タグを使用し、ランタイム クライアント プロトコルを介して <see cref="T:Microsoft.ServiceBus.Messaging.Subscription" />からの <see cref="T:Microsoft.ServiceBus.Messaging.Rule" /> の削除を開始します。</summary>
      <returns>非同期操作を参照して新しいルールをサブスクリプションに追加する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="tag">使用されるタグ。</param>
      <param name="timeout">操作がタイムアウトするまでの待機時間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">受信操作に関する情報を含むユーザー定義オブジェクト。このオブジェクトは、操作の完了時に <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RemoveRule(System.String)" /> デリゲートに渡されます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnClose(System.TimeSpan)">
      <summary>終了アクションを実行します。</summary>
      <param name="timeout">操作がタイムアウトするまでの待機時間。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnEndAcceptMessageSession(System.IAsyncResult)">
      <summary>EndAcceptMessageSession 操作を呼び出すと実行されます。</summary>
      <returns>単一のトランザクションで処理するための関連メッセージをグループ化できる <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" />。</returns>
      <param name="result">非同期メッセージ セッション受け入れ操作の状態を表す <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnEndAddRule(System.IAsyncResult)">
      <summary><see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginAddRule(Microsoft.ServiceBus.Messaging.RuleDescription,System.TimeSpan,System.AsyncCallback,System.Object)" /> への非同期呼び出しを終了します。</summary>
      <param name="result"><see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginAddRule(Microsoft.ServiceBus.Messaging.RuleDescription,System.TimeSpan,System.AsyncCallback,System.Object)" />からの <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnEndClose(System.IAsyncResult)">
      <summary>クローズ終了アクションを実行します。</summary>
      <param name="result">非同期 BeginClose を参照する <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnEndCreateReceiver(System.IAsyncResult)">
      <summary>受信者作成終了アクションを実行します。</summary>
      <returns>新しく作成された <see cref="T:Microsoft.ServiceBus.Messaging.MessageReceiver" /> オブジェクト。</returns>
      <param name="result"><see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndCreateReceiver(System.IAsyncResult)" /> を参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnEndGetMessageSessions(System.IAsyncResult)">
      <summary>メッセージ取得終了アクションを実行します。</summary>
      <returns>メッセージ取得終了アクション。</returns>
      <param name="result">メッセージの結果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnEndRemoveRule(System.IAsyncResult)">
      <summary><see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginRemoveRule(System.String,System.TimeSpan,System.AsyncCallback,System.Object)" /> への非同期呼び出しを終了します。</summary>
      <param name="result"><see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginRemoveRule(System.String,System.TimeSpan,System.AsyncCallback,System.Object)" />からの <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnEndRemoveRules(System.IAsyncResult)">
      <summary><see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginRemoveRule(System.String,System.TimeSpan,System.AsyncCallback,System.Object)" /> への非同期呼び出しを終了します。</summary>
      <param name="result">非同期の結果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnMessage(System.Action{Microsoft.ServiceBus.Messaging.BrokeredMessage})">
      <summary>イベント駆動型メッセージ ポンプでメッセージを処理します。</summary>
      <param name="callback">操作が完了したときに呼び出すメソッド。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnMessage(System.Action{Microsoft.ServiceBus.Messaging.BrokeredMessage},Microsoft.ServiceBus.Messaging.OnMessageOptions)">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.OnMessageOptions" /> オプションの特定のセットを使い、イベント駆動型メッセージ ポンプ内でメッセージを処理します。</summary>
      <param name="callback">操作が完了したときに呼び出すメソッド。</param>
      <param name="onMessageOptions">メッセージ ポンプをインスタンス化する <see cref="T:Microsoft.ServiceBus.Messaging.OnMessageOptions" /> オプションを指定します。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnMessageAsync(System.Func{Microsoft.ServiceBus.Messaging.BrokeredMessage,System.Threading.Tasks.Task})">
      <summary>メッセージを非同期的に処理します。</summary>
      <param name="callback">操作が完了したときに呼び出す非同期メソッド。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnMessageAsync(System.Func{Microsoft.ServiceBus.Messaging.BrokeredMessage,System.Threading.Tasks.Task},Microsoft.ServiceBus.Messaging.OnMessageOptions)">
      <summary>メッセージを非同期的に処理します。</summary>
      <param name="callback">操作が完了したときに呼び出す非同期メソッド。</param>
      <param name="onMessageOptions">メッセージに関連付けられているオプション。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Peek">
      <summary>キュー内の最初のメッセージを削除せずに返します。</summary>
      <returns>返されたメッセージ。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Peek(System.Int64)">
      <summary>キュー内の最初のメッセージを削除せずに返します。</summary>
      <returns>返されたメッセージ。</returns>
      <param name="fromSequenceNumber">メッセージを参照する開始点。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.PeekAsync">
      <summary>キュー内の最初のメッセージを削除せず、非同期的に返します。</summary>
      <returns>非同期ピーク操作を表すタスク インスタンス。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.PeekAsync(System.Int64)">
      <summary>キュー内の最初のメッセージを削除せず、非同期的に返します。</summary>
      <returns>非同期ピーク操作を表すタスク インスタンス。</returns>
      <param name="fromSequenceNumber">メッセージを参照する開始点。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.PeekBatch(System.Int32)">
      <summary>バッチ内の最初のメッセージを削除せずに返します。</summary>
      <returns>バッチ内の最初のメッセージのコレクション。</returns>
      <param name="messageCount">バッチ内のメッセージの数。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.PeekBatch(System.Int64,System.Int32)">
      <summary>バッチ内の最初のメッセージを削除せずに返します。</summary>
      <returns>バッチ内の最初のメッセージのコレクション。</returns>
      <param name="fromSequenceNumber">メッセージを参照する開始点。</param>
      <param name="messageCount">バッチ内のメッセージの数。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.PeekBatchAsync(System.Int32)">
      <summary>バッチ内の最初のメッセージを削除せずに、非同期的に返します。</summary>
      <returns>非同期バッチ ピーク操作を表すタスク インスタンス。</returns>
      <param name="messageCount">バッチ内のメッセージの数。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.PeekBatchAsync(System.Int64,System.Int32)">
      <summary>バッチ内の最初のメッセージを削除せずに、非同期的に返します。</summary>
      <returns>非同期バッチ ピーク操作を表すタスク インスタンス。</returns>
      <param name="fromSequenceNumber">メッセージを参照する開始点。</param>
      <param name="messageCount">バッチ内のメッセージの数。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionClient.PrefetchCount">
      <summary>メッセージ受信者が同時に要求できるメッセージの数を取得または設定します。</summary>
      <returns>メッセージ受信者が同時に要求できるメッセージの数。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Receive">
      <summary><see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalReceiver" /> を使用してメッセージを受信します。</summary>
      <returns>受信したメッセージを表す <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />。</returns>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">サブスクリプションが存在しない場合にスローされます。</exception>
      <exception cref="T:System.TimeoutException"><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> を介して設定されたタイムアウト値を操作が超えた場合にスローされます。</exception>
      <exception cref="T:System.OperationCanceledException">クライアント エンティティが終了または中止された場合にスローされます。</exception>
      <exception cref="T:System.UnauthorizedAccessException">認証エラーがある場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Receive(System.Int64)">
      <summary><see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalReceiver" /> を使用してメッセージを受信します。</summary>
      <returns>受信したメッセージを表す <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />。</returns>
      <param name="sequenceNumber">受信する遅延メッセージのシーケンス番号。</param>
      <exception cref="T:System.OperationCanceledException">クライアント エンティティが終了または中止された場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Receive(System.TimeSpan)">
      <summary><see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalReceiver" /> を使用してメッセージを受信します。</summary>
      <returns>受信したメッセージを表す <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />。</returns>
      <param name="serverWaitTime">タイムアウトになる前にサーバーがメッセージの受信を待機する時間。</param>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="serverWaitTime" /> が負の場合にスローされます。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">サブスクリプションが存在しない場合にスローされます。</exception>
      <exception cref="T:System.OperationCanceledException">クライアント エンティティが終了または中止された場合にスローされます。</exception>
      <exception cref="T:System.TimeoutException"><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> を介して設定されたタイムアウト値を操作が超えた場合にスローされます。</exception>
      <exception cref="T:System.UnauthorizedAccessException">認証エラーがある場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.ReceiveAsync">
      <summary><see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalReceiver" /> を使用してメッセージを非同期的に受信します。</summary>
      <returns>非同期受信操作を表すタスク インスタンス。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.ReceiveAsync(System.Int64)">
      <summary><see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalReceiver" /> を使用してメッセージを非同期的に受信します。</summary>
      <returns>非同期受信操作を表すタスク インスタンス。</returns>
      <param name="sequenceNumber">受信する遅延メッセージのシーケンス番号。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.ReceiveAsync(System.TimeSpan)">
      <summary><see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalReceiver" /> を使用してメッセージを非同期的に受信します。</summary>
      <returns>非同期受信操作を表すタスク インスタンス。</returns>
      <param name="serverWaitTime">タイムアウトになる前にサーバーがメッセージの受信を待機する時間。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.ReceiveBatch(System.Collections.Generic.IEnumerable{System.Int64})">
      <summary>非同期操作の後にバッチを受け取ります。</summary>
      <returns>非同期操作の後のバッチ。</returns>
      <param name="sequenceNumbers">シーケンス番号。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.ReceiveBatch(System.Int32)">
      <summary>非同期操作の後にバッチを受け取ります。</summary>
      <returns>非同期操作の後のバッチ。</returns>
      <param name="messageCount">バッチ内で返されるメッセージの最大数。これは近似値なので、 メッセージの数が <paramref name="messageCount" /> を超えていても、返されるメッセージの数が少なくなる可能性があります。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.ReceiveBatch(System.Int32,System.TimeSpan)">
      <summary>非同期操作の後にバッチを受け取ります。</summary>
      <returns>非同期操作の後のバッチ。</returns>
      <param name="messageCount">バッチで受信するメッセージの最大数。</param>
      <param name="serverWaitTime">サーバーがメッセージの処理を待機する時間。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.ReceiveBatchAsync(System.Collections.Generic.IEnumerable{System.Int64})">
      <summary>一連のメッセージを非同期的に受け取ります (バッチ処理の場合)。</summary>
      <returns>非同期バッチ受信操作を表すタスク インスタンス。</returns>
      <param name="sequenceNumbers">シーケンス番号。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.ReceiveBatchAsync(System.Int32)">
      <summary>一連のメッセージを非同期的に受け取ります (バッチ処理の場合)。</summary>
      <returns>非同期バッチ受信操作を表すタスク インスタンス。</returns>
      <param name="messageCount">バッチ内で返されるメッセージの最大数。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.ReceiveBatchAsync(System.Int32,System.TimeSpan)">
      <summary>一連のメッセージを非同期的に受け取ります (バッチ処理の場合)。</summary>
      <returns>非同期バッチ受信操作を表すタスク インスタンス。</returns>
      <param name="messageCount">バッチ内で返されるメッセージの最大数。</param>
      <param name="serverWaitTime">サーバーがメッセージの処理を待機する時間。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RegisterSessionHandler(System.Type)">
      <summary>クライアント セッションのハンドラーを登録します。</summary>
      <param name="handlerType">ハンドラーのタイプ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RegisterSessionHandler(System.Type,Microsoft.ServiceBus.Messaging.SessionHandlerOptions)">
      <summary>クライアント セッションのハンドラーを登録します。</summary>
      <param name="handlerType">ハンドラーのタイプ。</param>
      <param name="options">セッション ハンドラー オプション。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RegisterSessionHandlerAsync(System.Type)">
      <summary>クライアント セッションのハンドラーを非同期で登録します。</summary>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
      <param name="handlerType">ハンドラーのタイプ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RegisterSessionHandlerAsync(System.Type,Microsoft.ServiceBus.Messaging.SessionHandlerOptions)">
      <summary>クライアント セッションのハンドラーを非同期で登録します。</summary>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
      <param name="handlerType">ハンドラーのタイプ。</param>
      <param name="options">セッション ハンドラー オプション。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RegisterSessionHandlerFactory(Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory,Microsoft.ServiceBus.Messaging.SessionHandlerOptions)">
      <summary>クライアント セッションのハンドラー ファクトリを登録します。</summary>
      <param name="factory">メッセージ セッションに関連付けられたハンドラー ファクトリのインターフェイス。</param>
      <param name="options">セッション ハンドラー オプション。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RegisterSessionHandlerFactory(Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory,Microsoft.ServiceBus.Messaging.SessionHandlerOptions)">
      <summary>クライアント セッションのハンドラー ファクトリを登録します。</summary>
      <param name="factory">メッセージ セッションに関連付けられたハンドラー ファクトリのインターフェイス。</param>
      <param name="options">セッション ハンドラー オプション。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RegisterSessionHandlerFactoryAsync(Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory,Microsoft.ServiceBus.Messaging.SessionHandlerOptions)">
      <summary>クライアント セッションのハンドラー ファクトリを非同期で登録します。</summary>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
      <param name="factory">メッセージ セッションに関連付けられたハンドラー ファクトリのインターフェイス。</param>
      <param name="options">セッション ハンドラー オプション。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RegisterSessionHandlerFactoryAsync(Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory,Microsoft.ServiceBus.Messaging.SessionHandlerOptions)">
      <summary>クライアント セッションのハンドラー ファクトリを非同期で登録します。</summary>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
      <param name="factory">メッセージ セッションに関連付けられたハンドラー ファクトリのインターフェイス。</param>
      <param name="options">セッション ハンドラー オプション。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RemoveRule(System.String)">
      <summary><paramref name="ruleName" /> で説明されているルールを削除します。</summary>
      <param name="ruleName">ルールの名前。</param>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">ルールが存在しない場合にスローされます。</exception>
      <exception cref="T:System.ArgumentException"><paramref name="description.Name" /> が null、空白、空、または正しい形式でない場合にスローされます。</exception>
      <exception cref="T:System.TimeoutException"><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> を介して設定されたタイムアウト値を操作が超えた場合にスローされます。</exception>
      <exception cref="T:System.OperationCanceledException">クライアント エンティティが終了または中止された場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RemoveRuleAsync(System.String)">
      <summary><paramref name="ruleName" /> で記述されたルールを非同期的に削除します。</summary>
      <returns>非同期ルール削除操作を表すタスク インスタンス。</returns>
      <param name="ruleName">ルールの名前。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionClient.TopicPath">
      <summary>トピックの完全なパス名を取得します。</summary>
      <returns>トピックの完全なパス名。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription">
      <summary>サブスクリプションの説明を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionDescription.#ctor(System.String,System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="topicPath">トピック パス。</param>
      <param name="subscriptionName">サブスクリプション名。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.AccessedAt">
      <summary>このサブスクリプションに対する受信要求が最後に行われた時刻を取得します。</summary>
      <returns>このサブスクリプションに対する受信要求があった最後の時刻。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.AutoDeleteOnIdle">
      <summary>その後にサブスクリプションが自動的に削除される <see cref="T:System.TimeSpan" /> アイドル間隔を取得または設定します。最小期間は 5 分です。</summary>
      <returns>サブスクリプションのアイドル時間の自動削除。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.AvailabilityStatus">
      <summary>メッセージングのエンティティ可用性ステータスを取得します。</summary>
      <returns>メッセージングのエンティティ可用性ステータス。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.CreatedAt">
      <summary>メッセージが作成された正確な時刻を取得します。</summary>
      <returns>メッセージが作成された時刻。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.DefaultMessageTimeToLive">
      <summary>ライブ値への既定のメッセージ時間を取得または設定します。これは、メッセージの期限が切れた後の旗艦で、メッセージが Service Bus に送信された時点から始まります。<see cref="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.TimeToLive" />で がメッセージ自体に設定されていない場合に使われる既定値です。TimeToLive 値より古いメッセージは期限切れになり、メッセージ ストアに保持されなくなります。サブスクライバーは期限切れのメッセージを受信できません。メッセージの TimeToLive 値は、ここで指定された値よりも低くできますが、既定では TimeToLive は <see cref="T:System.TimeSpan.MaxValue" /> に設定されています。したがって、このプロパティは、メッセージに適用されるライブ値の既定時間になります。</summary>
      <returns>サブスクリプションのライブまでの既定メッセージ時間。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.EnableBatchedOperations">
      <summary>バッチ処理操作が有効になっているかどうかを示す値を取得または設定します。</summary>
      <returns>バッチ処理された操作が有効になっている場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.EnableDeadLetteringOnFilterEvaluationExceptions">
      <summary>サブスクリプションにフィルター評価例外で配信不能サポートがあるかどうかを示す値を取得または設定します。</summary>
      <returns>サブスクリプションにフィルター評価例外で配信不能サポートがある場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.EnableDeadLetteringOnMessageExpiration">
      <summary>メッセージの有効期限が切れたときにサブスクリプションに配信不能サポートがあるかどうかを示す値を取得または設定します。</summary>
      <returns>メッセージの有効期限が切れたときにサブスクリプションに配信不能サポートがある場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.ForwardDeadLetteredMessagesTo">
      <summary>配信不能メッセージの転送先である受信者へのパスを取得または設定します。</summary>
      <returns>配信不能メッセージの転送先である受信者へのパス。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.ForwardTo">
      <summary>メッセージが転送される受信者へのパスを取得または設定します。</summary>
      <returns>メッセージが転送される受信者へのパス。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration">
      <summary>サブスクリプションのロック期間を取得または設定します。</summary>
      <returns>サブスクリプションのロック期間。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.MaxDeliveryCount">
      <summary>最大配信回数を取得または設定します。</summary>
      <returns>最大配信回数。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.MessageCount">
      <summary>メッセージの数を取得します。</summary>
      <returns>メッセージの数。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.MessageCountDetails">
      <summary>サブスクリプションに関するメッセージの詳細を取得します。</summary>
      <returns>アクティブなメッセージ、配信不能、スケジュールされたメッセージ、他のキューやサブスクリプション、トピックに転送されたメッセージ、および配信不能キューに転送されたメッセージの数とともに <see cref="T:Microsoft.ServiceBus.Messaging.MessageCountDetails" /> を返します。</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.SubscriptionDescription.MessageTimeToLiveDefaultValue">
      <summary>ライブ既定値までのメッセージ時間を指定します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.Name">
      <summary>サブスクリプションの説明の名前を取得します。</summary>
      <returns>サブスクリプションの説明の名前。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.RequiresSession">
      <summary>サブスクリプションがセッションの概念をサポートしているかどうかを示す値を取得または設定します。</summary>
      <returns>受信側のアプリケーションが <see cref="T:Microsoft.ServiceBus.Messaging.SessionReceiver" /> を介してキューからのみ受け取ることができる場合は true、キューが <see cref="T:Microsoft.ServiceBus.Messaging.SessionReceiver" /> を使用して受け取れない場合は false になります。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.Status">
      <summary>サブスクリプションの現在のステータスを取得または設定します (有効または無効)。エンティティを無効にすると、そのエンティティはメッセージを送受信できません。</summary>
      <returns>サブスクリプションの現在のステータス。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.TopicPath">
      <summary>このサブスクリプションの説明が属するトピックのパスを取得します。</summary>
      <returns>このサブスクリプションの説明が属するトピックのパス。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.UpdatedAt">
      <summary>メッセージが更新された正確な時刻を取得します。</summary>
      <returns>メッセージが更新された時刻。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.UserMetadata">
      <summary>ユーザー メタデータを取得または設定します。</summary>
      <returns>ユーザー メタデータ。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.TileType">
      <summary>メッセージング タイルのタイプを列挙します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileSquareImage">
      <summary>TileSquareImage タイプ。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideBlockAndText01">
      <summary>TileWideBlockAndText01 タイプ。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideImage">
      <summary>TileWideImage タイプ。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideImageAndText">
      <summary>TileWideImageAndText タイプ。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideImageCollection">
      <summary>TileWideImageCollection タイプ。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImage01">
      <summary>TileWidePeekImage01 タイプ。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImage02">
      <summary>TileWidePeekImage02 タイプ。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImage03">
      <summary>TileWidePeekImage03 タイプ。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImage04">
      <summary>TileWidePeekImage04 タイプ。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImage05">
      <summary>TileWidePeekImage05 タイプ。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImage06">
      <summary>TileWidePeekImage06 タイプ。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImageAndText">
      <summary>TileWidePeekImageAndText タイプ。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImageCollection01">
      <summary>TileWidePeekImageCollection01 タイプ。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImageCollection02">
      <summary>TileWidePeekImageCollection02 タイプ。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImageCollection03">
      <summary>TileWidePeekImageCollection03 タイプ。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImageCollection04">
      <summary>TileWidePeekImageCollection04 タイプ。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImageCollection05">
      <summary>TileWidePeekImageCollection05 タイプ。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImageCollection06">
      <summary>TileWidePeekImageCollection06 タイプ。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideSmallImageAndText01">
      <summary>TileWideSmallImageAndText01 タイプ。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideSmallImageAndText02">
      <summary>TileWideSmallImageAndText02 タイプ。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideSmallImageAndText03">
      <summary>TileWideSmallImageAndText03 タイプ。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideSmallImageAndText04">
      <summary>TileWideSmallImageAndText04 タイプ。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideText01">
      <summary>TileWideText01 タイプ。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideText02">
      <summary>TileWideText02 タイプ。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideText03">
      <summary>TileWideText03 タイプ。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideText04">
      <summary>TileWideText04 タイプ。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideText05">
      <summary>TileWideText05 タイプ。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideText06">
      <summary>TileWideText06 タイプ。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideText07">
      <summary>TileWideText07 タイプ。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideText08">
      <summary>TileWideText08 タイプ。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideText09">
      <summary>TileWideText09 タイプ。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.ToastType">
      <summary>トースト通知用のイメージとテキストのタイプを列挙します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ToastType.ToastImageAndText01">
      <summary>最初のタイプのイメージとテキストを指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ToastType.ToastImageAndText02">
      <summary>2 番目のタイプのイメージとテキストを指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ToastType.ToastImageAndText03">
      <summary>3 番目のタイプのイメージとテキストを指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ToastType.ToastImageAndText04">
      <summary>4 番目のタイプのイメージとテキストを指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ToastType.ToastSmallImageAndText01">
      <summary>最初のタイプの小さなイメージとテキストを指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ToastType.ToastSmallImageAndText02">
      <summary>2 番目のタイプの小さなイメージとテキストを指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ToastType.ToastSmallImageAndText03">
      <summary>3 番目のタイプの小さなイメージとテキストを指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ToastType.ToastSmallImageAndText04">
      <summary>4 番目のタイプの小さなイメージとテキストを指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ToastType.ToastText01">
      <summary>最初のタイプのテキストを指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ToastType.ToastText02">
      <summary>2 番目のタイプのテキストを指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ToastType.ToastText03">
      <summary>3 番目のタイプのテキストを指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ToastType.ToastText04">
      <summary>4 番目のタイプのテキストを指定します。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.TopicClient">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.Topic" /> にアクセスしてランタイム操作を実行するアンカー クラス。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.BeginSend(Microsoft.ServiceBus.Messaging.BrokeredMessage,System.AsyncCallback,System.Object)">
      <summary>メッセージを送信する非同期操作を開始します。</summary>
      <returns>非同期操作を参照してメッセージを送信する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="message">送信するメッセージ。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
      <exception cref="T:System.TimeoutException">操作がタイムアウトしたときにスローされます。タイムアウト期間は、<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" /> を介して初期化されます。タイムアウト値が比較的低い場合は、この例外を避けるために <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> の値を増やす必要があるかもしれません。</exception>
      <exception cref="T:System.ArgumentException">BrokeredMessage が null のときにスローされます。</exception>
      <exception cref="T:System.InvalidOperationException"><paramref name="message" /> が既に <see cref="T:Microsoft.ServiceBus.Messaging.TopicClient" /> または <see cref="T:Microsoft.ServiceBus.Messaging.MessageSender" /> によって一度送信されている場合にスローされます。</exception>
      <exception cref="T:System.NotSupportedException">指摘される配信不能トピック/サブスクリプションが送信操作をサポートしていない場合にスローされます。</exception>
      <exception cref="T:System.OperationCanceledException">クライアント エンティティが終了または中止された場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.BeginSendBatch(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage},System.AsyncCallback,System.Object)">
      <summary>バッチでメッセージを送信する非同期操作を開始します。</summary>
      <returns>非同期操作を参照してメッセージを送信する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="messages">送信するメッセージ。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">非同期操作に関する状態情報を含むユーザー定義オブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.Create(System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.TopicClient" /> の新しいインスタンスを作成します。</summary>
      <returns>作成された <see cref="T:Microsoft.ServiceBus.Messaging.TopicClient" />。</returns>
      <param name="path">パス。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.CreateFromConnectionString(System.String,System.String)">
      <summary>指定された接続文字列を使用して <see cref="T:Microsoft.ServiceBus.Messaging.TopicClient" /> の新しいインスタンスを作成します。</summary>
      <returns>作成された <see cref="T:Microsoft.ServiceBus.Messaging.TopicClient" />。</returns>
      <param name="connectionString">使用された接続文字列。</param>
      <param name="path">パス。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.EndSend(System.IAsyncResult)">
      <summary>メッセージを送信する非同期操作を終了します。</summary>
      <param name="result">メッセージを送信する非同期操作の状態を表す <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.EndSendBatch(System.IAsyncResult)">
      <summary>メッセージを送信する非同期操作を終了します。</summary>
      <param name="result">メッセージを送信する非同期操作の状態を表す <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicClient.IsSubQueue">
      <summary>メッセージ受信者がサブキューから作成されたかどうかを示す値を取得または設定します。</summary>
      <returns>メッセージ受信者がサブキューから作成された場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicClient.MessagingFactory">
      <summary>この <see cref="T:Microsoft.ServiceBus.Messaging.TopicClient" /> オブジェクトの作成に使用されたメッセージング ファクトリを取得または設定します。</summary>
      <returns>この <see cref="T:Microsoft.ServiceBus.Messaging.TopicClient" /> オブジェクトの作成に使用されたメッセージング ファクトリ。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.OnAbort">
      <summary>中止アクションを実行します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>終了開始アクションを実行します。</summary>
      <returns>非同期終了操作を参照する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="timeout">操作がタイムアウトするまでの待機時間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">受信操作に関する情報を含むユーザー定義オブジェクト。このオブジェクトは、操作が完了すると EndClose デリゲートに渡されます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.OnBeginCreateSender(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>送信者作成開始アクションを実行します。</summary>
      <returns>非同期 <see cref="M:Microsoft.ServiceBus.Messaging.TopicClient.CreateSender" /> を参照する <see cref="T:System.IAsyncResult" />。</returns>
      <param name="timeout">操作がタイムアウトするまでの待機時間。</param>
      <param name="callback">操作が完了したときに呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">受信操作に関する情報を含むユーザー定義オブジェクト。操作が完了すると、このオブジェクトは <see cref="M:Microsoft.ServiceBus.Messaging.TopicClient.EndCreateSender(System.IAsyncResult)" /> に渡されます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.OnClose(System.TimeSpan)">
      <summary>終了アクションを実行します。</summary>
      <param name="timeout">操作がタイムアウトするまでの待機時間。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.OnEndClose(System.IAsyncResult)">
      <summary>クローズ終了アクションを実行します。</summary>
      <param name="result">非同期終了操作を参照する <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.OnEndCreateSender(System.IAsyncResult)">
      <summary>送信者作成終了アクションを実行します。</summary>
      <returns>新しく作成された <see cref="T:Microsoft.ServiceBus.Messaging.MessageSender" /> オブジェクト。</returns>
      <param name="result">非同期 <see cref="M:Microsoft.ServiceBus.Messaging.TopicClient.CreateSender" /> を参照する <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicClient.Path">
      <summary>ファイルの完全なパス名を取得または設定します。</summary>
      <returns>ファイルの完全なパス名。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.Send(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary><see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalSender" /> を使用してメッセージを送信します。</summary>
      <param name="message">送信するメッセージ。</param>
      <exception cref="T:System.TimeoutException">操作がタイムアウトしたときにスローされます。タイムアウト値が比較的低い場合は、この例外を回避するために <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> 介してタイムアウト期間が初期化されます。</exception>
      <exception cref="T:System.ArgumentException"><see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> が nullの場合にスローされます。</exception>
      <exception cref="T:System.InvalidOperationException"><paramref name="message" /> が既に <see cref="T:Microsoft.ServiceBus.Messaging.TopicClient" /> または <see cref="T:Microsoft.ServiceBus.Messaging.MessageSender" /> によって一度送信されている場合にスローされます。</exception>
      <exception cref="T:System.OperationCanceledException">クライアント エンティティが終了または中止された場合にスローされます。</exception>
      <exception cref="T:System.UnauthorizedAccessException">I/O エラーまたはセキュリティ エラーがある場合にスローされます。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">シリアル化または逆シリアル化中にエラーが発生した場合にスローされます。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">トピックが存在しない場合にスローされます。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">メッセージング エラーがある場合にスローされます。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.SendAsync(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary><see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalSender" /> を使用してメッセージを非同期的に送信します。</summary>
      <returns>操作の非同期結果。</returns>
      <param name="message">送信するメッセージ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.SendBatch(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage})">
      <summary>ブローカー メッセージのセットを送信します (バッチ処理用)。</summary>
      <param name="messages">送信するメッセージ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.SendBatchAsync(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage})">
      <summary>一連のブローカー メッセージを非同期的に送信します (バッチ処理用)。</summary>
      <returns>操作の非同期結果。</returns>
      <param name="messages">送信するメッセージ。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.TopicDescription">
      <summary>トピックの説明を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicDescription.#ctor(System.String)">
      <summary>指定された相対パスで <see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="path">サービス名前空間ベース アドレスに対するトピックのパス。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.AccessedAt">
      <summary>メッセージがトピックに最後に送信された日時を取得します。</summary>
      <returns>メッセージがトピックに最後に送信された日時。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.Authorization">
      <summary>説明の承認ルールを取得します。</summary>
      <returns>説明の承認ルール。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.AutoDeleteOnIdle">
      <summary>その後にトピックが自動的に削除される <see cref="T:System.TimeSpan" /> アイドル間隔を取得または設定します。最小期間は 5 分です。</summary>
      <returns>トピックのアイドル時間の自動削除。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.AvailabilityStatus">
      <summary>このインスタンスの可用性の状態を取得します。</summary>
      <returns>このインスタンスの可用性の状態。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.CreatedAt">
      <summary>トピックが作成された日時を取得します。</summary>
      <returns>トピックが作成された日時。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.DefaultMessageTimeToLive">
      <summary>トピックのライブ値に対する既定のメッセージ時間を取得または設定します。これは、メッセージの期限が切れた後の旗艦で、メッセージが Service Bus に送信された時点から始まります。<see cref="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.TimeToLive" />で がメッセージ自体に設定されていない場合に使われる既定値です。TimeToLive 値より古いメッセージは期限切れになり、メッセージ ストアに保持されなくなります。サブスクライバーは期限切れのメッセージを受信できません。</summary>
      <returns>トピックのライブまでの既定のメッセージ時間。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.DuplicateDetectionHistoryTimeWindow">
      <summary>重複検出履歴の期間を定義する <see cref="T:System.TimeSpan" /> 構造を取得または設定します。</summary>
      <returns>重複検出履歴の期間を定義する <see cref="T:System.TimeSpan" /> 構造。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.EnableBatchedOperations">
      <summary>サーバー側のバッチ処理操作が有効になっているかどうかを示す値を取得または設定します。</summary>
      <returns>バッチ処理された操作が有効になっている場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.EnableExpress">
      <summary>Express Entities が有効になっているかどうかを示す値を取得または設定します。エクスプレス トピックは、永続ストレージに書き込む前にメッセージを一時的にメモリに保持します。</summary>
      <returns>Express Entities が有効になっている場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.EnableFilteringMessagesBeforePublishing">
      <summary>発行前にメッセージをフィルタリングするかどうかを取得または設定します。</summary>
      <returns>発行前のメッセージ フィルタリングが有効になっている場合は true、それ以外の場合は false です。</returns>
      <exception cref="T:Microsoft.ServiceBus.Messaging.NoMatchingSubscriptionException">サブスクリプションが一致しない場合にスローされます。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.EnablePartitioning">
      <summary>トピックを複数のメッセージ ブローカーに分割できるようにするかどうかを取得または設定します。エクスプレス トピックは、永続ストレージに書き込む前にメッセージを一時的にメモリに保持します。</summary>
      <returns>トピックを複数のメッセージ ブローカーに分割できる場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.IsAnonymousAccessible">
      <summary>匿名アクセスが許可されているかどうかを取得します。</summary>
      <returns>匿名アクセスが許可されている場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.MaxSizeInMegabytes">
      <summary>トピックの最大サイズをメガバイト単位で取得または設定します。これはトピックに割り当てられているメモリのサイズです。</summary>
      <returns>最大サイズ (メガバイト)。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.MessageCountDetails">
      <summary>トピックに関するメッセージの詳細を取得します。</summary>
      <returns>アクティブなメッセージ、配信不能、スケジュールされたメッセージ、他のキューやサブスクリプション、トピックに転送されたメッセージ、および配信不能キューに転送されたメッセージの数が含まれている <see cref="T:Microsoft.ServiceBus.Messaging.MessageCountDetails" />。</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TopicDescription.MessageTimeToLiveDefaultValue">
      <summary>ライブ既定値までのメッセージ時間を指定します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.Path">
      <summary>トピックのパスを取得します。</summary>
      <returns>トピックのパス。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.RequiresDuplicateDetection">
      <summary>トピックに重複検出が必要かどうかを示す値を取得または設定します。</summary>
      <returns>トピックが重複検出を必要とする場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.SizeInBytes">
      <summary>トピックのサイズをバイト数で取得します。</summary>
      <returns>トピックのサイズ (バイト)。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.Status">
      <summary>トピックの現在の状態を取得または設定します (有効または無効)。エンティティを無効にすると、そのエンティティはメッセージを送受信できません。</summary>
      <returns>トピックの状態。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.SubscriptionCount">
      <summary>サブスクリプションの数を取得します。</summary>
      <returns>サブスクリプションの数を表す <see cref="T:System.Int32" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.SupportOrdering">
      <summary>サポート順序付けメソッドを取得または設定します。</summary>
      <returns>サポート順序付けメソッド。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.UpdatedAt">
      <summary>トピックが更新された日時を取得します。</summary>
      <returns>トピックが更新された日時。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.UserMetadata">
      <summary>説明に関連付けられたユーザー メタデータを取得または設定します。</summary>
      <returns>説明に関連付けられたユーザー メタデータ。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.TransactionSizeExceededException">
      <summary>トランザクション サイズが超過した場合の例外を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TransactionSizeExceededException.#ctor(System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.TransactionSizeExceededException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外メッセージ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TransactionSizeExceededException.#ctor(System.String,System.Exception)">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.TransactionSizeExceededException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外メッセージ。</param>
      <param name="innerException">例外の原因となったエラー。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.TransportType">
      <summary>メッセージングトランスポートのタイプを列挙します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TransportType.Amqp">
      <summary>高度なメッセージ キュー プロトコル トランスポートのタイプ。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TransportType.NetMessaging">
      <summary>ネットワーク メッセージングトランスポートのタイプ。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.TrueFilter">
      <summary>フィルター式と一致します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TrueFilter.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.TrueFilter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TrueFilter.Match(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>メッセージを現在の SQL 式と一致させます。</summary>
      <returns>一致する場合は true、それ以外の場合は false です。</returns>
      <param name="message">ブローカー メッセージ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TrueFilter.Preprocess">
      <summary>前処理されたフィルター式を取得します。</summary>
      <returns>前処理されたフィルター式。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TrueFilter.RequiresPreprocessing">
      <summary>SQL フィルター式に前処理が必要かどうかを示す値を取得します。</summary>
      <returns>SQL フィルター式で前処理が必要な場合は true、それ以外の場合は false です。現在は常に true を返します。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TrueFilter.Validate">
      <summary>SQL 式を検証します。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.Amqp.AmqpTransportSettings">
      <summary>高度なメッセージ キュー プロトコル トランスポート設定を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.Amqp.AmqpTransportSettings.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.Amqp.AmqpTransportSettings" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.Amqp.AmqpTransportSettings.BatchFlushInterval">
      <summary>トランスポートに関連付けられたバッチ フラッシュ間隔を取得または設定します。</summary>
      <returns>トランスポートに関連付けられたバッチ フラッシュ間隔。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.Amqp.AmqpTransportSettings.Clone">
      <summary>現在のインスタンスのコピーである新しいオブジェクトを作成します。</summary>
      <returns>このインスタンスのコピーである新しいオブジェクト。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.Amqp.AmqpTransportSettings.MaxFrameSize">
      <summary>最大フレーム サイズを取得または設定します。</summary>
      <returns>最大フレーム サイズ。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.Amqp.AmqpTransportSettings.UseSslStreamSecurity">
      <summary>SSL ストリームがカスタム バインディング要素を使用するかどうかを示す値を取得します。</summary>
      <returns>SSL ストリームがカスタム バインディング要素を使用する場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.Amqp.Serialization.EncodingType">
      <summary>シリアル化に関連付けられているエンコードのタイプを列挙します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.Amqp.Serialization.EncodingType.List">
      <summary>List エンコードのタイプ。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.Amqp.Serialization.EncodingType.Map">
      <summary>Map エンコードのタイプ。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingCollectionElement">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.NetMessagingBinding" /> バインディングを使用するための設定を指定するサブ要素を含む構成要素を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingCollectionElement.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingCollectionElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingExtensionElement">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.NetMessagingBinding" /> の構成を指定する XML 要素を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingExtensionElement.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingExtensionElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingExtensionElement.#ctor(System.String)">
      <summary>指定された名前を使用して <see cref="T:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingExtensionElement" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">名前。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingExtensionElement.PrefetchCount">
      <summary>プリフェッチの数を取得または設定します。</summary>
      <returns>プリフェッチの数。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingExtensionElement.SessionIdleTimeout">
      <summary>SessionIdleTimeout を取得または設定します。</summary>
      <returns>IInputSessionChannel.TryReceive 操作がこの TimeSpan 内でメッセージを受信しない場合、チャネルはセッションの終了を示します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingExtensionElement.TransportSettings">
      <summary>ネット メッセージングのトランスポート設定要素を取得または設定します。</summary>
      <returns>ネット メッセージングのトランスポート設定要素。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportExtensionElement">
      <summary>ネット メッセージングのトランスポート拡張要素を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportExtensionElement.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportExtensionElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportExtensionElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>指定された <see cref="T:System.ServiceModel.Channels.BindingElement" /> の設定をこの構成要素に適用します。</summary>
      <param name="bindingElement">この構成要素への <see cref="T:System.ServiceModel.Channels.BindingElement" />。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportExtensionElement.BindingElementType">
      <summary>使用されているバインディング要素のタイプを取得します。</summary>
      <returns>使用するバインディング要素のタイプ。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportExtensionElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>指定された構成要素からこの構成要素に設定をコピーします。</summary>
      <param name="from">設定をこの構成要素にコピーする構成要素。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportExtensionElement.PrefetchCount">
      <summary>プリフェッチの数を取得または設定します。</summary>
      <returns>プリフェッチの数。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportExtensionElement.SessionIdleTimeout">
      <summary>SessionIdleTimeout を取得または設定します。</summary>
      <returns>IInputSessionChannel.TryReceive 操作がこの TimeSpan 内でメッセージを受信しない場合、チャネルはセッションの終了を示します。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportExtensionElement.TransportSettings">
      <summary>ネット メッセージングのトランスポート設定要素を取得または設定します。</summary>
      <returns>ネット メッセージングのトランスポート設定要素。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportSettingsElement">
      <summary>ネット メッセージングのトランスポート設定要素を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportSettingsElement.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportSettingsElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportSettingsElement.BatchFlushInterval">
      <summary>バッチ フラッシュ間隔を取得または設定します。</summary>
      <returns>バッチ フラッシュ間隔を表す <see cref="T:System.TimeSpan" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportSettingsElement.EnableRedirect">
      <summary>リダイレクトが有効になっているかどうかを示す値を取得または設定します。</summary>
      <returns>リダイレクトが有効な場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.AdmCredential">
      <summary>サービス バスの管理者資格情報を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AdmCredential.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.AdmCredential" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AdmCredential.#ctor(System.String,System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.AdmCredential" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="clientId">クライアント識別子。</param>
      <param name="clientSecret">資格情報のシークレット アクセス キー。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.AdmCredential.AuthTokenUrl">
      <summary>承認トークンの URL を取得または設定します。</summary>
      <returns>承認トークンの URL。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.AdmCredential.ClientId">
      <summary>クライアント識別子を取得または設定します。</summary>
      <returns>クライアント識別子。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.AdmCredential.ClientSecret">
      <summary>資格情報シークレット アクセス キーを取得または設定します。</summary>
      <returns>資格情報のシークレット アクセス キー。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AdmCredential.Equals(System.Object)">
      <summary>この資格情報が特定のオブジェクトと等しいかどうかを指定します。</summary>
      <returns>この資格情報が特定のオブジェクトと等しい場合は true、それ以外の場合は false です。</returns>
      <param name="other">比較するオブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AdmCredential.GetHashCode">
      <summary>資格情報のハッシュ コードを取得します。</summary>
      <returns>資格情報のハッシュ コード。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AdmCredential.OnValidate(System.Boolean)">
      <summary>管理者資格情報を検証します。</summary>
      <param name="allowLocalMockPns">ローカル モック PNS を許可する場合は true、それ以外の場合は false です。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.AdmCredential.SendUrlTemplate">
      <summary>URL 送信テンプレートを取得または設定します。</summary>
      <returns>URL 送信テンプレート。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.AdmNotification">
      <summary>管理者通知を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AdmNotification.#ctor(System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.AdmNotification" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="jsonPayload">JSON ペイロード。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.AdmRegistrationDescription">
      <summary>管理者登録の説明を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AdmRegistrationDescription.#ctor(Microsoft.ServiceBus.Notifications.AdmRegistrationDescription)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.AdmRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="sourceRegistration">ソース登録。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AdmRegistrationDescription.#ctor(System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.AdmRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="admRegistrationId">管理者登録識別子。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AdmRegistrationDescription.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.AdmRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="admRegistrationId">管理者登録識別子。</param>
      <param name="tags">登録タグ。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.AdmRegistrationDescription.AdmRegistrationId">
      <summary>管理者登録識別子を取得または設定します。</summary>
      <returns>管理者登録識別子。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.AdmTemplateRegistrationDescription">
      <summary>管理者テンプレート登録の説明を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AdmTemplateRegistrationDescription.#ctor(Microsoft.ServiceBus.Notifications.AdmTemplateRegistrationDescription)">
      <summary>指定されたソース登録を使用して、<see cref="T:Microsoft.ServiceBus.Notifications.AdmTemplateRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="sourceRegistration">ソース登録。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AdmTemplateRegistrationDescription.#ctor(System.String)">
      <summary>指定された管理者登録識別子を使用して、<see cref="T:Microsoft.ServiceBus.Notifications.AdmTemplateRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="admRegistrationId">管理者登録識別子。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AdmTemplateRegistrationDescription.#ctor(System.String,System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.AdmTemplateRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="admRegistrationId">管理者登録識別子。</param>
      <param name="jsonPayload">JSON ペイロード。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AdmTemplateRegistrationDescription.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.AdmTemplateRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="admRegistrationId">管理者登録識別子。</param>
      <param name="jsonPayload">JSON ペイロード。</param>
      <param name="tags">説明タグ。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.AdmTemplateRegistrationDescription.BodyTemplate">
      <summary>CDataMember 通知の本文を取得または設定します。</summary>
      <returns>CDataMember 通知の本文。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.AdmTemplateRegistrationDescription.TemplateName">
      <summary>テンプレートの名前を取得または設定します。</summary>
      <returns>テンプレートの名前。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.ApnsCredential">
      <summary>Apple プッシュ通知サービス (APNS) 資格情報を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.ApnsCredential.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.ApnsCredential" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.ApnsCredential.#ctor(System.Byte[],System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.ApnsCredential" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="certificateBuffer">証明書バッファー。</param>
      <param name="certificateKey">証明書付きキー。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.ApnsCredential.#ctor(System.String,System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.ApnsCredential" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="certificatePath">証明書パス。</param>
      <param name="certificateKey">証明書キー。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.ApnsCredential.ApnsCertificate">
      <summary>APNS 証明書を取得または設定します。</summary>
      <returns>APNS 証明書。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.ApnsCredential.CertificateKey">
      <summary>証明書キーを取得または設定します。</summary>
      <returns>証明書キー。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.ApnsCredential.Endpoint">
      <summary>この資格情報のエンドポイントを取得または設定します。</summary>
      <returns>この資格情報のエンドポイント。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.ApnsCredential.Equals(System.Object)">
      <summary>資格情報が特定のオブジェクトと同じかどうかを指定します。</summary>
      <returns>資格情報が特定のオブジェクトと同じ場合は true、それ以外の場合は false です。</returns>
      <param name="other">比較する他のオブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.ApnsCredential.GetHashCode">
      <summary>資格情報のハッシュ コードを取得します。</summary>
      <returns>資格情報のハッシュ コード。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.ApnsCredential.OnValidate(System.Boolean)">
      <summary>APNS 資格情報を検証します。</summary>
      <param name="allowLocalMockPns">ローカル モック PNS を許可する場合は true、それ以外の場合は false です。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.AppleNotification">
      <summary>Apple 通知を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AppleNotification.#ctor(System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.AppleNotification" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="jsonPayload">JSON ペイロード。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AppleNotification.#ctor(System.String,System.Nullable{System.DateTime})">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.AppleNotification" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="jsonPayload">JSON ペイロード。</param>
      <param name="expiry">通知の有効期限。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AppleNotification.#ctor(System.String,System.Nullable{System.DateTime},System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.AppleNotification" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="jsonPayload">JSON ペイロード。</param>
      <param name="expiry">通知の有効期限。</param>
      <param name="tag">通知タグ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AppleNotification.#ctor(System.String,System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.AppleNotification" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="jsonPayload">JSON ペイロード。</param>
      <param name="tag">通知タグ。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.AppleNotification.Expiry">
      <summary>通知の有効期限日時を取得または設定します。</summary>
      <returns>通知の有効期限日時。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.AppleRegistrationDescription">
      <summary>Apple 登録の説明を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AppleRegistrationDescription.#ctor(Microsoft.ServiceBus.Notifications.AppleRegistrationDescription)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.AppleRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="sourceRegistration">登録のソース。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AppleRegistrationDescription.#ctor(System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.AppleRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="deviceToken">デバイス トークン。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AppleRegistrationDescription.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.AppleRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="deviceToken">デバイス トークン。</param>
      <param name="tags">説明タグのリスト。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.AppleRegistrationDescription.DeviceToken">
      <summary>デバイス トークンを取得または設定します。</summary>
      <returns>デバイス トークン。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.AppleTemplateRegistrationDescription">
      <summary>Apple テンプレート登録の説明を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AppleTemplateRegistrationDescription.#ctor(Microsoft.ServiceBus.Notifications.AppleTemplateRegistrationDescription)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.AppleTemplateRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="sourceRegistration">登録のソース。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AppleTemplateRegistrationDescription.#ctor(System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.AppleTemplateRegistrationDescription" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="deviceToken">デバイス トークン。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AppleTemplateRegistrationDescription.#ctor(System.String,System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.AppleTemplateRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="deviceToken">デバイス トークン。</param>
      <param name="jsonPayload">JSON ペイロード。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AppleTemplateRegistrationDescription.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.AppleTemplateRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="deviceToken">デバイス トークン。</param>
      <param name="jsonPayload">JSON ペイロード。</param>
      <param name="tags">説明タグ。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.AppleTemplateRegistrationDescription.BodyTemplate">
      <summary>本文テンプレートを取得または設定します。</summary>
      <returns>本文テンプレート。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.AppleTemplateRegistrationDescription.Expiry">
      <summary>登録の有効期限日時を取得または設定します。</summary>
      <returns>登録の有効期限日時。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.AppleTemplateRegistrationDescription.TemplateName">
      <summary>テンプレートの名前を取得または設定します。</summary>
      <returns>テンプレートの名前。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.CDataMember">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.CDataMember" /> の通知を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.CDataMember.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.CDataMember" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.CDataMember.#ctor(System.String)">
      <summary>指定された値で <see cref="T:Microsoft.ServiceBus.Notifications.CDataMember" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value">指定された値。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.CDataMember.GenerateSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary>XML スキーマ変換のスキーマ表現を生成します。</summary>
      <returns>XML スキーマ変換のスキーマ表現。</returns>
      <param name="xs">XML スキーマ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.CDataMember.GetSchema">
      <summary>XML スキーマのスキーマ表現を返します。</summary>
      <returns>XML スキーマのスキーマ表現。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.CDataMember.op_Implicit(Microsoft.ServiceBus.Notifications.CDataMember)~System.String">
      <summary>指定された値を <see cref="T:Microsoft.ServiceBus.Notifications.CDataMember" /> オブジェクトに変換します。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.Notifications.CDataMember" /> オブジェクトを変換する値。</returns>
      <param name="value">変換される値。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.CDataMember.op_Implicit(System.String)~Microsoft.ServiceBus.Notifications.CDataMember">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.CDataMember" /> オブジェクトを指定された値に変換します。</summary>
      <returns>指定された値に変換された <see cref="T:Microsoft.ServiceBus.Notifications.CDataMember" /> オブジェクト。</returns>
      <param name="value">変換される値。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.CDataMember.ReadXml(System.Xml.XmlReader)">
      <summary>XML スキーマを XML 表現から読み取ります。</summary>
      <param name="reader">データを読み取る XML リーダー。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.CDataMember.ToString">
      <summary>現在のオブジェクトを表す文字列を返します。</summary>
      <returns>現在のオブジェクトを表す文字列。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.CDataMember.Value">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.CDataMember" /> の値を取得または設定します。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.Notifications.CDataMember" /> の値。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.CDataMember.WriteXml(System.Xml.XmlWriter)">
      <summary>XML データを XML 表現に書き込みます。</summary>
      <param name="writer">書き込む XML ライター。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.CollectionQueryResult`1">
      <summary>コレクション クエリの結果を表します。</summary>
      <typeparam name="T">結果のタイプ。</typeparam>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.CollectionQueryResult`1.ContinuationToken">
      <summary>次の結果セットの取得に使用する継続トークンを取得または設定します。</summary>
      <returns>継続トークン。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.CollectionQueryResult`1.GetEnumerator">
      <summary>コレクションを介して反復する列挙子を返します。</summary>
      <returns>コレクションを介して反復する列挙子。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.CollectionQueryResult`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>コレクションを介して反復する列挙子を返します。</summary>
      <returns>コレクションを介して反復する列挙子。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.GcmCredential">
      <summary>Google Cloud Messaging 資格情報を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.GcmCredential.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.GcmCredential" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.GcmCredential.#ctor(System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.GcmCredential" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="googleApiKey">Google API キー。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.GcmCredential.Equals(System.Object)">
      <summary>資格情報が特定のオブジェクトと等しいかどうかを指定します。</summary>
      <returns>資格情報が特定のオブジェクトと等しい場合は true、それ以外の場合は false です。</returns>
      <param name="other">比較する他のオブジェクト。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.GcmCredential.GcmEndpoint">
      <summary>GCM エンドポイントを取得または設定します。</summary>
      <returns>GCM エンドポイント。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.GcmCredential.GetHashCode">
      <summary>資格情報のハッシュ コードを取得します。</summary>
      <returns>資格情報のハッシュ コード。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.GcmCredential.GoogleApiKey">
      <summary>Google API キーを取得または設定します。</summary>
      <returns>Google API キー。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.GcmCredential.OnValidate(System.Boolean)">
      <summary>特定の資格情報を検証するために呼び出されます。</summary>
      <param name="allowLocalMockPns">ローカル モック PNS を許可する場合は true、それ以外の場合は false です。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.GcmNotification">
      <summary>Google Cloud Messaging 通知を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.GcmNotification.#ctor(System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.GcmNotification" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="jsonPayload">JSON ペイロード。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.GcmNotification.#ctor(System.String,System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.GcmNotification" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="jsonPayload">JSON ペイロード。</param>
      <param name="tag">通知タグ。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.GcmRegistrationDescription">
      <summary>GCM 登録の説明を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.GcmRegistrationDescription.#ctor(Microsoft.ServiceBus.Notifications.GcmRegistrationDescription)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.GcmRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="sourceRegistration">登録のソース。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.GcmRegistrationDescription.#ctor(System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.GcmRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="gcmRegistrationId">GCM 登録 ID。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.GcmRegistrationDescription.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.GcmRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="gcmRegistrationId">GCM 登録 ID。</param>
      <param name="tags">説明タグ。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.GcmRegistrationDescription.GcmRegistrationId">
      <summary>GCM 登録 ID を取得または設定します。</summary>
      <returns>GCM 登録 ID。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.GcmTemplateRegistrationDescription">
      <summary>GCM テンプレート登録の説明を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.GcmTemplateRegistrationDescription.#ctor(Microsoft.ServiceBus.Notifications.GcmTemplateRegistrationDescription)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.GcmTemplateRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="sourceRegistration">登録のソース。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.GcmTemplateRegistrationDescription.#ctor(System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.GcmTemplateRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="gcmRegistrationId">GCM 登録 ID。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.GcmTemplateRegistrationDescription.#ctor(System.String,System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.GcmTemplateRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="gcmRegistrationId">GCM 登録 ID。</param>
      <param name="jsonPayload">JSON ペイロード。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.GcmTemplateRegistrationDescription.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.GcmTemplateRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="gcmRegistrationId">GCM 登録 ID。</param>
      <param name="jsonPayload">JSON ペイロード。</param>
      <param name="tags">説明タグ。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.GcmTemplateRegistrationDescription.BodyTemplate">
      <summary>本文テンプレートを取得または設定します。</summary>
      <returns>本文テンプレート。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.GcmTemplateRegistrationDescription.TemplateName">
      <summary>GCM テンプレートの名前を取得または設定します。</summary>
      <returns>GCM テンプレートの名前。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.MpnsCredential">
      <summary>Microsoft Push Notification Service (MPNS) の資格情報を提供します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsCredential.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.MpnsCredential" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsCredential.#ctor(System.Byte[],System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.MpnsCredential" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="certificateBuffer">証明書バッファー。</param>
      <param name="certificateKey">証明書キー。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsCredential.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate,System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.MpnsCredential" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="mpnsCertificate">MPNS 証明書。</param>
      <param name="certificateKey">証明書キー。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsCredential.#ctor(System.String,System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.MpnsCredential" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="certificatePath">証明書パス。</param>
      <param name="certificateKey">証明書キー。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.MpnsCredential.CertificateKey">
      <summary>この資格情報の証明書キーを取得または設定します。</summary>
      <returns>この資格情報の証明書キー。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsCredential.Equals(System.Object)">
      <summary>資格情報が特定のオブジェクトと同じかどうかを指定します。</summary>
      <returns>資格情報が特定のオブジェクトと同じ場合は true、それ以外の場合は false です。</returns>
      <param name="other">比較する他のオブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsCredential.GetHashCode">
      <summary>資格情報のハッシュ コードを取得します。</summary>
      <returns>資格情報のハッシュ コード。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.MpnsCredential.MpnsCertificate">
      <summary>MPNS 証明書を取得または設定します。</summary>
      <returns>MPNS 証明書。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsCredential.OnValidate(System.Boolean)">
      <summary>MPNS 資格情報を検証します。</summary>
      <param name="allowLocalMockPns">ローカル モック PNS を許可する場合は true、それ以外の場合は false です。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.MpnsHeaderCollection">
      <summary>MPNS ヘッダーのコレクションを提供します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsHeaderCollection.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.MpnsHeaderCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.MpnsNotification">
      <summary>Microsoft Push Notification Service (MPNS) の通知を提供します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsNotification.#ctor(System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.MpnsNotification" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="payLoad">ペイロード。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsNotification.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.MpnsNotification" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="payLoad">ペイロード。</param>
      <param name="mpnsHeaders">MPNS ヘッダー。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsNotification.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.MpnsNotification" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="payLoad">ペイロード。</param>
      <param name="mpnsHeaders">MPNS ヘッダー。</param>
      <param name="tag">通知タグ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsNotification.#ctor(System.String,System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.MpnsNotification" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="payLoad">ペイロード。</param>
      <param name="tag">通知タグ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsNotification.#ctor(System.Xml.XmlDocument)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.MpnsNotification" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="payLoad">ペイロード。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsNotification.#ctor(System.Xml.XmlDocument,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.MpnsNotification" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="payLoad">ペイロード。</param>
      <param name="mpnsHeaders">MPNS ヘッダー。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsNotification.#ctor(System.Xml.XmlDocument,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.MpnsNotification" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="payLoad">ペイロード。</param>
      <param name="mpnsHeaders">MPNS ヘッダー。</param>
      <param name="tag">通知タグ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsNotification.#ctor(System.Xml.XmlDocument,System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.MpnsNotification" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="payLoad">ペイロード。</param>
      <param name="tag">通知タグ。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.MpnsRegistrationDescription">
      <summary>MPNS 登録の説明を提供します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsRegistrationDescription.#ctor(Microsoft.ServiceBus.Notifications.MpnsRegistrationDescription)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.MpnsRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="sourceRegistration">登録のソース。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsRegistrationDescription.#ctor(System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.MpnsRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="channelUri">チャネル URI。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsRegistrationDescription.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.MpnsRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="channelUri">チャネル URI。</param>
      <param name="tags">説明タグ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsRegistrationDescription.#ctor(System.Uri)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.MpnsRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="channelUri">チャネル URI。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsRegistrationDescription.#ctor(System.Uri,System.Collections.Generic.IEnumerable{System.String})">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.MpnsRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="channelUri">チャネル URI。</param>
      <param name="tags">説明タグ。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.MpnsRegistrationDescription.ChannelUri">
      <summary>チャネル URI を取得または設定します。</summary>
      <returns>チャネル URI。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription">
      <summary>MPNS テンプレート登録の説明を提供します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription.#ctor(Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="sourceRegistration">登録のソース。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription.#ctor(System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="channelUri">チャネル URI。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription.#ctor(System.String,System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="channelUri">チャネル URI。</param>
      <param name="templatePayload">XML テンプレート。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="channelUri">チャネル URI。</param>
      <param name="templatePayload">XML テンプレート。</param>
      <param name="mpnsHeaders">MPNS ヘッダーのリスト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IEnumerable{System.String})">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="channelUri">チャネル URI。</param>
      <param name="templatePayload">XML テンプレート。</param>
      <param name="mpnsHeaders">MPNS ヘッダーのリスト。</param>
      <param name="tags">説明タグ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="channelUri">チャネル URI。</param>
      <param name="templatePayload">XML テンプレート。</param>
      <param name="tags">説明タグ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription.#ctor(System.String,System.Xml.XmlDocument)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="channelUri">チャネル URI。</param>
      <param name="xmlTemplate">XML テンプレート。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription.#ctor(System.Uri)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="channelUri">チャネル URI。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription.#ctor(System.Uri,System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="channelUri">チャネル URI。</param>
      <param name="templatePayload">XML テンプレート。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription.#ctor(System.Uri,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="channelUri">チャネル URI。</param>
      <param name="templatePayload">XML テンプレート。</param>
      <param name="mpnsHeaders">WNS ヘッダーのリスト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription.#ctor(System.Uri,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IEnumerable{System.String})">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="channelUri">チャネル URI。</param>
      <param name="templatePayload">XML テンプレート。</param>
      <param name="mpnsHeaders">WNS ヘッダーのリスト。</param>
      <param name="tags">説明タグ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription.#ctor(System.Uri,System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="channelUri">チャネル URI。</param>
      <param name="templatePayload">XML テンプレート。</param>
      <param name="tags">説明タグ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription.#ctor(System.Uri,System.Xml.XmlDocument)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="channelUri">チャネル URI。</param>
      <param name="xmlTemplate">XML テンプレート。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription.BodyTemplate">
      <summary>本文テンプレートを取得または設定します。</summary>
      <returns>本文テンプレート。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription.MpnsHeaders">
      <summary>MPNS ヘッダーのコレクションを取得または設定します。</summary>
      <returns>MPNS ヘッダーのコレクション。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription.TemplateName">
      <summary>MPNS テンプレートの名前を取得または設定します。</summary>
      <returns><see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.Notification">
      <summary>ターゲット タグを含む汎用通知ハブ通知を表す抽象クラス。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.Notification.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.Notification" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="additionalHeaders">追加ヘッダー。</param>
      <param name="tag">通知タグ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.Notification.AddOrUpdateHeader(System.String,System.String)">
      <summary>特定のキーと値のあるヘッダーを追加または更新します。</summary>
      <param name="key">ヘッダー キー。</param>
      <param name="value">ヘッダーの値。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.Notification.Body">
      <summary>通知の本文を取得または設定します。</summary>
      <returns>通知の本文。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.Notification.ContentType">
      <summary>通知のコンテンツ タイプを取得または設定します。</summary>
      <returns>通知のコンテンツ タイプ。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.Notification.Headers">
      <summary>通知に関連付けられたヘッダーのリストを取得または設定します。</summary>
      <returns>通知に関連付けられたヘッダーのリスト。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.Notification.OnValidateAndPopulateHeaders">
      <summary>ヘッダーを検証して設定します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.Notification.PlatformType">
      <summary>通知のプラットフォームのタイプを取得します。</summary>
      <returns>通知のプラットフォームのタイプ。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.Notification.Tag">
      <summary>通知タグを取得または設定します。</summary>
      <returns>通知タグ。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.NotificationHubClient">
      <summary>通知ハブ クライアントを表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateAdmNativeRegistrationAsync(System.String)">
      <summary>非同期的にネイティブの管理者登録を作成します。</summary>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
      <param name="admRegistrationId">管理者登録識別子。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateAdmNativeRegistrationAsync(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>非同期的にネイティブの管理者登録を作成します。</summary>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
      <param name="admRegistrationId">管理者登録識別子。</param>
      <param name="tags">登録のタグ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateAdmTemplateRegistrationAsync(System.String,System.String)">
      <summary>管理テンプレートの登録を同期的に作成します。</summary>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
      <param name="admRegistrationId">管理者登録識別子。</param>
      <param name="jsonPayload">JSON ペイロード。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateAdmTemplateRegistrationAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>管理テンプレートの登録を同期的に作成します。</summary>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
      <param name="admRegistrationId">管理者登録識別子。</param>
      <param name="jsonPayload">JSON ペイロード。</param>
      <param name="tags">タグ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateAppleNativeRegistrationAsync(System.String)">
      <summary>非同期的に Apple ネイティブ登録を作成します。</summary>
      <returns>非同期操作を完了するタスク。</returns>
      <param name="deviceToken">デバイス トークン。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateAppleNativeRegistrationAsync(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>非同期的に Apple ネイティブ登録を作成します。</summary>
      <returns>非同期操作を完了するタスク。</returns>
      <param name="deviceToken">デバイス トークン。</param>
      <param name="tags">タグ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateAppleTemplateRegistrationAsync(System.String,System.String)">
      <summary>Apple テンプレートの登録を非同期的に作成します。作成時に追加のプロパティを指定するには、 <see cref="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateRegistrationAsync``1(``0)" /> メソッドを使用します。</summary>
      <returns>非同期操作を完了するタスク。</returns>
      <param name="deviceToken">デバイス トークン。</param>
      <param name="jsonPayload">JSON ペイロード。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateAppleTemplateRegistrationAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Apple テンプレートの登録を非同期的に作成します。作成時に追加のプロパティを指定するには、 <see cref="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateRegistrationAsync``1(``0)" /> メソッドを使用します。</summary>
      <returns>非同期操作を完了するタスク。</returns>
      <param name="deviceToken">デバイス トークン。</param>
      <param name="jsonPayload">JSON ペイロード。</param>
      <param name="tags">タグ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateClientFromConnectionString(System.String,System.String)">
      <summary>接続文字列からクライアントを作成します。</summary>
      <returns>作成された <see cref="T:Microsoft.ServiceBus.Notifications.NotificationHubClient" />。</returns>
      <param name="connectionString">接続文字列。</param>
      <param name="notificationHubPath">通知ハブ パス。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateClientFromConnectionString(System.String,System.String,System.Boolean)">
      <summary>接続文字列からクライアントを作成します。</summary>
      <returns>作成された <see cref="T:Microsoft.ServiceBus.Notifications.NotificationHubClient" />。</returns>
      <param name="connectionString">接続文字列。</param>
      <param name="notificationHubPath">通知ハブ パス。</param>
      <param name="enableTestSend">テスト送信を有効にする場合は true、それ以外の場合は false です。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateGcmNativeRegistrationAsync(System.String)">
      <summary>GCM ネイティブ登録を非同期的に作成します。</summary>
      <returns>非同期操作を完了するタスク。</returns>
      <param name="gcmRegistrationId">GCM 登録 ID。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateGcmNativeRegistrationAsync(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>GCM ネイティブ登録を非同期的に作成します。</summary>
      <returns>非同期操作を完了するタスク。</returns>
      <param name="gcmRegistrationId">GCM 登録 ID。</param>
      <param name="tags">タグ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateGcmTemplateRegistrationAsync(System.String,System.String)">
      <summary>GCM テンプレートの登録を非同期的に作成します。</summary>
      <returns>非同期操作を完了するタスク。</returns>
      <param name="gcmRegistrationId">GCM 登録 ID。</param>
      <param name="jsonPayload">JSON ペイロード。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateGcmTemplateRegistrationAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>GCM テンプレートの登録を非同期的に作成します。</summary>
      <returns>非同期操作を完了するタスク。</returns>
      <param name="gcmRegistrationId">GCM 登録 ID。</param>
      <param name="jsonPayload">JSON ペイロード。</param>
      <param name="tags">タグ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateMpnsNativeRegistrationAsync(System.String)">
      <summary>MPNS ネイティブ登録を非同期的に作成します。</summary>
      <returns>非同期操作を完了するタスク。</returns>
      <param name="channelUri">チャネル URI。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateMpnsNativeRegistrationAsync(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>MPNS ネイティブ登録を非同期的に作成します。</summary>
      <returns>非同期操作を完了するタスク。</returns>
      <param name="channelUri">チャネル URI。</param>
      <param name="tags">タグ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateMpnsTemplateRegistrationAsync(System.String,System.String)">
      <summary>MPNS テンプレート登録を非同期的に作成します。作成時に追加のプロパティを指定するには、 <see cref="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateRegistrationAsync``1(``0)" /> メソッドを使用します。</summary>
      <returns>非同期操作を完了するタスク。</returns>
      <param name="channelUri">チャネル URI。</param>
      <param name="xmlTemplate">XML テンプレート。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateMpnsTemplateRegistrationAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>MPNS テンプレート登録を非同期的に作成します。作成時に追加のプロパティを指定するには、 <see cref="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateRegistrationAsync``1(``0)" /> メソッドを使用します。</summary>
      <returns>非同期操作を完了するタスク。</returns>
      <param name="channelUri">チャネル URI。</param>
      <param name="xmlTemplate">XML テンプレート。</param>
      <param name="tags">タグ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateOrUpdateRegistrationAsync``1(``0)">
      <summary>クライアント登録を非同期的に作成または更新します。</summary>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
      <param name="registration">作成または更新される登録。</param>
      <typeparam name="T">登録のタイプ。</typeparam>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateRegistrationAsync``1(``0)">
      <summary>非同期的に登録を作成します。</summary>
      <returns>非同期操作を完了するタスク。</returns>
      <param name="registration">作成する登録。</param>
      <typeparam name="T">登録のタイプ。</typeparam>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateRegistrationIdAsync">
      <summary>登録識別子を非同期的に作成します。</summary>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateWindowsNativeRegistrationAsync(System.String)">
      <summary>Windows ネイティブ登録を非同期的に作成します。</summary>
      <returns>非同期操作を完了するタスク。</returns>
      <param name="channelUri">チャネル URI。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateWindowsNativeRegistrationAsync(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Windows ネイティブ登録を非同期的に作成します。</summary>
      <returns>非同期操作を完了するタスク。</returns>
      <param name="channelUri">チャネル URI。</param>
      <param name="tags">タグ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateWindowsTemplateRegistrationAsync(System.String,System.String)">
      <summary>Windows テンプレートの登録を非同期的に作成します。</summary>
      <returns>非同期操作を完了するタスク。</returns>
      <param name="channelUri">チャネル URI。</param>
      <param name="xmlTemplate">XML テンプレート。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateWindowsTemplateRegistrationAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Windows テンプレートの登録を非同期的に作成します。</summary>
      <returns>非同期操作を完了するタスク。</returns>
      <param name="channelUri">チャネル URI。</param>
      <param name="xmlTemplate">XML テンプレート。</param>
      <param name="tags">タグ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.DeleteRegistrationAsync(Microsoft.ServiceBus.Notifications.RegistrationDescription)">
      <summary>登録を非同期的に削除します。</summary>
      <returns>非同期操作を完了するタスク。</returns>
      <param name="registration">削除する登録。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.DeleteRegistrationAsync(System.String)">
      <summary>登録を非同期的に削除します。</summary>
      <returns>非同期操作を完了するタスク。</returns>
      <param name="registrationId">登録 ID。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.DeleteRegistrationAsync(System.String,System.String)">
      <summary>登録を非同期的に削除します。</summary>
      <returns>非同期操作を完了するタスク。</returns>
      <param name="registrationId">登録 ID。</param>
      <param name="etag">エンティティ タグ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.DeleteRegistrationsByChannelAsync(System.String)">
      <summary>チャネルによって登録を非同期的に削除します。</summary>
      <returns>非同期操作を完了するタスク。</returns>
      <param name="pnsHandle">PNS ハンドル。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubClient.EnableTestSend">
      <summary>クライアントがテスト送信を有効にするかどうかを示す値を取得または設定します。</summary>
      <returns>クライアントがテスト送信を有効にした場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.GetAllRegistrationsAsync(System.Int32)">
      <summary>この通知ハブ内のすべての登録を非同期的に取得します。</summary>
      <returns>非同期操作を完了するタスク。</returns>
      <param name="top">登録の場所。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.GetAllRegistrationsAsync(System.String,System.Int32)">
      <summary>この通知ハブ内のすべての登録を非同期的に取得します。</summary>
      <returns>非同期操作を完了するタスク。</returns>
      <param name="continuationToken">継続トークン。</param>
      <param name="top">登録の場所。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.GetBaseUri">
      <summary>BaseUri 添付プロパティの値を取得します。</summary>
      <returns>特定の要素の基本 URI。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.GetRegistrationAsync``1(System.String)">
      <summary>特定の ID の登録を非同期的に取得します。登録のタイプは、指定された <paramref name="TRegistrationDescription" /> パラメーターによって異なります。</summary>
      <returns>非同期操作を完了するタスク。</returns>
      <param name="registrationId">登録 ID。</param>
      <typeparam name="TRegistrationDescription">登録の説明のタイプ。</typeparam>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.GetRegistrationsByChannelAsync(System.String,System.Int32)">
      <summary>チャネルによって非同期的に登録を取得します。</summary>
      <returns>非同期操作を完了するタスク。</returns>
      <param name="pnsHandle">PNS ハンドル。</param>
      <param name="top">登録の場所。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.GetRegistrationsByChannelAsync(System.String,System.String,System.Int32)">
      <summary>チャネルによって非同期的に登録を取得します。</summary>
      <returns>非同期操作を完了するタスク。</returns>
      <param name="pnsHandle">PNS ハンドル。</param>
      <param name="continuationToken">継続トークン。</param>
      <param name="top">登録の場所。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.GetRegistrationsByTagAsync(System.String,System.Int32)">
      <summary>非同期的にタグによって登録を取得します。</summary>
      <returns>非同期操作を完了するタスク。</returns>
      <param name="tag">タグ。</param>
      <param name="top">登録を取得する場所。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.GetRegistrationsByTagAsync(System.String,System.String,System.Int32)">
      <summary>非同期的にタグによって登録を取得します。</summary>
      <returns>非同期操作を完了するタスク。</returns>
      <param name="tag">タグ。</param>
      <param name="continuationToken">継続トークン。</param>
      <param name="top">登録を取得する場所。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.RegistrationExistsAsync(System.String)">
      <summary>登録が既に存在することを非同期的に示します。</summary>
      <returns>非同期操作を完了するタスク。</returns>
      <param name="registrationId">登録 ID。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendAdmNativeNotificationAsync(System.String)">
      <summary>管理者ネイティブ通知を非同期的に送信します。</summary>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
      <param name="jsonPayload">JSON ペイロード。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendAdmNativeNotificationAsync(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>管理者ネイティブ通知を非同期的に送信します。</summary>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
      <param name="jsonPayload">JSON ペイロード。</param>
      <param name="tags">タグ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendAdmNativeNotificationAsync(System.String,System.String)">
      <summary>管理者ネイティブ通知を非同期的に送信します。</summary>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
      <param name="jsonPayload">JSON ペイロード。</param>
      <param name="tagExpression">タグ式。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendAppleNativeNotificationAsync(System.String)">
      <summary>Apple ネイティブ通知を非同期的に送信します。有効期限を指定するには、 <see cref="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendNotificationAsync(Microsoft.ServiceBus.Notifications.Notification)" /> メソッドを使用します。</summary>
      <returns>非同期操作を完了するタスク。</returns>
      <param name="jsonPayload">JSON ペイロード。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendAppleNativeNotificationAsync(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>非同期的に、空でないタグのセット (最大 20) に Apple ネイティブ通知を送信します。これは、ブール値の OR (&quot;||&quot;) を持つタグ付き式に相当します。有効期限を指定するには、 <see cref="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendNotificationAsync(Microsoft.ServiceBus.Notifications.Notification)" /> メソッドを使用します。</summary>
      <returns>非同期操作を完了するタスク。</returns>
      <param name="jsonPayload">JSON ペイロード。</param>
      <param name="tags">空でないタグのセット (最大 20 個のタグ)。セット内の各文字列には、単一のタグを含めることができます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendAppleNativeNotificationAsync(System.String,System.String)">
      <summary>非同期的にタグ式に Apple ネイティブ通知を送信します (単一のタグ &quot;tag&quot; は有効なタグ式です)。有効期限を指定するには、 <see cref="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendNotificationAsync(Microsoft.ServiceBus.Notifications.Notification)" /> メソッドを使用します。</summary>
      <returns>非同期操作を完了するタスク。</returns>
      <param name="jsonPayload">JSON ペイロード。</param>
      <param name="tagExpression">タグ式は、論理演算子の AND (&amp;&amp;)、OR (||)、NOT (!)、および丸括弧を使用して構築されたブール式です。例: (A || B) &amp;&amp; !C。式で OR のみを使用する場合は、最大 20 個のタグを含めることができます。その他の式では 6 個のタグに制限されています。単一のタグ &quot;A&quot; は有効な式です。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendGcmNativeNotificationAsync(System.String)">
      <summary>GCM ネイティブ通知を非同期的に送信します。</summary>
      <returns>非同期操作を完了するタスク。</returns>
      <param name="jsonPayload">JSON ペイロード。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendGcmNativeNotificationAsync(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>GCM ネイティブ通知を空でないタグのセット (最大 20個) に非同期で送信します。これは、ブール値 OR (&quot;||&quot;) のあるタグ式に相当します。</summary>
      <returns>非同期操作を完了するタスク。</returns>
      <param name="jsonPayload">JSON ペイロード。</param>
      <param name="tags">空でないタグのセット (最大 20 個のタグ)。セット内の各文字列には、単一のタグを含めることができます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendGcmNativeNotificationAsync(System.String,System.String)">
      <summary>GCM ネイティブ通知をタグ式に非同期的に送信します (単一のタグ &quot;tag&quot; は有効なタグ式です)。</summary>
      <returns>非同期操作を完了するタスク。</returns>
      <param name="jsonPayload">JSON ペイロード。</param>
      <param name="tagExpression">タグ式は、論理演算子の AND (&amp;&amp;)、OR (||)、NOT (!)、および丸括弧を使用して構築されたブール式です。例: (A || B) &amp;&amp; !C。式で OR のみを使用する場合は、最大 20 個のタグを含めることができます。その他の式では 6 個のタグに制限されています。単一のタグ &quot;A&quot; は有効な式です。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendMpnsNativeNotificationAsync(System.String)">
      <summary>MPNS ネイティブ通知を非同期的に送信します。MPNS のヘッダーを指定するには、 <see cref="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendNotificationAsync(Microsoft.ServiceBus.Notifications.Notification)" /> メソッドを使用します。</summary>
      <returns>非同期操作を完了するタスク。</returns>
      <param name="nativePayload">ネイティブ ペイロード。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendMpnsNativeNotificationAsync(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>非同期的に MPNS ネイティブ通知を空でないタグのセット (最大 20個) に送信します。これは、ブール値 OR (&quot;||&quot;) のあるタグ式に相当します。MPNS のヘッダーを指定するには、 <see cref="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendNotificationAsync(Microsoft.ServiceBus.Notifications.Notification)" /> メソッドを使用します。</summary>
      <returns>非同期操作を完了するタスク。</returns>
      <param name="nativePayload">通知ペイロード。</param>
      <param name="tags">空でないタグのセット (最大 20 個のタグ)。セット内の各文字列には、単一のタグを含めることができます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendMpnsNativeNotificationAsync(System.String,System.String)">
      <summary>非同期的に MPNS ネイティブ通知をタグ式に送信します (単一のタグ &quot;tag&quot; は有効なタグ式です)。MPNS のヘッダーを指定するには、 <see cref="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendNotificationAsync(Microsoft.ServiceBus.Notifications.Notification)" /> メソッドを使用します。</summary>
      <returns>非同期操作を完了するタスク。</returns>
      <param name="nativePayload">ネイティブ ペイロード。</param>
      <param name="tagExpression">タグ式は、論理演算子の AND (&amp;&amp;)、OR (||)、NOT (!)、および丸括弧を使用して構築されたブール式です。例: (A || B) &amp;&amp; !C。式で OR のみを使用する場合は、最大 20 個のタグを含めることができます。その他の式では 6 個のタグに制限されています。単一のタグ &quot;A&quot; は有効な式です。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendNotificationAsync(Microsoft.ServiceBus.Notifications.Notification)">
      <summary>空でないタグのセット (最大 20個) に通知を非同期的に送信します。これは、ブール値 OR (&quot;||&quot;) のあるタグ式に相当します。</summary>
      <returns>非同期操作を完了するタスク。</returns>
      <param name="notification">送信する通知。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendNotificationAsync(Microsoft.ServiceBus.Notifications.Notification,System.Collections.Generic.IEnumerable{System.String})">
      <summary>空でないタグのセット (最大 20個) に通知を非同期的に送信します。これは、ブール値 OR (&quot;||&quot;) のあるタグ式に相当します。</summary>
      <returns>非同期操作を完了するタスク。</returns>
      <param name="notification">送信する通知。</param>
      <param name="tags">空でないタグのセット (最大 20 個のタグ)。セット内の各文字列には、単一のタグを含めることができます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendNotificationAsync(Microsoft.ServiceBus.Notifications.Notification,System.String)">
      <summary>タグ式に通知を非同期的に送信します (単一のタグ &quot;tag&quot; は有効なタグ式です)。</summary>
      <returns>非同期操作を完了するタスク。</returns>
      <param name="notification">送信する通知。</param>
      <param name="tagExpression">タグ式は、論理演算子の AND (&amp;&amp;)、OR (||)、NOT (!)、および丸括弧を使用して構築されたブール式です。例: (A || B) &amp;&amp; !C。式で OR のみを使用する場合は、最大 20 個のタグを含めることができます。その他の式では 6 個のタグに制限されています。単一のタグ &quot;A&quot; は有効な式です。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendTemplateNotificationAsync(System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>テンプレート通知を非同期的に送信します。</summary>
      <returns>非同期操作を完了するタスク。</returns>
      <param name="properties">テンプレートのプロパティ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendTemplateNotificationAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IEnumerable{System.String})">
      <summary>テンプレート通知を空でないタグのセット (最大 20 個) に非同期的に送信します。これは、ブール値 OR (&quot;||&quot;) のあるタグ式に相当します。</summary>
      <returns>非同期操作を完了するタスク。</returns>
      <param name="properties">テンプレートのプロパティ。</param>
      <param name="tags">空でないタグのセット (最大 20 個のタグ)。セット内の各文字列には、単一のタグを含めることができます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendTemplateNotificationAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
      <summary>非同期的にテンプレート通知をタグ式に送信します (単一のタグ &quot;tag&quot; は有効なタグ式です)。</summary>
      <returns>非同期操作を完了するタスク。</returns>
      <param name="properties">テンプレートのプロパティ。</param>
      <param name="tagExpression">タグ式は、論理演算子の AND (&amp;&amp;)、OR (||)、NOT (!)、および丸括弧を使用して構築されたブール式です。例: (A || B) &amp;&amp; !C。式で OR のみを使用する場合は、最大 20 個のタグを含めることができます。その他の式では 6 個のタグに制限されています。単一のタグ &quot;A&quot; は有効な式です。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendWindowsNativeNotificationAsync(System.String)">
      <summary>Windows ネイティブ通知を非同期的に送信します。WNS のヘッダーを指定するには、 <see cref="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendNotificationAsync(Microsoft.ServiceBus.Notifications.Notification)" /> メソッドを使用します。</summary>
      <returns>非同期操作を完了するタスク。</returns>
      <param name="windowsNativePayload">Windows ネイティブ ペイロード。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendWindowsNativeNotificationAsync(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Windows ネイティブ通知を空でないタグのセット (最大 20 個) に非同期的に送信します。これは、ブール値 OR (&quot;||&quot;) のあるタグ式に相当します。WNS のヘッダーを指定するには、 <see cref="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendNotificationAsync(Microsoft.ServiceBus.Notifications.Notification)" /> メソッドを使用します。</summary>
      <returns>非同期操作を完了するタスク。</returns>
      <param name="windowsNativePayload">Windows ネイティブ ペイロード。</param>
      <param name="tags">空でないタグのセット (最大 20 個のタグ)。セット内の各文字列には、単一のタグを含めることができます。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendWindowsNativeNotificationAsync(System.String,System.String)">
      <summary>非同期的に Windows ネイティブ通知をタグ式に送信します (単一のタグ &quot;tag&quot; は有効なタグ式です)。WNS のヘッダーを指定するには、 <see cref="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendNotificationAsync(Microsoft.ServiceBus.Notifications.Notification)" /> メソッドを使用します。</summary>
      <returns>非同期操作を完了するタスク。</returns>
      <param name="windowsNativePayload">Windows ネイティブ ペイロード。</param>
      <param name="tagExpression">タグ式は、論理演算子の AND (&amp;&amp;)、OR (||)、NOT (!)、および丸括弧を使用して構築されたブール式です。例: (A || B) &amp;&amp; !C。式で OR のみを使用する場合は、最大 20 個のタグを含めることができます。その他の式では 6 個のタグに制限されています。単一のタグ &quot;A&quot; は有効な式です。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.UpdateRegistrationAsync``1(``0)">
      <summary>登録を非同期的に更新します。</summary>
      <returns>更新が完了したときに完了するタスク。</returns>
      <param name="registration">更新する登録。</param>
      <typeparam name="T">登録のタイプ。</typeparam>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.NotificationHubDescription">
      <summary>通知ハブの説明を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubDescription.#ctor(System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.NotificationHubDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="path">説明のパス。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubDescription.AdmCredential">
      <summary>管理者資格情報を取得または設定します。</summary>
      <returns>管理者資格情報。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubDescription.ApnsCredential">
      <summary>APNS 資格情報を取得または設定します。</summary>
      <returns>APNS 資格情報。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubDescription.Authorization">
      <summary>この説明の承認ルールを取得します。</summary>
      <returns>この説明の承認ルール。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubDescription.DailyApiCalls">
      <summary>通知の毎日の API 呼び出しを取得します。</summary>
      <returns>通知の毎日の API 呼び出し。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubDescription.DailyMaxActiveDevices">
      <summary>通知の毎日の最大アクティブ デバイスを取得します。</summary>
      <returns>通知の毎日の最大アクティブ デバイス。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubDescription.DailyMaxActiveRegistrations">
      <summary>通知の毎日の最大アクティブ登録を取得します。</summary>
      <returns>通知の毎日の最大アクティブ登録。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubDescription.DailyOperations">
      <summary>説明の毎日の操作を取得します。</summary>
      <returns>説明の毎日の操作。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubDescription.DailyPushes">
      <summary>通知の毎日のプッシュを取得します。</summary>
      <returns>通知の毎日のプッシュ。</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Notifications.NotificationHubDescription.DefaultFullSasRuleName">
      <summary>既定の完全な SAS ルール名を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Notifications.NotificationHubDescription.DefaultListenSasRuleName">
      <summary>既定のリッスン SAS ルール名を指定します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubDescription.GcmCredential">
      <summary>GCM 資格情報を取得または設定します。</summary>
      <returns>GCM 資格情報。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubDescription.IsAnonymousAccessible">
      <summary>説明が匿名でアクセス可能かどうかを示す値を取得します。</summary>
      <returns>説明が匿名でアクセス可能な場合は true、それ以外の場合は false です。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubDescription.MpnsCredential">
      <summary>MPNS 資格情報を取得または設定します。証明書が定義されていない <see cref="T:Microsoft.ServiceBus.Notifications.MpnsCredential" /> インスタンスでは、MPNS 非認証 MPNS サポートが有効になります。</summary>
      <returns>MPNS 資格情報。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubDescription.Path">
      <summary>この説明のパスを取得または設定します。</summary>
      <returns>この説明のパス。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubDescription.RegistrationTtl">
      <summary>この通知ハブのすべての登録の有効期限を取得または設定します。</summary>
      <returns>登録 TTL。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubDescription.SetAccessPasswords(System.String,System.String,System.String,System.String)">
      <summary>アクセス パスワードを設定します。</summary>
      <param name="fullAccessRuleName">完全なアクセス ルール名。</param>
      <param name="fullAccessPassword">完全なアクセス パスワード。</param>
      <param name="listenAccessRuleName">リッスン アクセス ルール名。</param>
      <param name="listenAccessPassword">リッスン アクセス パスワード。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubDescription.SetDefaultAccessPasswords(System.String,System.String)">
      <summary>既定のアクセス パスワードを設定します。</summary>
      <param name="fullAccessPassword">完全なアクセス パスワード。</param>
      <param name="listenAccessPassword">リッスン アクセス パスワード。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubDescription.UserMetadata">
      <summary>説明に関連付けられたユーザー メタデータを取得または設定します。</summary>
      <returns>説明に関連付けられたユーザー メタデータ。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubDescription.WnsCredential">
      <summary>WNS 資格情報を取得または設定します。</summary>
      <returns>WNS 資格情報。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.NotificationOutcome">
      <summary>通知結果を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationOutcome.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.NotificationOutcome" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationOutcome.Failure">
      <summary>結果の失敗値を取得または設定します。</summary>
      <returns>結果の失敗値。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationOutcome.Results">
      <summary>通知結果の一覧を取得または設定します。</summary>
      <returns>通知結果の一覧。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationOutcome.State">
      <summary>この通知結果の状態を取得または設定します。</summary>
      <returns>この通知結果の状態。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationOutcome.Success">
      <summary>結果の成功値を取得または設定します。</summary>
      <returns>結果の成功値。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationOutcome.TrackingId">
      <summary>トラッキング ID を取得または設定します。</summary>
      <returns>追跡 ID。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.NotificationOutcomeState">
      <summary>通知結果の状態のリストを指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Notifications.NotificationOutcomeState.DetailedStateAvailable">
      <summary>結果の詳細な状態を使用できます。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Notifications.NotificationOutcomeState.Enqueued">
      <summary>通知結果がエンキューされます。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.PnsCredential">
      <summary>PNS 資格情報を表します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.PnsCredential.BlockedOn">
      <summary>この資格情報がブロックされている日時を取得または設定します。</summary>
      <returns>この資格情報がブロックされている日時。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.PnsCredential.IsEqual(Microsoft.ServiceBus.Notifications.PnsCredential,Microsoft.ServiceBus.Notifications.PnsCredential)">
      <summary>2 つの資格情報が等しいかどうかを指定します。</summary>
      <returns>2 つの資格情報が等しい場合は true、それ以外の場合は false です。</returns>
      <param name="cred1">比較する最初の資格情報。</param>
      <param name="cred2">比較する 2 番目の資格情報。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.PnsCredential.Item(System.String)">
      <summary>この資格情報に関連付けられた値を取得または設定します。</summary>
      <returns>この資格情報に関連付けられた値。</returns>
      <param name="name">資格情報の名前。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.PnsCredential.OnValidate(System.Boolean)">
      <summary>資格情報を検証します。</summary>
      <param name="allowLocalMockPns">ローカル モック PNS を許可する場合は true、それ以外の場合は false です。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.PnsCredential.Properties">
      <summary>この資格情報のプロパティを取得または設定します。</summary>
      <returns>この資格情報のプロパティ。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.RegistrationDescription">
      <summary>登録の説明を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.RegistrationDescription.#ctor(Microsoft.ServiceBus.Notifications.RegistrationDescription)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.RegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="registration">登録。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.RegistrationDescription.Deserialize(System.String)">
      <summary>シリアル化されたデータから登録の説明を抽出します。</summary>
      <returns>登録の説明。</returns>
      <param name="descriptionString">登録に関連付けられている説明。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.RegistrationDescription.ETag">
      <summary>この説明に関連付けられている ETag を取得または設定します。</summary>
      <returns>この説明に関連付けられている ETag。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.RegistrationDescription.ExpirationTime">
      <summary>登録の有効期限を取得または設定します。</summary>
      <returns>登録の有効期限。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.RegistrationDescription.GenerateUrlSafeBase64(System.Byte[])">
      <summary>URL セーフ Base64 を生成します。</summary>
      <returns>生成された URL セーフ Base64。</returns>
      <param name="hash">ハッシュ。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.RegistrationDescription.RegistrationId">
      <summary>登録 ID を取得または設定します。</summary>
      <returns>登録 ID。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.RegistrationDescription.Serialize">
      <summary>登録の説明をシリアル化します。</summary>
      <returns>シリアル化された登録の説明。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.RegistrationDescription.TagCount(System.String)">
      <summary>タグの合計数を返します。</summary>
      <returns>タグの合計数。</returns>
      <param name="tags">タグ。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.RegistrationDescription.Tags">
      <summary>登録に関連付けられたタグのセットを取得または設定します。</summary>
      <returns>登録に関連付けられたタグのセット。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.RegistrationDescription.ValidateTags(System.String)">
      <summary>特定のタグを検証します。</summary>
      <returns>タグが検証されている場合は true、それ以外の場合は false です。</returns>
      <param name="tags">検証するタグ。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.RegistrationResult">
      <summary>登録の結果を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.RegistrationResult.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.RegistrationResult" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.RegistrationResult.ApplicationPlatform">
      <summary>アプリケーション プラットフォームを取得または設定します。</summary>
      <returns>アプリケーション プラットフォーム。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.RegistrationResult.Outcome">
      <summary>登録の結果を取得または設定します。</summary>
      <returns>登録の結果。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.RegistrationResult.PnsHandle">
      <summary>PNS ハンドルを取得または設定します。</summary>
      <returns>PNS ハンドル。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.RegistrationResult.RegistrationId">
      <summary>登録 ID を取得または設定します。</summary>
      <returns>登録 ID。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.ScheduledNotification"></member>
    <member name="M:Microsoft.ServiceBus.Notifications.ScheduledNotification.#ctor"></member>
    <member name="P:Microsoft.ServiceBus.Notifications.ScheduledNotification.Payload"></member>
    <member name="P:Microsoft.ServiceBus.Notifications.ScheduledNotification.ScheduledNotificationId"></member>
    <member name="P:Microsoft.ServiceBus.Notifications.ScheduledNotification.ScheduledTime"></member>
    <member name="P:Microsoft.ServiceBus.Notifications.ScheduledNotification.Tags"></member>
    <member name="P:Microsoft.ServiceBus.Notifications.ScheduledNotification.TrackingId"></member>
    <member name="T:Microsoft.ServiceBus.Notifications.TemplateNotification">
      <summary>テンプレート通知を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.TemplateNotification.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.TemplateNotification" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="templateProperties">テンプレートのプロパティ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.TemplateNotification.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.TemplateNotification" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="templateProperties">テンプレートのプロパティ。</param>
      <param name="tag">通知タグ。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.WindowsNotification">
      <summary>Windows 通知を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsNotification.#ctor(System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.WindowsNotification" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="payLoad">ペイロード。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsNotification.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.WindowsNotification" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="payLoad">ペイロード。</param>
      <param name="wnsHeaders">WNS ヘッダーのリスト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsNotification.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.WindowsNotification" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="payLoad">ペイロード。</param>
      <param name="wnsHeaders">WNS ヘッダーのリスト。</param>
      <param name="tag">通知タグ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsNotification.#ctor(System.String,System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.WindowsNotification" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="payLoad">ペイロード。</param>
      <param name="tag">通知タグ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsNotification.#ctor(System.Xml.XmlDocument)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.WindowsNotification" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="payLoad">ペイロード。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsNotification.#ctor(System.Xml.XmlDocument,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.WindowsNotification" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="payLoad">ペイロード。</param>
      <param name="wnsHeaders">WNS ヘッダーのリスト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsNotification.#ctor(System.Xml.XmlDocument,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.WindowsNotification" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="payLoad">ペイロード。</param>
      <param name="wnsHeaders">WNS ヘッダーのリスト。</param>
      <param name="tag">通知タグ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsNotification.#ctor(System.Xml.XmlDocument,System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.WindowsNotification" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="payLoad">ペイロード。</param>
      <param name="tag">通知タグ。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.WindowsRegistrationDescription">
      <summary>Windows 登録の説明を提供します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsRegistrationDescription.#ctor(Microsoft.ServiceBus.Notifications.WindowsRegistrationDescription)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.WindowsRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="sourceRegistration">ソース登録。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsRegistrationDescription.#ctor(System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.WindowsRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="channelUri">チャネル URI。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsRegistrationDescription.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.WindowsRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="channelUri">チャネル URI。</param>
      <param name="tags">タグのリスト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsRegistrationDescription.#ctor(System.Uri)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.WindowsRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="channelUri">チャネル URI。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsRegistrationDescription.#ctor(System.Uri,System.Collections.Generic.IEnumerable{System.String})">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.WindowsRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="channelUri">チャネル URI。</param>
      <param name="tags">タグのリスト。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.WindowsRegistrationDescription.ChannelUri">
      <summary>チャネル URI を取得または設定します。</summary>
      <returns>チャネル URI。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription">
      <summary>Windows テンプレート登録の説明を提供します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription.#ctor(Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="sourceRegistration">ソース登録。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription.#ctor(System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="channelUri">チャネル URI。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription.#ctor(System.String,System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="channelUri">チャネル URI。</param>
      <param name="templatePayload">XML テンプレート。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="channelUri">チャネル URI。</param>
      <param name="templatePayload">XML テンプレート。</param>
      <param name="wnsHeaders">WNS ヘッダー。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IEnumerable{System.String})">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="channelUri">チャネル URI。</param>
      <param name="templatePayload">XML テンプレート。</param>
      <param name="wnsHeaders">WNS ヘッダー。</param>
      <param name="tags">説明タグ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="channelUri">チャネル URI。</param>
      <param name="templatePayload">XML テンプレート。</param>
      <param name="tags">説明タグ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription.#ctor(System.String,System.Xml.XmlDocument)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="channelUri">チャネル URI。</param>
      <param name="xmlTemplate">XML テンプレート。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription.#ctor(System.Uri)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="channelUri">チャネル URI。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription.#ctor(System.Uri,System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="channelUri">チャネル URI。</param>
      <param name="templatePayload">XML テンプレート。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription.#ctor(System.Uri,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="channelUri">チャネル URI。</param>
      <param name="templatePayload">XML テンプレート。</param>
      <param name="wnsHeaders">WNS ヘッダー。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription.#ctor(System.Uri,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IEnumerable{System.String})">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="channelUri">チャネル URI。</param>
      <param name="templatePayload">XML テンプレート。</param>
      <param name="wnsHeaders">WNS ヘッダー。</param>
      <param name="tags">説明タグ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription.#ctor(System.Uri,System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="channelUri">チャネル URI。</param>
      <param name="templatePayload">XML テンプレート。</param>
      <param name="tags">説明タグ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription.#ctor(System.Uri,System.Xml.XmlDocument)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="channelUri">チャネル URI。</param>
      <param name="xmlTemplate">XML テンプレート。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription.BodyTemplate">
      <summary>本文テンプレートを取得または設定します。</summary>
      <returns>本文テンプレート。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription.TemplateName">
      <summary>テンプレート名を取得または設定します。</summary>
      <returns>テンプレート名。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription.WnsHeaders">
      <summary>WNS ヘッダーのコレクションを取得または設定します。</summary>
      <returns>WNS ヘッダーのコレクション。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.WnsCredential">
      <summary>WNS 資格情報を表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WnsCredential.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.WnsCredential" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WnsCredential.#ctor(System.String,System.String)">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.WnsCredential" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="packageSid">パッケージ ID。</param>
      <param name="secretKey">シークレット キー。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WnsCredential.Equals(System.Object)">
      <summary>このインスタンス os が指定されたオブジェクトと同じかどうかを指定します。</summary>
      <returns><see cref="T:System.Boolean" /> を返します。</returns>
      <param name="other">比較する他のオブジェクト。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WnsCredential.GetHashCode">
      <summary>資格情報のハッシュ コードを取得します。</summary>
      <returns>資格情報のハッシュ コード。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WnsCredential.OnValidate(System.Boolean)">
      <summary>資格情報を検証します。</summary>
      <param name="allowLocalMockPns">ローカル モック PNS を許可する場合は true、それ以外の場合は false です。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.WnsCredential.PackageSid">
      <summary>この資格情報のパッケージ ID を取得または設定します。</summary>
      <returns>この資格情報のパッケージ ID。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.WnsCredential.SecretKey">
      <summary>シークレット キーを取得または設定します。</summary>
      <returns>シークレット キー。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.WnsCredential.WindowsLiveEndpoint">
      <summary>Windows Live エンドポイントを取得または設定します。</summary>
      <returns>Windows Live エンドポイント。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.WnsHeaderCollection">
      <summary>Windows Push Notification Services (WNS) ヘッダーのコレクションを表します。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WnsHeaderCollection.#ctor">
      <summary><see cref="T:Microsoft.ServiceBus.Notifications.WnsHeaderCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Tracing.ControllerCommand">
      <summary>コントローラー コマンドのリストを指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.ControllerCommand.Disable">
      <summary>Disable コマンド。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.ControllerCommand.Enable">
      <summary>Enable コマンド。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.ControllerCommand.SendManifest">
      <summary>SendManifest コマンド。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.ControllerCommand.Update">
      <summary>Update コマンド。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Tracing.EventChannel">
      <summary>サービス バスに関連付けられているイベントを列挙します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventChannel.Application">
      <summary>アプリケーション イベント。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventChannel.Default">
      <summary>既定のイベント。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventChannel.Reserved">
      <summary>予約済みイベント。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventChannel.Security">
      <summary>セキュリティ イベント。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventChannel.Setup">
      <summary>セットアップ イベント。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventChannel.System">
      <summary>システム イベント。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Tracing.EventCommand">
      <summary>イベント コマンドのリストを指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventCommand.Disable">
      <summary>Disable コマンド。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventCommand.Enable">
      <summary>Enable コマンド。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventCommand.SendManifest">
      <summary>SendManifest コマンド。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventCommand.Update">
      <summary>Update コマンド。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Tracing.EventKeywords">
      <summary>イベントに適用される標準キーワードを指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventKeywords.All">
      <summary>キーワードは All です。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventKeywords.AuditFailure">
      <summary>キーワードは AuditFailure です。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventKeywords.AuditSuccess">
      <summary>キーワードは AuditSuccess です。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventKeywords.CorrelationHint">
      <summary>キーワードは CorrelationHint です。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventKeywords.EventLogClassic">
      <summary>キーワードは EventLogClassic です。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventKeywords.None">
      <summary>キーワードは None です。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventKeywords.Sqm">
      <summary>キーワードは Sqm です。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventKeywords.WdiContext">
      <summary>キーワードは WdiContext です。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventKeywords.WdiDiagnostic">
      <summary>キーワードは WdiDiagnostic です。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Tracing.EventLevel">
      <summary>イベント プロバイダーで定義されたイベント レベルのリストを指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventLevel.Critical">
      <summary>レベルは Critical です。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventLevel.Error">
      <summary>レベルは Error です。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventLevel.Informational">
      <summary>レベルは Informational です。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventLevel.LogAlways">
      <summary>レベルは LogAlways です。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventLevel.Verbose">
      <summary>レベルは Verbose です。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventLevel.Warning">
      <summary>レベルは Warning です。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Tracing.EventOpcode">
      <summary>イベント オペコードのリストを指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventOpcode.DataCollectionStart">
      <summary>DataCollectionStart オペコード。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventOpcode.DataCollectionStop">
      <summary>DataCollectionStop オペコード。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventOpcode.Extension">
      <summary>Extension オペコード。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventOpcode.Info">
      <summary>Info オペコード。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventOpcode.Receive">
      <summary>Receive オペコード。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventOpcode.Reply">
      <summary>Reply オペコード。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventOpcode.Resume">
      <summary>Resume オペコード。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventOpcode.Send">
      <summary>Send オペコード。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventOpcode.Start">
      <summary>Start オペコード。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventOpcode.Stop">
      <summary>Stop オペコード。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventOpcode.Suspend">
      <summary>Suspend オペコード。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Tracing.EventTask">
      <summary>イベント プロバイダーで定義されているイベント タスクを含むリストを指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventTask.None">
      <summary>タスクは None です。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Tracing.TrackingContext">
      <summary>メッセージング エンティティの変更を追跡するためのコンテキスト プロパティを提供します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.TrackingContext.HeaderNamespace">
      <summary>ヘッダー名前空間を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.TrackingContext.SystemTrackerName">
      <summary>システム トラッカーの名前を指定します。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.TrackingContext.TrackingIdName">
      <summary>返されるトークン応答の追跡識別子の属性名を指定します。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Web.StreamMessageHelper">
      <summary>ストリーミング コンテンツから Message オブジェクトを作成するためのヘルパー クラス。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Web.StreamMessageHelper.CreateJsonMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.IO.Stream)">
      <summary>指定されたバージョンの JSON メッセージを作成します。</summary>
      <returns>作成された JSON メッセージ。</returns>
      <param name="version">メッセージのバージョン。</param>
      <param name="action">メッセージの処理方法の説明。</param>
      <param name="jsonStream">新しいメッセージの本文の書き込みに使用されるコンテンツを含むストリーム。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Web.StreamMessageHelper.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,Microsoft.ServiceBus.Web.StreamWriterDelegate)">
      <summary>指定されたバージョン、アクション、およびデリゲートを使用して、ストリームからメッセージを作成します。</summary>
      <returns>ストリーム作成された <see cref="T:System.ServiceModel.Channels.Message" /> を返します。</returns>
      <param name="version">新しく作成したメッセージに使用する Addressing  バージョンと Envelope バージョンを指定します。要求が REST を使用して行われた場合、Addressing バージョンと Envelope バージョンは None です。</param>
      <param name="action">メッセージの処理方法の説明。HTTP 要求に応答して送信されたメッセージの場合、この値は &quot;GETRESPONSE&quot; でなければなりません。</param>
      <param name="writer"><see cref="Overload:Microsoft.ServiceBus.Web.StreamMessageHelper.CreateMessage" /> によるコールバックを可能にし、ストリームがメッセージの本文を設定するように要求するデリゲート。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Web.StreamMessageHelper.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.IO.Stream)">
      <summary>指定されたバージョン、アクション、およびストリームを使用してメッセージを作成します。</summary>
      <returns>ストリーム作成された <see cref="T:System.ServiceModel.Channels.Message" /> を返します。</returns>
      <param name="version">新しく作成したメッセージに使用する Addressing  バージョンと Envelope バージョンを指定します。要求が REST を使用して行われた場合、Addressing バージョンと Envelope バージョンは None です。</param>
      <param name="action">メッセージの処理方法の説明。HTTP 要求に応答して送信されたメッセージの場合、この値は &quot;GETRESPONSE&quot; でなければなりません。</param>
      <param name="stream">新しいメッセージの本文の書き込みに使用されるコンテンツを含むストリーム。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Web.StreamMessageHelper.GetStream(System.ServiceModel.Channels.Message)">
      <summary>指定されたメッセージのストリームを取得します。</summary>
      <returns>メッセージのストリームを含む <see cref="T:System.IO.Stream" /> を返します。メッセージ本文が空かどうかに関係なく、ストリームは常に返されます。</returns>
      <param name="message">メッセージ。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Web.StreamMessageHelper.GetStream(System.Xml.XmlDictionaryReader)">
      <summary>指定されたリーダーを使用して、指定されたメッセージのストリームを取得します。</summary>
      <returns>指定されたメッセージのストリーム。</returns>
      <param name="reader">リーダー。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Web.StreamWriterDelegate">
      <summary>このデリゲートは、StreamMessageHelper がストリームされたメッセージの本文を書き込むために使用します。</summary>
      <param name="output">メッセージ本文を書き込むストリーム。</param>
    </member>
  </members>
</doc>
<?xml version="1.0" encoding="utf-8"?>
<doc>
    <assembly>
        <name>MahApps.Metro</name>
    </assembly>
    <members>
        <member name="T:ControlzEx.KeyboardNavigationEx">
            <summary>共通なフォーカス問題のヘルパー クラス。フォーカス自体は問題ではありません。共通フォーカス法を使用すると、コントロールはフォーカスを取得しますが、フォーカスのビジュアル スタイルは取得できません。KeyboardNavigation クラスは、ビジュアル スタイルを、コントロールがキーボード デバイスからフォーカスを取得する場合、または SystemParameters.KeyboardCues が true の場合のみ処理します。</summary>
        </member>
        <member name="P:ControlzEx.KeyboardNavigationEx.Instance">
            <summary>KeyboardNavigationEx シングルトン インスタンスを取得します。</summary>
        </member>
        <member name="M:ControlzEx.KeyboardNavigationEx.ShowFocusVisualInternal">
            <summary>現在のフォーカスされた UI 要素の、フォーカス ビジュアルを表示します。AlwaysShowFocusVisual プロパティのみと一緒に動作します。</summary>
        </member>
        <member name="M:ControlzEx.KeyboardNavigationEx.Focus(System.Windows.UIElement)">
            <summary>指定した要素にフォーカスし、フォーカス ビジュアルスタイルを表示します。</summary>
            <param name="element">フォーカスされる要素。</param>
        </member>
        <member name="F:ControlzEx.KeyboardNavigationEx.AlwaysShowFocusVisualProperty">
            <summary>UI 要素に、AlwaysShowFocusVisual を設定するためにアタッチされる、DependencyProperty プロパティ。</summary>
        </member>
        <member name="M:ControlzEx.KeyboardNavigationEx.GetAlwaysShowFocusVisual(System.Windows.UIElement)">
            <summary>UI 要素が、常にフォーカス ビジュアル スタイルを表示するかどうかを示す値を取得します。</summary>
        </member>
        <member name="M:ControlzEx.KeyboardNavigationEx.SetAlwaysShowFocusVisual(System.Windows.UIElement,System.Boolean)">
            <summary>UI 要素が、常にフォーカス ビジュアル スタイルを表示するかどうかを示す値を設定します。</summary>
        </member>
        <member name="T:MahApps.Metro.Accent">
            <summary>メトロ <see cref="T:MahApps.Metro.AppTheme"/> の前景色を表すオブジェクト。</summary>
        </member>
        <member name="F:MahApps.Metro.Accent.Resources">
            <summary>この Accent を表す ResourceDictionary。</summary>
        </member>
        <member name="P:MahApps.Metro.Accent.Name">
            <summary>Accent 名を取得/設定します。</summary>
        </member>
        <member name="M:MahApps.Metro.Accent.#ctor">
            <summary>MahApps.Metro.Accent クラスの新しいインスタンスを初期化します。</summary>
        </member>
        <member name="M:MahApps.Metro.Accent.#ctor(System.String,System.Uri)">
            <summary>MahApps.Metro.Accent クラスの新しいインスタンスを初期化します。</summary>
            <param name="name">新しい Accent の名前です。</param>
            <param name="resourceAddress">アクセント ResourceDictionary の URI です。</param>
        </member>
        <member name="T:MahApps.Metro.AppTheme">
            <summary>アプリケーションのバックグラウンド テーマを表します。</summary>
        </member>
        <member name="P:MahApps.Metro.AppTheme.Resources">
            <summary>このアプリケーション テーマを表す ResourceDictionary です。</summary>
        </member>
        <member name="P:MahApps.Metro.AppTheme.Name">
            <summary>アプリケーション テーマの名前を取得します。</summary>
        </member>
        <member name="T:MahApps.Metro.Behaviours.BorderlessWindowBehavior">
            <summary>このクラスでは、ユーザー設定ウィンドウ スタイルを作成できます。</summary>
        </member>
        <member name="M:MahApps.Metro.Behaviours.BorderlessWindowBehavior._ModifyStyle(Standard.WS,Standard.WS)">
            <summary>HWND からネイティブな WindowStyle を追加および削除します。</summary>
            <param name="removeStyle">削除するスタイルです。これらはビットごとに組み合わせることが可能です。</param>
            <param name="addStyle">追加するスタイルです。これらはビットごとに組み合わせることが可能です。</param>
            <returns>この呼び出しの結果としてHWND のスタイルが変更されたかどうか。</returns>
            <SecurityNote>クリティカル：クリティカル メソッドの呼び出し</SecurityNote>
        </member>
        <member name="M:MahApps.Metro.Behaviours.GlowWindowBehavior.Update">
            <summary>すべての発光ウィンドウを更新します (表示、非表示、折りたたみ)</summary>
        </member>
        <member name="M:MahApps.Metro.Behaviours.GlowWindowBehavior.SetOpacityTo(System.Double)">
            <summary>すべての発光ウィンドウに不透明度を設定します。</summary>
        </member>
        <member name="M:MahApps.Metro.Behaviours.GlowWindowBehavior.StartOpacityStoryboard">
            <summary>不透明度ストーリーボード 0 -&gt; 1 を開始します。</summary>
        </member>
        <member name="M:MahApps.Metro.Behaviours.GlowWindowBehavior.Show">
            <summary>すべての発光ウィンドウを表示します。</summary>
        </member>
        <member name="F:MahApps.Metro.Behaviours.PasswordBoxBindingBehavior.PasswordProperty">
            <summary>PasswordBox コントロールでバインド可能な、パスワード プロパティを取得または設定します。これは依存関係プロパティです。</summary>
        </member>
        <member name="M:MahApps.Metro.Behaviours.PasswordBoxBindingBehavior.OnPasswordPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>&apos;パスワード&apos; 添付プロパティの変更を処理します。</summary>
        </member>
        <member name="M:MahApps.Metro.Behaviours.PasswordBoxBindingBehavior.PasswordBoxPasswordChanged(System.Object,System.Windows.RoutedEventArgs)">
            <summary>PasswordBox の &apos;PasswordChanged&apos;-イベントを処理します</summary>
        </member>
        <member name="M:MahApps.Metro.Behaviours.PasswordBoxBindingBehavior.OnAttached">
            <summary>動作が、AssociatedObject にアタッチされた後に呼び出されます。</summary>
            <remarks>これをオーバーライドして、機能を AssociatedObject にフックします。</remarks>
        </member>
        <member name="M:MahApps.Metro.Behaviours.PasswordBoxBindingBehavior.OnDetaching">
            <summary>動作が AssociatedObject から切り離されている間に、ただし実際に発生する前に呼び出されます。</summary>
            <remarks>これをオーバーライドして、機能を AssociatedObject からアンフックします。</remarks>
        </member>
        <member name="T:MahApps.Metro.Behaviours.TabControlSelectFirstVisibleTabBehavior">
            <summary>
            <para>最初の TabItem を、TabControl の SelectedItem として、可視性=&quot;<see cref="F:System.Windows.Visibility.Visible"/>” に設定します。</para>
            <para>表示されている TabItem がない場合、null が SelectedItem として設定されます。</para>
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.CloseCommand.CanExecute(System.Object)">
            <summary>コマンドを、現在の状態で実行できるかどうかを決定するメソッドを定義します。</summary>
            <returns>このコマンドを実行できる場合は true、それ以外の場合は false です。</returns>
            <param name="parameter">コマンドに使用されるデータです。コマンドが、渡すデータを要求しない場合は、このオブジェクトを null に設定できます。</param>
        </member>
        <member name="M:MahApps.Metro.Controls.CloseCommand.Execute(System.Object)">
            <summary>コマンドが起動される際に、呼び出されるメソッドを定義します。</summary>
            <param name="parameter">コマンドに使用されるデータです。コマンドが、渡すデータを要求しない場合は、このオブジェクトを null に設定できます。</param>
        </member>
        <member name="F:MahApps.Metro.Controls.ContentControlEx.ContentCharacterCasingProperty">
            <summary>CharacterCasing プロパティのための DependencyProperty。コンテンツを大文字または小文字に変換するかどうかを制御します
既定値: CharacterCasing.Normal</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ContentControlEx.ContentCharacterCasing">
            <summary>コンテンツの大文字/小文字指定</summary> 
        </member>
        <member name="F:MahApps.Metro.Controls.ContentControlEx.RecognizesAccessKeyProperty">
            <summary>RecognizeSAccessKey プロパティのための DependencyProperty。既定値: false</summary> 
        </member>
        <member name="P:MahApps.Metro.Controls.ContentControlEx.RecognizesAccessKey">
            <summary>内部の ContentPresenter が、そのスタイルで AccessText を使用するかどうかを判断します</summary> 
        </member>
        <member name="M:MahApps.Metro.Controls.Extensions.BeginInvoke(System.Windows.Threading.DispatcherObject,System.Action,System.Windows.Threading.DispatcherPriority)">
            <summary>指定されたアクションを、ディスパッチャーが作成されたスレッドの DispatcherPriority.Background と非同期に実行します。</summary>
            <param name="dispatcherObject">アクションが実行されるディスパッチャー オブジェクト。</param>
            <param name="invokeAction">パラメーターを取らないアクション。</param>
            <param name="priority">ディスパッチャーの優先順位。</param> 
        </member>
        <member name="T:MahApps.Metro.Controls.TimePartVisibility">
            <summary><see cref="T:MahApps.Metro.Controls.DateTimePicker"/> に表示されるタイム パーツの可視性を定義 します。</summary>
        </member>
        <member name="T:MahApps.Metro.Controls.DateTimePicker">
            <summary>ユーザーが日付と時刻を選択できるようにする、コントロールを表します。</summary>
        </member>
        <member name="E:MahApps.Metro.Controls.DateTimePicker.SelectedDateChanged">
            <summary><see cref="P:MahApps.Metro.Controls.DateTimePicker.SelectedDate" />プロパティが変更される場合に発生します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.DateTimePicker.DisplayDate">
            <summary>表示する日付を取得または設定します</summary>
            <returns>表示する日付。デフォルトは <see cref="P:System.DateTime.Today" /> です。</returns>
        </member>
        <member name="P:MahApps.Metro.Controls.DateTimePicker.DisplayDateEnd">
            <summary>表示される最後の日付を取得または設定します。</summary>
            <returns>表示する最後の日付。</returns>
        </member>
        <member name="P:MahApps.Metro.Controls.DateTimePicker.DisplayDateStart">
            <summary>表示される最初の日付を取得または設定します。</summary>
            <returns>表示する最初の日付。</returns>
        </member>
        <member name="P:MahApps.Metro.Controls.DateTimePicker.FirstDayOfWeek">
            <summary>週の始まりと見なされる日付を取得または設定します。</summary>
            <returns>週の始まりを表す <see cref="T:System.DayOfWeek" />。デフォルトは、現在のカルチャによって決定される、 <see cref="P:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek" />です。</returns>
        </member>
        <member name="P:MahApps.Metro.Controls.DateTimePicker.IsTodayHighlighted">
            <summary>現在の日付を強調表示するかどうかを示す値を取得または設定します。</summary>
            <returns>現在の日付が強調表示される場合は true、それ以外は false です。既定値は true です。</returns>
        </member>
        <member name="P:MahApps.Metro.Controls.DateTimePicker.Orientation">
            <summary>カレンダーと時計が積み上げられるディメンションを示す値を、取得または設定します。</summary>
            <returns>カレンダーおよび時計の <see cref="T:System.Windows.Controls.Orientation" />。デフォルトは <see cref="F:System.Windows.Controls.Orientation.Horizontal" /> です。</returns>
        </member>
        <member name="P:MahApps.Metro.Controls.DateTimePicker.SelectedDate">
            <summary>現在選択されている日付を取得または設定します。</summary>
            <returns>現在選択されている日付。デフォルトは null です。</returns>
        </member>
        <member name="T:MahApps.Metro.Controls.MetroThumbContentControl">
            <summary>MetroThumbContentControl コントロールは、タイトルや他の項目のために使用でき、基本的なドラッグ移動機能を有効にします。</summary>
        </member>
        <member name="E:MahApps.Metro.Controls.MetroThumbContentControl.DragStarted">
            <summary>DragStartEvent ハンドラーを追加または削除する</summary>
        </member>
        <member name="E:MahApps.Metro.Controls.MetroThumbContentControl.DragDelta">
            <summary>DragDeltaEvent ハンドラーを追加または削除する</summary>
        </member>
        <member name="E:MahApps.Metro.Controls.MetroThumbContentControl.DragCompleted">
            <summary>DragCompletedEvent  ハンドラーを追加または削除する</summary>
        </member>
        <member name="F:MahApps.Metro.Controls.MetroThumbContentControl.IsDraggingProperty">
            <summary>IsDragging プロパティのためのDependencyProperty。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroThumbContentControl.IsDragging">
            <summary>マウスの左ボタンが押され、MetroThumbContentControl 上にあることを示します。</summary>
        </member>
        <member name="F:MahApps.Metro.Controls.Dialogs.DialogCoordinator.Instance">
            <summary>ビュー モデルに挿入できる、ダイアログ コーディネータのデフォルトのインスタンスを取得します。</summary>
        </member>
        <member name="T:MahApps.Metro.Controls.Dialogs.IDialogCoordinator">
            <summary>ダイアログ コーディネーターを使用すると、ビュー モデルからのダイアログをインターフェースするための役に立ちます。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.IDialogCoordinator.ShowInputAsync(System.Object,System.String,System.String,MahApps.Metro.Controls.Dialogs.MetroDialogSettings)">
            <summary>入力ダイアログを表示します。</summary>
            <param name="context">通常、これは <see cref="M:MahApps.Metro.Controls.Dialogs.DialogParticipation.SetRegister(System.Windows.DependencyObject,System.Object)"/>を使用して XAML に登録する、ビュー モデルであることが必要です。</param>
            <param name="title">MessageDialog のタイトル。</param>
            <param name="message">MessageDialog 内に含まれるメッセージ。</param>
            <param name="settings">グローバル メトロ ダイアログ設定をオーバーライドするオプション設定。</param>
            <returns>ユーザーが操作をキャンセルした場合に、入力されたか、null (Visual Basic では Nothing) となったテキスト。</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.IDialogCoordinator.ShowModalInputExternal(System.Object,System.String,System.String,MahApps.Metro.Controls.Dialogs.MetroDialogSettings)">
            <summary>入力ダイアログを表示します。</summary>
            <param name="context">通常、これは <see cref="M:MahApps.Metro.Controls.Dialogs.DialogParticipation.SetRegister(System.Windows.DependencyObject,System.Object)"/>を使用して XAML に登録する、ビュー モデルであることが必要です。</param>
            <param name="title">MessageDialog のタイトル。</param>
            <param name="message">MessageDialog 内に含まれるメッセージ。</param>
            <param name="settings">グローバル メトロ ダイアログ設定をオーバーライドするオプション設定。</param>
            <returns>ユーザーが操作をキャンセルした場合に、入力されたか、null (Visual Basic では Nothing) となったテキスト。</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.IDialogCoordinator.ShowLoginAsync(System.Object,System.String,System.String,MahApps.Metro.Controls.Dialogs.LoginDialogSettings)">
            <summary>現在のウィンドウの内側に LoginDialog を作成します。</summary>
            <param name="context">通常、これは <see cref="M:MahApps.Metro.Controls.Dialogs.DialogParticipation.SetRegister(System.Windows.DependencyObject,System.Object)"/>を使用して XAML に登録する、ビュー モデルであることが必要です。</param>
            <param name="title">LoginDialog のタイトル。</param>
            <param name="message">LoginDialog 内に含まれるメッセージ。</param>
            <param name="settings">グローバル メトロ ダイアログ設定をオーバーライドするオプション設定。</param>
            <returns>ユーザーが操作をキャンセルした場合に、入力されたか、null (Visual Basic では Nothing) となったテキスト。</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.IDialogCoordinator.ShowModalLoginExternal(System.Object,System.String,System.String,MahApps.Metro.Controls.Dialogs.LoginDialogSettings)">
            <summary>現在のウィンドウの外側に LoginDialog を作成します。</summary>
            <param name="context">通常、これは <see cref="M:MahApps.Metro.Controls.Dialogs.DialogParticipation.SetRegister(System.Windows.DependencyObject,System.Object)"/>を使用して XAML に登録する、ビュー モデルであることが必要です。</param>
            <param name="title">LoginDialog のタイトル。</param>
            <param name="message">LoginDialog 内に含まれるメッセージ。</param>
            <param name="settings">グローバル メトロ ダイアログ設定をオーバーライドするオプション設定。</param>
            <returns>ユーザーが操作をキャンセルした場合に、入力されたか、null (Visual Basic では Nothing) となったテキスト。</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.IDialogCoordinator.ShowMessageAsync(System.Object,System.String,System.String,MahApps.Metro.Controls.Dialogs.MessageDialogStyle,MahApps.Metro.Controls.Dialogs.MetroDialogSettings)">
            <summary>現在のウィンドウの内側に MessageDialog を作成します。</summary>
            <param name="context">通常、これは <see cref="M:MahApps.Metro.Controls.Dialogs.DialogParticipation.SetRegister(System.Windows.DependencyObject,System.Object)"/>を使用して XAML に登録する、ビュー モデルであることが必要です。</param>
            <param name="title">MessageDialog のタイトル。</param>
            <param name="message">MessageDialog に含まれるメッセージ。</param>
            <param name="style">使用するボタンのタイプ。</param>
            <param name="settings">グローバル メトロ ダイアログ設定をオーバーライドするオプション設定。</param>
            <returns>どのボタンが押されたかの結果を裏付けるタスク。</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.IDialogCoordinator.ShowModalMessageExternal(System.Object,System.String,System.String,MahApps.Metro.Controls.Dialogs.MessageDialogStyle,MahApps.Metro.Controls.Dialogs.MetroDialogSettings)">
            <summary>現在のウィンドウの外側に MessageDialog を作成します。</summary>
            <param name="context">通常、これは <see cref="M:MahApps.Metro.Controls.Dialogs.DialogParticipation.SetRegister(System.Windows.DependencyObject,System.Object)"/>を使用して XAML に登録する、ビュー モデルであることが必要です。</param>
            <param name="title">MessageDialog のタイトル。</param>
            <param name="message">MessageDialog 内に含まれるメッセージ。</param>
            <param name="style">使用するボタンのタイプ。</param>
            <param name="settings">グローバル メトロ ダイアログ設定をオーバーライドするオプション設定。</param>
            <returns>どのボタンが押されたかの結果を裏付けるタスク。</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.IDialogCoordinator.ShowProgressAsync(System.Object,System.String,System.String,System.Boolean,MahApps.Metro.Controls.Dialogs.MetroDialogSettings)">
            <summary>現在のウィンドウの内側に ProgressDialog を作成します。</summary>
            <param name="context">通常、これは <see cref="M:MahApps.Metro.Controls.Dialogs.DialogParticipation.SetRegister(System.Windows.DependencyObject,System.Object)"/>を使用して XAML に登録する、ビュー モデルであることが必要です。</param>
            <param name="title">ProgressDialog のタイトル。</param>
            <param name="message">ProgressDialog 内のメッセージ。</param>
            <param name="isCancelable">キャンセル ボタンが表示されているかどうかを判断します。</param>
            <param name="settings">グローバル メトロ ダイアログ設定をオーバーライドするオプション設定。</param>
            <returns>この操作の ProgressDialogController のインスタンスを裏付けるタスク。</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.IDialogCoordinator.ShowMetroDialogAsync(System.Object,MahApps.Metro.Controls.Dialogs.BaseMetroDialog,MahApps.Metro.Controls.Dialogs.MetroDialogSettings)">
            <summary>指定したウィンドウに Metro ダイアログ インスタンスを追加し、非同期に表示にします。<para><see cref="M:MahApps.Metro.Controls.Dialogs.IDialogCoordinator.HideMetroDialogAsync(System.Object,MahApps.Metro.Controls.Dialogs.BaseMetroDialog,MahApps.Metro.Controls.Dialogs.MetroDialogSettings)"/>を使用して、自分自身で結果のダイアログを 閉じる必要があります。</para>
            </summary>
            <param name="context">通常、これは <see cref="M:MahApps.Metro.Controls.Dialogs.DialogParticipation.SetRegister(System.Windows.DependencyObject,System.Object)"/>を使用して XAML に登録する、ビュー モデルであることが必要です。</param>
            <param name="dialog">ダイアログ インスタンス自体。</param>
            <param name="settings">オプションの定義済み設定インスタンス。</param>
            <returns>操作を表すタスク。</returns>
            <exception cref="T:System.InvalidOperationException"><paramref name="dialog"/>は既にウィンドウに表示されています。</exception>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.IDialogCoordinator.HideMetroDialogAsync(System.Object,MahApps.Metro.Controls.Dialogs.BaseMetroDialog,MahApps.Metro.Controls.Dialogs.MetroDialogSettings)">
            <summary>表示されているメトロ ダイアログ インスタンスを非表示にします。</summary>
            <param name="context">通常、これは <see cref="M:MahApps.Metro.Controls.Dialogs.DialogParticipation.SetRegister(System.Windows.DependencyObject,System.Object)"/>を使用して XAML に登録する、ビュー モデルであることが必要です。</param>
            <param name="dialog">非表示にするダイアログ インスタンス。</param>
            <param name="settings">オプションの定義済み設定インスタンス。</param>
            <returns>操作を表すタスク。</returns>
            <exception cref="T:System.InvalidOperationException"><paramref name="dialog"/> はウィンドウに表示されません。このことは、 <see cref="M:MahApps.Metro.Controls.Dialogs.IDialogCoordinator.ShowMetroDialogAsync(System.Object,MahApps.Metro.Controls.Dialogs.BaseMetroDialog,MahApps.Metro.Controls.Dialogs.MetroDialogSettings)"/>が以前に呼び出されていない場合に発生します。</exception>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.IDialogCoordinator.GetCurrentDialogAsync``1(System.Object)">
            <summary>現在表示されているダイアログを取得します。</summary>
            <param name="context">通常、これは <see cref="M:MahApps.Metro.Controls.Dialogs.DialogParticipation.SetRegister(System.Windows.DependencyObject,System.Object)"/>を使用して XAML に登録する、ビュー モデルであることが必要です。</param>
        </member>
        <member name="T:MahApps.Metro.Controls.Dialogs.BaseMetroDialog">
             <summary>ダイアログの基本クラス。多分、このクラスを使用したくないでしょう。ダイアログに任意のコンテンツを追加したい場合は、<see cref="T:MahApps.Metro.Controls.Dialogs.CustomDialog"/> クラスを使用します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.BaseMetroDialog.Title">
            <summary>ダイアログのタイトルを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.BaseMetroDialog.DialogTop">
            <summary>ダイアログの上部で任意のコンテンツを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.BaseMetroDialog.DialogBottom">
            <summary>ダイアログの下に任意のコンテンツを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.BaseMetroDialog.DialogTitleFontSize">
            <summary>ダイアログ タイトル フォントのサイズを取得または設定します。</summary>
            <value>ダイアログ タイトル フォントのサイズ。</value>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.BaseMetroDialog.DialogMessageFontSize">
            <summary>ダイアログ メッセージ フォントのサイズを取得または設定します。</summary>
            <value>ダイアログ メッセージ フォントのサイズ。</value>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.BaseMetroDialog.#ctor(MahApps.Metro.Controls.MetroWindow,MahApps.Metro.Controls.Dialogs.MetroDialogSettings)">
            <summary>新しい MahApps.Metro.Controls.BaseMetroDialog を初期化します。</summary>
            <param name="owningWindow">ダイアログの親であるウィンドウ。</param>
            <param name="settings">メッセージ ダイアログの設定。</param>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.BaseMetroDialog.#ctor">
            <summary>新しい MahApps.Metro.Controls.BaseMetroDialog を初期化します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.BaseMetroDialog.OnLoaded">
            <summary>これは、読み込まれたイベントで呼び出されます。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.BaseMetroDialog.WaitForLoadAsync">
            <summary>ダイアログが対話の準備が整うまで待ちます。</summary>
            <returns>操作とそのステータスを表すタスク。</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.BaseMetroDialog.RequestCloseAsync">
            <summary>外部に表示されているダイアログを閉じるよう要求します。ダイアログが MetroWindow の内部にある場合は、例外がスローされます。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.BaseMetroDialog.OnRequestClose">
            <summary>仮想メソッドが、外部ダイアログの終了を中止させる最後のチャンスです。</summary>
            <returns></returns>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.BaseMetroDialog.ParentDialogWindow">
            <summary>ダイアログが外部に表示されている場合に限り、現在のダイアログを所有するウィンドウを取得します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.BaseMetroDialog.OwningWindow">
            <summary>ダイアログがウィンドウ内部に表示されている場合に限り、現在のダイアログを所有するウィンドウを取得します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.BaseMetroDialog.WaitUntilUnloadedAsync">
            <summary>このダイアログがアンロードされるまで待ちます。</summary>
            <returns></returns>
        </member>
        <member name="T:MahApps.Metro.Controls.Dialogs.MetroDialogSettings">
            <summary>メトロ ダイアログで使用される設定を表すクラス。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.MetroDialogSettings.AffirmativeButtonText">
            <summary>[肯定] ボタンに使用するテキストを取得/設定します。例: &quot;OK&quot; または &quot;はい&quot;</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.MetroDialogSettings.NegativeButtonText">
            <summary>[否定] ボタンに使用するテキストを取得/設定します。例: 「キャンセル」または「いいえ」。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.MetroDialogSettings.ColorScheme">
            <summary>メトロ ダイアログが、デフォルトの黒/白の外観 (テーマ) を使用するか、または現在のアクセントを使用するかを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.MetroDialogSettings.AnimateShow">
            <summary>アニメーションを表示するダイアログを有効/無効にします。&quot;True&quot; - アニメーション表示を再生。&quot;False&quot; - アニメーション表示をスキップ。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.MetroDialogSettings.AnimateHide">
            <summary>アニメーション非表示の有効/無効ダイアログ &quot;True&quot; - 非表示アニメーションを再生します。&quot;False&quot; - 非表示アニメーションをスキップします。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.MetroDialogSettings.DefaultText">
            <summary>デフォルト テキストを取得/設定します(入力ダイアログのみ必要)</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.MetroDialogSettings.MaximumBodyHeight">
            <summary>最大高さを取得/設定します。(デフォルトは無制限の高さ、 <a href="http://msdn.microsoft.com/de-de/library/system.double.nan">Double.NaN)</a></summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.MetroDialogSettings.DefaultButtonFocus">
            <summary>デフォルトでフォーカスするボタンを取得または設定する</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.MetroDialogSettings.CancellationToken">
            <summary>ダイアログをキャンセルするトークンを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.MetroDialogSettings.CustomResourceDictionary">
            <summary>カスタム スタイル、ブラシ、またはその他の機能を含むことができるカスタム リソース ディクショナリを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.MetroDialogSettings.SuppressDefaultResources">
            <summary>設定すると、ダイアログに適用される標準リソース ディクショナリは停止されます。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.MetroDialogSettings.DialogTitleFontSize">
            <summary>ダイアログ タイトル フォントのサイズを取得または設定します。</summary>
            <value>ダイアログ タイトル フォントのサイズ。</value>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.MetroDialogSettings.DialogMessageFontSize">
            <summary>ダイアログ メッセージ フォントのサイズを取得または設定します。</summary>
            <value>ダイアログ メッセージ フォントのサイズ。</value>
        </member>
        <member name="T:MahApps.Metro.Controls.Dialogs.MetroDialogColorScheme">
            <summary>メトロ ダイアログで、配色のさまざまな選択肢を表す列挙型。</summary>
        </member>
        <member name="T:MahApps.Metro.Controls.Dialogs.CustomDialog">
            <summary>任意のコンテンツを許可する BaseMetroDialog の実装。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.DialogManager.ShowLoginAsync(MahApps.Metro.Controls.MetroWindow,System.String,System.String,MahApps.Metro.Controls.Dialogs.LoginDialogSettings)">
            <summary>現在のウィンドウの内側に LoginDialog を作成します。</summary>
            <param name="window">ダイアログの親であるウィンドウ。</param>
            <param name="title">LoginDialog のタイトル。</param>
            <param name="message">LoginDialog 内に含まれるメッセージ。</param>
            <param name="settings">グローバル メトロ ダイアログ設定をオーバーライドするオプション設定。</param>
            <returns>ユーザーが操作をキャンセルした場合に、入力されたか、null (Visual Basic では Nothing) となったテキスト。</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.DialogManager.ShowInputAsync(MahApps.Metro.Controls.MetroWindow,System.String,System.String,MahApps.Metro.Controls.Dialogs.MetroDialogSettings)">
            <summary>現在のウィンドウの内側に InputDialog を作成します。</summary>
            <param name="window">MetroWindow</param>
            <param name="title">MessageDialog のタイトル。</param>
            <param name="message">MessageDialog 内に含まれるメッセージ。</param>
            <param name="settings">グローバル メトロ ダイアログ設定をオーバーライドするオプション設定。</param>
            <returns>ユーザーが操作をキャンセルした場合に、入力されたか、null (Visual Basic では Nothing) となったテキスト。</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.DialogManager.ShowMessageAsync(MahApps.Metro.Controls.MetroWindow,System.String,System.String,MahApps.Metro.Controls.Dialogs.MessageDialogStyle,MahApps.Metro.Controls.Dialogs.MetroDialogSettings)">
            <summary>現在のウィンドウの内側に MessageDialog を作成します。</summary>
            <param name="window">MetroWindow</param>
            <param name="title">MessageDialog のタイトル。</param>
            <param name="message">MessageDialog 内に含まれるメッセージ。</param>
            <param name="style">使用するボタンのタイプ。</param>
            <param name="settings">グローバル メトロ ダイアログ設定をオーバーライドするオプション設定。</param>
            <returns>どのボタンが押されたかの結果を裏付けるタスク。</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.DialogManager.ShowProgressAsync(MahApps.Metro.Controls.MetroWindow,System.String,System.String,System.Boolean,MahApps.Metro.Controls.Dialogs.MetroDialogSettings)">
            <summary>現在のウィンドウの内側に ProgressDialog を作成します。</summary>
            <param name="window">MetroWindow</param>
            <param name="title">ProgressDialog のタイトル。</param>
            <param name="message">ProgressDialog 内のメッセージ。</param>
            <param name="isCancelable">キャンセル ボタンが表示されているかどうかを判断します。</param>
            <param name="settings">グローバル メトロ ダイアログ設定をオーバーライドするオプション設定。</param>
            <returns>この操作の ProgressDialogController のインスタンスを裏付けるタスク。</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.DialogManager.ShowMetroDialogAsync(MahApps.Metro.Controls.MetroWindow,MahApps.Metro.Controls.Dialogs.BaseMetroDialog,MahApps.Metro.Controls.Dialogs.MetroDialogSettings)">
            <summary>指定したウィンドウに Metro ダイアログ インスタンスを追加し、非同期に表示にします。ユーザーが、ダイアログを閉じるまで待つ場合は、以下を使用します。 <see cref="!:ShowMetroDialogAsyncAwaitable"/><para><see cref="M:MahApps.Metro.Controls.Dialogs.DialogManager.HideMetroDialogAsync(MahApps.Metro.Controls.MetroWindow,MahApps.Metro.Controls.Dialogs.BaseMetroDialog,MahApps.Metro.Controls.Dialogs.MetroDialogSettings)"/>を使用して、自分自身で結果のダイアログを 閉じる必要があります。</para>
            </summary>
            <param name="window">ダイアログの所有ウィンドウ。</param>
            <param name="dialog">ダイアログ インスタンス自体。</param>
            <param name="settings">オプションの定義済み設定インスタンス。</param>
            <returns>操作を表すタスク。</returns>
            <exception cref="T:System.InvalidOperationException"><paramref name="dialog"/>は既にウィンドウに表示されています。</exception>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.DialogManager.HideMetroDialogAsync(MahApps.Metro.Controls.MetroWindow,MahApps.Metro.Controls.Dialogs.BaseMetroDialog,MahApps.Metro.Controls.Dialogs.MetroDialogSettings)">
            <summary>表示されているメトロ ダイアログ インスタンスを非表示にします。</summary>
            <param name="window">表示されているダイアログを含むウィンドウ。</param>
            <param name="dialog">非表示にするダイアログ インスタンス。</param>
            <param name="settings">オプションの定義済み設定インスタンス。</param>
            <returns>操作を表すタスク。</returns>
            <exception cref="T:System.InvalidOperationException"><paramref name="dialog"/> はウィンドウに表示されません。このことは、 <see cref="M:MahApps.Metro.Controls.Dialogs.DialogManager.ShowMetroDialogAsync(MahApps.Metro.Controls.MetroWindow,MahApps.Metro.Controls.Dialogs.BaseMetroDialog,MahApps.Metro.Controls.Dialogs.MetroDialogSettings)"/>が以前に呼び出されていない場合に発生します。</exception>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.DialogManager.GetCurrentDialogAsync``1(MahApps.Metro.Controls.MetroWindow)">
            <summary>現在表示されているダイアログを、非同期の方法で取得します。</summary>
            <param name="window">ダイアログの所有者。</param>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.DialogManager.ShowModalLoginExternal(MahApps.Metro.Controls.MetroWindow,System.String,System.String,MahApps.Metro.Controls.Dialogs.LoginDialogSettings)">
            <summary>現在のウィンドウの外側に LoginDialog を作成します。</summary>
            <param name="window">ダイアログの親であるウィンドウ。</param>
            <param name="title">LoginDialog のタイトル。</param>
            <param name="message">LoginDialog 内に含まれるメッセージ。</param>
            <param name="settings">グローバル メトロ ダイアログ設定をオーバーライドするオプション設定。</param>
            <returns>ユーザーが操作をキャンセルした場合に、入力されたか、null (Visual Basic では Nothing) となったテキスト。</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.DialogManager.ShowModalInputExternal(MahApps.Metro.Controls.MetroWindow,System.String,System.String,MahApps.Metro.Controls.Dialogs.MetroDialogSettings)">
            <summary>現在のウィンドウの外側に InputDialog を作成します。</summary>
            <param name="window">MetroWindow</param>
            <param name="title">MessageDialog のタイトル。</param>
            <param name="message">MessageDialog 内に含まれるメッセージ。</param>
            <param name="settings">グローバル メトロ ダイアログ設定をオーバーライドするオプション設定。</param>
            <returns>ユーザーが操作をキャンセルした場合に、入力されたか、null (Visual Basic では Nothing) となったテキスト。</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.DialogManager.ShowModalMessageExternal(MahApps.Metro.Controls.MetroWindow,System.String,System.String,MahApps.Metro.Controls.Dialogs.MessageDialogStyle,MahApps.Metro.Controls.Dialogs.MetroDialogSettings)">
            <summary>現在のウィンドウの外側に MessageDialog を作成します。</summary>
            <param name="window">MetroWindow</param>
            <param name="title">MessageDialog のタイトル。</param>
            <param name="message">MessageDialog 内に含まれるメッセージ。</param>
            <param name="style">使用するボタンのタイプ。</param>
            <param name="settings">グローバル メトロ ダイアログ設定をオーバーライドするオプション設定。</param>
            <returns>どのボタンが押されたかの結果を裏付けるタスク。</returns>
        </member>
        <member name="T:MahApps.Metro.Controls.Dialogs.InputDialog">
            <summary>InputDialog</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.InputDialog.InitializeComponent">
            <summary>InitializeComponent</summary>
        </member>
        <member name="T:MahApps.Metro.Controls.Dialogs.LoginDialog">
            <summary>LoginDialog</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.LoginDialog.InitializeComponent">
            <summary>InitializeComponent</summary>
        </member>
        <member name="T:MahApps.Metro.Controls.Dialogs.MessageDialog">
            <summary>メッセージ ダイアログを表す内部コントロール。代わりに MetroWindow.ShowMessage を使用してください。</summary>
            <summary>MessageDialog</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.MessageDialog.InitializeComponent">
            <summary>InitializeComponent</summary>
        </member>
        <member name="T:MahApps.Metro.Controls.Dialogs.MessageDialogResult">
            <summary>メッセージ ダイアログの結果を表す列挙型。</summary>
        </member>
        <member name="T:MahApps.Metro.Controls.Dialogs.MessageDialogStyle">
            <summary>メッセージ ダイアログの、さまざまなボタンの状態を表す列挙型。</summary>
        </member>
        <member name="F:MahApps.Metro.Controls.Dialogs.MessageDialogStyle.Affirmative">
            <summary>&quot;OK&quot; のみ</summary>
        </member>
        <member name="F:MahApps.Metro.Controls.Dialogs.MessageDialogStyle.AffirmativeAndNegative">
            <summary>&quot;OK&quot; と &quot;キャンセル&quot;</summary>
        </member>
        <member name="T:MahApps.Metro.Controls.Dialogs.ProgressDialog">
            <summary>メッセージ ダイアログを表す内部コントロール。代わりに MetroWindow.ShowMessage を使用してください。</summary>
            <summary>ProgressDialog</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.ProgressDialog.InitializeComponent">
            <summary>InitializeComponent</summary>
        </member>
        <member name="T:MahApps.Metro.Controls.Dialogs.ProgressDialogController">
            <summary>開いた ProgressDialog を操作するためのクラス。</summary>
        </member>
        <member name="E:MahApps.Metro.Controls.Dialogs.ProgressDialogController.Closed">
            <summary>このイベントは、関連付けられた <see cref="T:MahApps.Metro.Controls.Dialogs.ProgressDialog"/> がプログラムによってクローズされた場合に発生します。</summary>
        </member>
        <member name="E:MahApps.Metro.Controls.Dialogs.ProgressDialogController.Canceled">
            <summary>このイベントは、関連付けられた <see cref="T:MahApps.Metro.Controls.Dialogs.ProgressDialog"/> がユーザーによってキャンセルされた場合に発生します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.ProgressDialogController.IsCanceled">
            <summary>[キャンセル] ボタンが押された場合に取得します。</summary>        
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.ProgressDialogController.IsOpen">
            <summary>ラップされた ProgressDialog が開かれると取得します。</summary>        
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.ProgressDialogController.SetIndeterminate">
            <summary>ProgressBar の IsIndeterminate を true に設定します。それを false に設定するには、SetProgress を呼び出します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.ProgressDialogController.SetCancelable(System.Boolean)">
            <summary>[キャンセル] ボタン表示の場合に設定します。</summary>
            <param name="value"></param>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.ProgressDialogController.SetProgress(System.Double)">
            <summary>ダイアログの進行状況バーの値を設定し、IsIndeterminate を false に設定します。</summary>
            <param name="value">値として設定するパーセンテージ。</param>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.ProgressDialogController.Minimum">
            <summary>Progress Value プロパティの最小制限を取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.ProgressDialogController.Maximum">
            <summary>Progress Value プロパティの最大制限を取得/設定します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.ProgressDialogController.SetMessage(System.String)">
            <summary>ダイアログのメッセージの内容を設定します。</summary>
            <param name="message">設定するメッセージ。</param>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.ProgressDialogController.SetTitle(System.String)">
            <summary>ダイアログのタイトルを設定します。</summary>
            <param name="title">設定するタイトル。</param>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.ProgressDialogController.CloseAsync">
            <summary>ProgressDialog を閉じる操作を開始します。</summary>
            <returns>操作を表すタスク。</returns>
        </member>
        <member name="T:MahApps.Metro.Controls.AmPmComparer">
             <summary>12 が 1 より小さいことを確証する時間比較操作を表します。このことにより、 <see cref="T:MahApps.Metro.Controls.TimePickerBase"/>コントロールで選択可能な最初の時刻が 12 (AM/PM) であることが確実にになります。</summary>
            <remarks>このことにより、選択可能な最初の時刻が 12 (AM/PM) であることが確実になります。 <br></br> この比較関数は、対応する <see cref="T:MahApps.Metro.Controls.TimePickerBase"/> で、<see cref="P:MahApps.Metro.Controls.TimePickerBase.IsMilitaryTime"/> の値が false の場合にのみ使用されます。</remarks>
        </member>
        <member name="M:MahApps.Metro.Controls.ButtonHelper.GetPreserveTextCase(System.Windows.UIElement)">
            <summary>特定のボタンの、大文字/小文字動作をオーバーライドします。<c>true</c> に設定すると、大文字/小文字は保持され、変更されません。 </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.ButtonHelper.CornerRadiusProperty">
            <summary><see cref="T:System.Windows.CornerRadius" />プロパティのためのDependencyProperty。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ButtonHelper.GetCornerRadius(System.Windows.UIElement)">
            <summary>CornerRadius プロパティを使用すると、ユーザーは、各角部の半径値を設定して、ボタン角部の丸みを個別に調整できます。半径値が大きすぎる場合は、角部から角部へスムーズにブレンドされるようにスケーリングされます。(例えば、MetroButton スタイルで使用できます) 説明は、オリジナルの Microsoft description: -D から引用されています。</summary>
        </member>
        <member name="T:MahApps.Metro.Controls.ComboBoxHelper">
            <summary>ComboBox コントロールにさまざまな添付プロパティを提供するヘルパー クラス。 <see cref="T:System.Windows.Controls.ComboBox"/></summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ComboBoxHelper.GetMaxLength(System.Windows.UIElement)">
            <summary>TextBox で許容される最大文字数を取得します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ComboBoxHelper.SetMaxLength(System.Windows.UIElement,System.Int32)">
            <summary>TextBox で許容される最大文字数を設定します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ComboBoxHelper.GetCharacterCasing(System.Windows.UIElement)">
            <summary>TextBox の大文字/小文字の区別を取得します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ComboBoxHelper.SetCharacterCasing(System.Windows.UIElement,System.Windows.Controls.CharacterCasing)">
            <summary>TextBox の大文字/小文字の区別を設定します。</summary>
        </member>
        <member name="T:MahApps.Metro.Controls.ControlsHelper">
            <summary>さまざまなコントロールを提供するヘルパー クラス。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ControlsHelper.GetDisabledVisualElementVisibility(System.Windows.UIElement)">
            <summary>テンプレート内の DisabledVisualElement の可視性を処理する値を取得します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ControlsHelper.SetDisabledVisualElementVisibility(System.Windows.UIElement,System.Windows.Visibility)">
            <summary>テンプレート内の DisabledVisualElement の可視性を処理する値を設定します。</summary>
        </member>
        <member name="F:MahApps.Metro.Controls.ControlsHelper.ContentCharacterCasingProperty">
            <summary>CharacterCasing プロパティのための DependencyProperty。コンテンツを、大文字または小文字に変換するかどうかを制御します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ControlsHelper.GetContentCharacterCasing(System.Windows.UIElement)">
            <summary>コントロールの文字の大文字と小文字を取得します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ControlsHelper.SetContentCharacterCasing(System.Windows.UIElement,System.Windows.Controls.CharacterCasing)">
            <summary>コントロールの文字の大文字と小文字を設定します。</summary>
        </member>
        <member name="F:MahApps.Metro.Controls.ControlsHelper.ButtonWidthProperty">
            <summary>このプロパティは、TextBox、PasswordBox、ComboBox、NumericUpDown のボタン幅 (PART_ClearText) の設定に使用できます。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ControlsHelper.SetFocusBorderBrush(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>フォーカス境界の描画に使用するブラシを設定します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ControlsHelper.GetFocusBorderBrush(System.Windows.DependencyObject)">
            <summary>フォーカス境界の描画に使用するブラシを取得します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ControlsHelper.SetMouseOverBorderBrush(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>マウス オーバー ブラシを描画するために使用するブラシを設定します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ControlsHelper.GetMouseOverBorderBrush(System.Windows.DependencyObject)">
            <summary>マウス オーバー ブラシを描画するために使用するブラシを取得します。</summary>
        </member>
        <member name="F:MahApps.Metro.Controls.ControlsHelper.CornerRadiusProperty">
            <summary><see cref="T:System.Windows.CornerRadius" />プロパティのためのDependencyProperty。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ControlsHelper.GetCornerRadius(System.Windows.UIElement)">
            <summary>CornerRadius プロパティを使用すると、ユーザーは、各角部の半径値を設定して、ボタン角部の丸みを個別に調整できます。半径値が大きすぎる場合は、角部から角部へスムーズにブレンドされるようにスケーリングされます。(例えば、MetroButton スタイルで使用できます) 説明は、オリジナルの Microsoft description: -D から引用されています。</summary>
        </member>
        <member name="T:MahApps.Metro.Controls.CustomValidationPopup">
            <summary>このカスタム ポップアップは、バリデーション エラー テンプレートで使用されます。これは、いくつかの素晴らしい追加機能を提供します: - ホストウィンドウのサイズまたは位置が変更された場合に再配置 - ホストウィンドウが最大化された場合、その逆の場合に再配置 - ホストウィンドウがアクティブ化されている場合は最上位のみ</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.CustomValidationPopup.CloseOnMouseLeftButtonDown">
            <summary>マウスの左ボタンを押してポップアップを閉じることができれば、取得/設定します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.DataGridNumericUpDownColumn.PrepareCellForEdit(System.Windows.FrameworkElement,System.Windows.RoutedEventArgs)">
            <summary>セルが編集モードに切り替わると呼び出されます。</summary>
            <param name="editingElement">GenerateEditElement によって返される要素の参照。</param> 
            <param name="editingEventArgs">セルが編集モードに入る原因となった、入力イベントのイベント引数。null とすることができます。</param> 
            <returns>セルの未編集の値。</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.DataGridNumericUpDownColumn.SyncColumnProperty(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.DependencyProperty)">
            <summary>列プロパティを同期します。DataGrid のヘルパー コードから取得します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.DataGridNumericUpDownColumn.IsDefaultValue(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
            <summary>DataGrid のヘルパー コードから取得します。</summary>
        </member>
        <member name="F:MahApps.Metro.Controls.DataGridNumericUpDownColumn.FontFamilyProperty">
            <summary>FontFamily プロパティのための DependencyProperty。既定値：SystemFonts.MessageFontFamily</summary> 
        </member>
        <member name="P:MahApps.Metro.Controls.DataGridNumericUpDownColumn.FontFamily">
            <summary>所定のフォントのフォント ファミリ。</summary>
        </member>
        <member name="F:MahApps.Metro.Controls.DataGridNumericUpDownColumn.FontSizeProperty">
            <summary>FontSize プロパティのための DependencyProperty。既定値：SystemFonts.MessageFontSize</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.DataGridNumericUpDownColumn.FontSize">
            <summary>所定のフォントのサイズ。</summary> 
        </member>
        <member name="F:MahApps.Metro.Controls.DataGridNumericUpDownColumn.FontStyleProperty">
            <summary>FontStyle プロパティのための DependencyProperty。既定値：SystemFonts.MessageFontStyle</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.DataGridNumericUpDownColumn.FontStyle">
            <summary>所定のフォントのスタイル。</summary> 
        </member>
        <member name="F:MahApps.Metro.Controls.DataGridNumericUpDownColumn.FontWeightProperty">
            <summary>FontWeight プロパティのための DependencyProperty。既定値：SystemFonts.MessageFontWeight</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.DataGridNumericUpDownColumn.FontWeight">
            <summary>所定のフォントの重みまたは太さ。</summary>
        </member>
        <member name="F:MahApps.Metro.Controls.DataGridNumericUpDownColumn.ForegroundProperty">
            <summary>Foreground プロパティのための DependencyProperty。既定値：SystemColors.ControlTextBrush</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.DataGridNumericUpDownColumn.Foreground">
            <summary>前景色を描写するブラシ。これにより、セルの前景継承色が上書きされます。</summary> 
        </member>
        <member name="M:MahApps.Metro.Controls.DataGridNumericUpDownColumn.NotifyPropertyChangeForRefreshContent(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>RefreshCellContent を呼び出す必要があるプロパティの、プロパティ変更コールバックとして使用されるメソッド</summary>
        </member>
        <member name="F:MahApps.Metro.Controls.DropDownButton.ContentTemplateProperty">
            <summary>ContentTemplate プロパティのための DependencyProperty。</summary>
        </member>
        <member name="F:MahApps.Metro.Controls.DropDownButton.ContentTemplateSelectorProperty">
            <summary>ContentTemplateSelector プロパティのための DependencyProperty。</summary>
        </member>
        <member name="F:MahApps.Metro.Controls.DropDownButton.ContentStringFormatProperty">
            <summary>ContentStringFormat プロパティのための DependencyProperty。</summary> 
        </member>
        <member name="P:MahApps.Metro.Controls.DropDownButton.Content">
            <summary>このコントロールのコンテンツを取得または設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.DropDownButton.ContentTemplate">
            <summary>ContentTemplate は、コントロールのコンテンツを表示するために使用されるテンプレートです。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.DropDownButton.ContentTemplateSelector">
            <summary>ContentTemplateSelectを使用すると、コントロールのコンテンツ表示に使用するテンプレートを選択するための、カスタムロジックを提供できます。</summary>
            <remarks>このプロパティは、 <seealso cref="P:MahApps.Metro.Controls.DropDownButton.ContentTemplate"/>が設定されている場合は無視されます。</remarks>
        </member>
        <member name="P:MahApps.Metro.Controls.DropDownButton.ContentStringFormat">
            <summary>ContentStringFormat は、コントロールのコンテンツを文字列として表示するために使用される形式です。</summary>
            <remarks>このプロパティは、 <seealso cref="P:MahApps.Metro.Controls.DropDownButton.ContentTemplate"/>が設定されている場合は無視されます。</remarks>
        </member>
        <member name="P:MahApps.Metro.Controls.DropDownButton.CommandParameter">
            <summary>実行時に、CommandProperty に渡すパラメーターを反映します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.DropDownButton.CommandTarget">
            <summary>コマンドを起動するターゲット要素を取得または設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.DropDownButton.Command">
            <summary>コマンド プロパティを取得または設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.DropDownButton.IsExpanded">
            <summary>メニューを表示にするかどうかを示します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.DropDownButton.ExtraTag">
            <summary>追加タグを取得または設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.DropDownButton.Orientation">
            <summary>子スタッキングのディメンションを取得または設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.DropDownButton.Icon">
            <summary>アイコン部の生成に使用するコンテンツを取得または設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.DropDownButton.IconTemplate">
            <summary>アイコン部のコンテンツの表示に使用する、ContentTemplate を取得または設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.DropDownButton.ButtonStyle">
            <summary>ボタン スタイルを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.DropDownButton.MenuStyle">
            <summary>メニュー スタイルを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.DropDownButton.ArrowBrush">
            <summary>ボタン矢印アイコンのブラシを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.DropDownButton.ArrowMouseOverBrush">
            <summary>マウスがドロップダウンボタンの上にある場合は、ボタン矢印アイコンのブラシを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.DropDownButton.ArrowPressedBrush">
            <summary>矢印ボタンを押すと、ボタン矢印アイコンのブラシを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.DropDownButton.ArrowVisibility">
            <summary>ボタン矢印アイコンの表示を取得/設定します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.DropDownButton.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary><see cref="P:System.Windows.Controls.ItemsControl.Items" /> プロパティが変更された場合に呼び出されます。</summary>
            <param name="e">変更に関する情報。</param>
        </member>
        <member name="T:MahApps.Metro.Controls.FlipView">
            <summary>戻る/進むボタンでスライドショーを再現するコントロール。</summary>
        </member>
        <member name="F:MahApps.Metro.Controls.FlipView.loaded">
            <summary>二重ロード イベントの問題に対処決するため。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.FlipView.GoBack">
            <summary>現在のスライドを前のスライドに変更します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.FlipView.GoForward">
            <summary>現在のスライドを次のスライドに変更します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.FlipView.ShowControlButtons">
            <summary>コントロール ボタン (次/前) をビューにもたらします。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.FlipView.HideControlButtons">
            <summary>コントロール ボタン (次/前) をビューから削除します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.FlipView.MouseHoverBorderEnabled">
            <summary>マウス オーバー状態の境界線が有効になっているかどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.FlipView.MouseHoverBorderBrush">
            <summary>マウス ホバー境界線ブラシを取得または設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.FlipView.MouseHoverBorderThickness">
            <summary>マウス ホバー境界線太さを取得または設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.FlipView.BannerText">
            <summary>FlipView のバナーに表示されるテキストを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.FlipView.IsBannerEnabled">
            <summary>FlipView のバナーが表示されているかどうかを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.FlipView.CircularNavigation">
            <summary>ナビゲーションが循環しているかどうかを示す値を取得または設定すると、順回りおよび逆回りを取得できます。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.FlipView.IsNavigationEnabled">
            <summary>FlipView の NavigationButton が表示になっているかどうかを取得/設定します。</summary>
        </member>
        <member name="T:MahApps.Metro.Controls.Flyout">
            <summary>MetroWindow に FlyoutsControl を介してホストされるスライド パネル コントロール。 <see cref="T:MahApps.Metro.Controls.MetroWindow"/> <seealso cref="T:MahApps.Metro.Controls.FlyoutsControl"/></summary>
        </member>
        <member name="F:MahApps.Metro.Controls.Flyout.IsOpenChangedEvent">
            <summary>IsOpen が変更されると発生するイベントです。</summary>
        </member>
        <member name="F:MahApps.Metro.Controls.Flyout.ClosingFinishedEvent">
            <summary>結末のアニメーションが終了する際に発生するイベントです。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Flyout.TitleVisibility">
            <summary>このポップアップでタイトルを表示にするかどうか、取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Flyout.CloseButtonVisibility">
            <summary>このポップアップで閉じるボタンを表示にするかどうか、取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Flyout.CloseButtonIsCancel">
            <summary>このポップアップで、閉じるボタンをキャンセル ボタンとするかどうか、取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Flyout.CloseCommand">
            <summary>閉じるボタンがクリックされた場合に実行されるコマンドを取得/設定します。  <see cref="P:MahApps.Metro.Controls.Flyout.IsOpen"/> が <c>false</c>に設定されている場合、これは実行されないことに注意してください。  </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Flyout.CloseCommandParameter">
            <summary>CloseCommand によって渡されるコマンド パラメーターを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Flyout.InternalCloseCommand">
            <summary>閉じるボタンがクリックされた場合に実行されるコマンドを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Flyout.HeaderTemplate">
            <summary>ポップアップのヘッダー用 DataTemplate です。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Flyout.IsOpen">
            <summary>このポップアップが表示になっているかどうかを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Flyout.AnimateOnPositionChange">
            <summary><see cref="P:MahApps.Metro.Controls.Flyout.Position"/>プロパティを変更する際に、このポップアップが、開始/終了アニメーションを使用するかどうかを取得/設定します。(デフォルトは true)</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Flyout.AnimateOpacity">
            <summary>このポップアップが、開始/終了時に、ポップアップの不透明度をアニメーションにするかどうかを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Flyout.IsPinned">
            <summary>ユーザーが、このポップアップの外側をクリックする場合に、開いたままにするかどうかを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Flyout.ExternalCloseButton">
            <summary>外部マウス クリックで、ポップアップを閉じるマウス ボタンを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Flyout.IsModal">
            <summary>このポップアップがモーダルであるかどうかを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Flyout.Position">
            <summary>このポップアップの、FlyoutsControl/MetroWindow における位置を取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Flyout.Header">
            <summary>フライアウトのヘッダーを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Flyout.Theme">
            <summary>このフライアウトのテーマを取得または設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Flyout.FocusedElement">
            <summary>フォーカスされた要素を取得または設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Flyout.IsAutoCloseEnabled">
            <summary>AutoCloseInterval が過ぎた後に、ポップアップを自動的に閉じるかどうかを示す値を、取得または設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Flyout.AutoCloseInterval">
            <summary>フライアウトが自動的に閉じる時間を、ミリ秒単位で取得または設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Flyout.AllowFocusElement">
            <summary>ポップアップが、要素にフォーカスを試みるかどうかを示す値を、取得または設定します。</summary>
        </member>
        <member name="T:MahApps.Metro.Controls.FlyoutsControl">
            <summary>FlyoutsControl は、MetroWindow にポップアップを表示するためにあります。 <see cref="T:MahApps.Metro.Controls.MetroWindow"/></summary>
        </member>
        <member name="P:MahApps.Metro.Controls.FlyoutsControl.OverrideExternalCloseButton">
            <summary><see cref="P:MahApps.Metro.Controls.Flyout.ExternalCloseButton"/>が無視され、すべてのポップアップが、このプロパティの値に設定されているかのように
動作するかどうか取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.FlyoutsControl.OverrideIsPinned">
            <summary><see cref="P:MahApps.Metro.Controls.Flyout.IsPinned"/>が無視され、すべてのポップアップが false に設定されているかのように動作するかどうか、取得/設定します。</summary>
        </member>
        <member name="F:MahApps.Metro.Controls.FlyoutTheme.Adapt">
            <summary>ポップアップのテーマを、ホスト ウィンドウのテーマに順応させます。</summary>
        </member>
        <member name="F:MahApps.Metro.Controls.FlyoutTheme.Inverse">
            <summary>ポップアップのテーマを、ホスト ウィンドウのテーマに順応させますが、反転させます。このテーマは、ホスト ウィンドウのテーマが &quot;Dark&quot; と &quot;Light&quot; の接辞規則に従っている場合にのみ適用できます。(詳細は、 <see cref="M:MahApps.Metro.ThemeManager.GetInverseAppTheme(MahApps.Metro.AppTheme)"/>を参照してください。</summary>
        </member>
        <member name="F:MahApps.Metro.Controls.FlyoutTheme.Dark">
            <summary>濃色テーマ。これはデフォルトのテーマです。</summary>
        </member>
        <member name="F:MahApps.Metro.Controls.FlyoutTheme.Accent">
            <summary>ポップアップ テーマは、ホスト ウィンドウのアクセント カラーと一致します。</summary>
        </member>
        <member name="T:MahApps.Metro.Controls.GlowWindow">
            <summary>GlowWindow</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.GlowWindow.InitializeComponent">
            <summary>InitializeComponent</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.DataGridCellHelper.GetSaveDataGrid(System.Windows.UIElement)">
            <summary>DataGrid を保存します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.DataGridCellHelper.GetDataGrid(System.Windows.UIElement)">
            <summary>DataGrid を取得します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.DataGridCellHelper.GetSelectionUnit(System.Windows.UIElement)">
            <summary>DataGridCell 選択動作を定義する値を取得します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.DataGridCellHelper.SetSelectionUnit(System.Windows.UIElement,System.Windows.Controls.DataGridSelectionUnit)">
            <summary>DataGridCell 選択動作を定義する値を設定します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.DataGridCellHelper.GetIsCellOrRowHeader(System.Windows.UIElement)">
            <summary>DataGridCell 選択動作を定義する値を取得します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.DataGridCellHelper.SetIsCellOrRowHeader(System.Windows.UIElement,System.Boolean)">
            <summary>DataGridCell 選択動作を定義する値を設定します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.DataGridRowHelper.GetSelectionUnit(System.Windows.UIElement)">
            <summary>DataGridRow 選択動作を定義する値を取得します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.DataGridRowHelper.SetSelectionUnit(System.Windows.UIElement,System.Windows.Controls.DataGridSelectionUnit)">
            <summary>DataGridRow 選択動作を定義する値を設定します。</summary>
        </member>
        <member name="T:MahApps.Metro.Controls.ExpanderHelper">
            <summary>Expander コントロールにさまざまな添付プロパティを提供するヘルパー クラス。 <see cref="T:System.Windows.Controls.Expander"/></summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ExpanderHelper.GetHeaderUpStyle(System.Windows.UIElement)">
            <summary>ExpandDirection Up に使用するトグル ボタン スタイルを取得します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ExpanderHelper.SetHeaderUpStyle(System.Windows.UIElement,System.Windows.Style)">
            <summary>ExpandDirection Up に使用するトグル ボタン スタイルを設定します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ExpanderHelper.GetHeaderDownStyle(System.Windows.UIElement)">
            <summary>ExpandDirection Down に使用するトグルボタンスタイルを取得します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ExpanderHelper.SetHeaderDownStyle(System.Windows.UIElement,System.Windows.Style)">
            <summary>ExpandDirection Down に使用するトグル ボタン スタイルを設定します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ExpanderHelper.GetHeaderLeftStyle(System.Windows.UIElement)">
            <summary>ExpandDirection Left に使用するトグル ボタン スタイルを取得します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ExpanderHelper.SetHeaderLeftStyle(System.Windows.UIElement,System.Windows.Style)">
            <summary>ExpandDirection Left に使用するトグル ボタン スタイルを設定します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ExpanderHelper.GetHeaderRightStyle(System.Windows.UIElement)">
            <summary>ExpandDirection Right に使用するトグル ボタン スタイルを取得します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ExpanderHelper.SetHeaderRightStyle(System.Windows.UIElement,System.Windows.Style)">
            <summary>ExpandDirection Right に使用するトグル ボタン スタイルを設定します。</summary>
        </member>
        <member name="F:MahApps.Metro.Controls.MouseWheelChange.SmallChange">
            <summary>ユーザーが、定義された値でマウス ホイールを回転させる場合は、スライダーの値を変更します。 <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange"/></summary>
        </member>
        <member name="F:MahApps.Metro.Controls.MouseWheelChange.LargeChange">
            <summary>ユーザーが、定義された値でマウス ホイールを回転させる場合は、スライダーの値を変更します。 <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange"/></summary>
        </member>
        <member name="F:MahApps.Metro.Controls.MouseWheelState.None">
            <summary>ユーザーがマウス ホイールを回転させる場合は、スライダーの値を変更しないでください。</summary>
        </member>
        <member name="F:MahApps.Metro.Controls.MouseWheelState.ControlFocused">
            <summary>コントロールがフォーカスされている場合にのみ、スライダーの値を変更します。</summary>
        </member>
        <member name="F:MahApps.Metro.Controls.MouseWheelState.MouseHover">
            <summary>マウス ポインターがこの要素の上にある場合は、スライダーの値を変更します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.SliderHelper.GetChangeValueBy(System.Windows.Controls.Slider)">
            <summary>ユーザーがマウス ホイールを回転させた場合に、値を変更する方法を取得/設定します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.SliderHelper.SetChangeValueBy(System.Windows.Controls.Slider,MahApps.Metro.Controls.MouseWheelChange)">
            <summary>ユーザーがマウス ホイールを回転させた場合に、値を変更する方法を取得/設定します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.SliderHelper.GetEnableMouseWheel(System.Windows.Controls.Slider)">
            <summary>スライダーが変更される場合の値を取得/設定します。可能な値は、スライダーがフォーカスされている場合、またはマウスがスライダーの上にある場合です。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.SliderHelper.SetEnableMouseWheel(System.Windows.Controls.Slider,MahApps.Metro.Controls.MouseWheelState)">
            <summary>スライダーを変更される場合の値を取得/設定します。可能な値は、スライダーがフォーカスされている場合、またはマウスがスライダーの上にある場合です。</summary>
        </member>
        <member name="T:MahApps.Metro.Controls.TimePicker">
            <summary>ユーザーが時刻を選択できるようにする、コントロールを表します。</summary>
        </member>
        <member name="T:MahApps.Metro.Controls.TimePickerBase">
            <summary>時間ピッキングの基本クラスを表します。</summary>
        </member>
        <member name="F:MahApps.Metro.Controls.TimePickerBase.IsDatePickerVisiblePropertyKey">
            <summary>この読み取り専用依存関係プロパティは、日付ピッカーを表示するか ( <see cref="T:MahApps.Metro.Controls.DateTimePicker"/> の場合) または非表示にするか ( <see cref="T:MahApps.Metro.Controls.TimePicker"/> の場合) を制御します 。</summary>
        </member>
        <member name="F:MahApps.Metro.Controls.TimePickerBase.MinTimeOfDay">
            <summary>それぞれ、時刻 00:00:00、12:00:00 AM を表します</summary>
        </member>
        <member name="F:MahApps.Metro.Controls.TimePickerBase.MaxTimeOfDay">
            <summary>それぞれ、時刻 23:59:59.9999999、11:59:59.9999999 を表します。 </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.TimePickerBase.IntervalOf5">
            <summary>このリストには、間隔が 5 の 0 ~ 55 の値が含まれています。それは、 <see cref="P:MahApps.Metro.Controls.TimePickerBase.SourceMinutes"/> および  <see cref="P:MahApps.Metro.Controls.TimePickerBase.SourceSeconds"/> にバインドするために使用できます。</summary>
            <example>
            <code>&lt;MahApps:TimePicker SourceSeconds=&quot;{x:Static MahApps:TimePickerBase.IntervalOf5}&quot; /&gt;</code>
            <code>&lt;MahApps:DateTimePicker SourceSeconds=&quot;{x:Static MahApps:TimePickerBase.IntervalOf5}&quot; /&gt;</code>
            </example>
            <returns>{0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55} を含むリストを返します。</returns>
        </member>
        <member name="F:MahApps.Metro.Controls.TimePickerBase.IntervalOf10">
            <summary>このリストには、間隔が 10 の 0 ~ 50 の値が含まれています。それは、 <see cref="P:MahApps.Metro.Controls.TimePickerBase.SourceMinutes"/> および  <see cref="P:MahApps.Metro.Controls.TimePickerBase.SourceSeconds"/> にバインドするために使用できます。</summary>
            <example>
            <code>&lt;MahApps:TimePicker SourceSeconds=&quot;{x:Static MahApps:TimePickerBase.IntervalOf5}&quot; /&gt;</code>
            <code>&lt;MahApps:DateTimePicker SourceSeconds=&quot;{x:Static MahApps:TimePickerBase.IntervalOf5}&quot; /&gt;</code>
            </example>
            <returns>{0, 10, 20, 30, 40, 50} を含むリストを返します。</returns>
        </member>
        <member name="F:MahApps.Metro.Controls.TimePickerBase.IntervalOf15">
            <summary>このリストには、間隔が 15 の 0 ~ 45 の値が含まれています。それは、 <see cref="P:MahApps.Metro.Controls.TimePickerBase.SourceMinutes"/> および  <see cref="P:MahApps.Metro.Controls.TimePickerBase.SourceSeconds"/> にバインドするために使用できます。</summary>
            <example>
            <code>&lt;MahApps:TimePicker SourceSeconds=&quot;{x:Static MahApps:TimePickerBase.IntervalOf5}&quot; /&gt;</code>
            <code>&lt;MahApps:DateTimePicker SourceSeconds=&quot;{x:Static MahApps:TimePickerBase.IntervalOf5}&quot; /&gt;</code>
            </example>
            <returns>{0, 15, 30, 45} を含むリストを返します。</returns>
        </member>
        <member name="E:MahApps.Metro.Controls.TimePickerBase.SelectedTimeChanged">
            <summary><see cref="P:MahApps.Metro.Controls.TimePickerBase.SelectedTime" />プロパティが変更される場合に発生します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.TimePickerBase.Culture">
            <summary>文字列書式設定操作で使用するカルチャを示す値を取得または設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.TimePickerBase.HandVisibility">
            <summary>ユーザー インターフェイス (UI) で時計の針の可視性を示す値を取得または設定します。</summary>
            <returns>時計の針の可視性の定義。デフォルトは <see cref="F:MahApps.Metro.Controls.TimePartVisibility.All" /> です。</returns>
        </member>
        <member name="P:MahApps.Metro.Controls.TimePickerBase.IsDatePickerVisible">
            <summary>日付を選択できるかどうかを示す値を取得または設定します。このプロパティは読み取り専用です。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.TimePickerBase.IsClockVisible">
            <summary>このコントロールのクロックが、ユーザー インターフェイス (UI) に表示されるかどうかを示す値を、取得または設定します。これは依存関係プロパティです。</summary>
            <remarks>この値が false に設定されると、 <see cref="T:System.Windows.Controls.Orientation" />は、 <see cref="F:System.Windows.Controls.Orientation.Vertical" /></remarks>
            <returns>クロックが表示されている場合は true、それ以外はfalse になります。既定値は true です。</returns>
        </member>
        <member name="P:MahApps.Metro.Controls.TimePickerBase.IsDropDownOpen">
            <summary><see cref="T:MahApps.Metro.Controls.TimePickerBase"/> ボックスのドロップダウンが、現在開いているかどうかを示す値を取得または設定します。</summary>
            <returns>ドロップダウンが開いている場合は true、それ以外はfalse になります。既定値は false です。</returns>
        </member>
        <member name="P:MahApps.Metro.Controls.TimePickerBase.IsReadOnly">
            <summary><see cref="T:MahApps.Metro.Controls.TimePickerBase" />の内容が、編集可能でないかどうかを示す値を、取得または設定します。</summary>
            <returns><see cref="T:MahApps.Metro.Controls.TimePickerBase" />が読み取り専用の場合は true、それ以外は false になります。既定値は false です。</returns>
        </member>
        <member name="P:MahApps.Metro.Controls.TimePickerBase.PickerVisibility">
            <summary>ユーザー インターフェイス (UI) で選択可能な、デート-タイム-パーツの可視性を示す値を、取得または設定します。</summary>
            <returns>選択可能なデート-タイム-パーツの可視性定義。デフォルトは <see cref="F:MahApps.Metro.Controls.TimePartVisibility.All" /> です。</returns>
        </member>
        <member name="P:MahApps.Metro.Controls.TimePickerBase.SelectedTime">
            <summary>現在選択されている時刻を取得または設定します。</summary>
            <returns>現在選択されている時刻。デフォルトは null です。</returns>
        </member>
        <member name="P:MahApps.Metro.Controls.TimePickerBase.SourceHours">
            <summary>時を選択するためのコンテンツの生成に使用されるコレクションを取得または設定します。</summary>
            <returns>時を選択するためのコンテンツの生成に使用されるコレクション。デフォルトは、 <see cref="P:MahApps.Metro.Controls.TimePickerBase.IsMilitaryTime" /> が false の場合は 0 ~ 23 の整数のリスト、それ以外は 1 から 12 までの整数のリストです。</returns>
        </member>
        <member name="P:MahApps.Metro.Controls.TimePickerBase.SourceMinutes">
            <summary>分を選択するためのコンテンツの生成に使用されるコレクションを取得または設定します。</summary>
            <returns>分を選択するためのコンテンツの生成に使用されるコレクション。デフォルトは int 0 ~ 59 のリストです。</returns>
        </member>
        <member name="P:MahApps.Metro.Controls.TimePickerBase.SourceSeconds">
            <summary>秒を選択するためのコンテンツの生成に使用されるコレクションを取得または設定します。</summary>
            <returns>分を選択するためのコンテンツの生成に使用されるコレクション。デフォルトは int 0 ~ 59 のリストです。</returns>
        </member>
        <member name="P:MahApps.Metro.Controls.TimePickerBase.IsMilitaryTime">
            <summary>   <see cref="P:MahApps.Metro.Controls.TimePickerBase.Culture" /> により設定された <see cref="T:System.Globalization.CultureInfo" /> に指定された <see cref="P:System.Globalization.DateTimeFormatInfo.AMDesignator" /> が (<see cref="P:System.Windows.FrameworkElement.Language" /> null の場合)、値を持っていないかどうかを示す値を取得します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.TimePickerBase.OnApplyTemplate">
            <summary>派生クラスでオーバーライドされた場合、アプリケーション コードまたは内部プロセスが<see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> を呼び出すたびに起動されます。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.TimePickerBase.GetAmPmOffset(System.Int32)">
            <summary>選択した <paramref name="currentHour" /> からオフセットを取得し、それを <see cref="T:System.TimeSpan" /> で時間パラメータとして使用します。 </summary>
            <param name="currentHour">現在の時間。</param>
            <returns>正しい <see cref="P:System.DateTime.TimeOfDay" /> を設定するため、時間ピッカーで選択された時間に追加するオフセットを表す整数。オフセットは次のように決定されます。<list type="table"><listheader><term>条件</term><description>オフセット</description></listheader> <item><term><see cref="P:MahApps.Metro.Controls.TimePickerBase.IsMilitaryTime" /> は false</term><description>0</description></item> <item><term>選択時間は 1 AM から 11 AM の間</term><description>0</description></item> <item><term>選択時間は 12 AM</term><description>-12h</description></item> <item><term>選択時間は 12 PM と 11 PM の間</term><description>+12h</description></item></list></returns>
        </member>
        <member name="T:MahApps.Metro.Controls.MetroAnimatedSingleRowTabControl">
            <summary>1 行に TabItem/MetroTabItem ヘッダーをラップする MetroTabControl (ピボット)。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.MetroAnimatedSingleRowTabControl.#ctor">
            <summary>MahApps.Metro.Controls.MetroAnimatedSingleRowTabControl クラスの新しいインスタンスを初期化します。</summary>
        </member>
        <member name="T:MahApps.Metro.Controls.MetroAnimatedTabControl">
            <summary>TransitioningContentControl を使用して TabItem/MetroTabItem の内容をアニメ化する MetroTabControl (ピボット)。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.MetroAnimatedTabControl.#ctor">
            <summary>MahApps.Metro.Controls.MetroAnimatedTabControl クラスの新しいインスタンスを初期化します。</summary>
        </member>
        <member name="T:MahApps.Metro.Controls.MetroNavigationWindow">
            <summary>MetroWindow に基づく NavigationWindow の再実装。</summary><see cref="T:System.Windows.Navigation.NavigationWindow"/><summary>MetroNavigationWindow</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroNavigationWindow.ForwardStack">
            <summary>NavigationWindow の戻るナビゲーション履歴のエントリを列挙するために使用する IEnumerable を取得します。</summary><see cref="P:System.Windows.Navigation.NavigationWindow.ForwardStack"/></member>
        <member name="P:MahApps.Metro.Controls.MetroNavigationWindow.BackStack">
            <summary>NavigationWindow の戻るナビゲーション履歴のエントリを列挙するために使用する IEnumerable を取得します。</summary><see cref="P:System.Windows.Navigation.NavigationWindow.BackStack"/></member>
        <member name="P:MahApps.Metro.Controls.MetroNavigationWindow.NavigationService">
            <summary>この MetroNavigationWindow によって使用される NavigationService を取得し、そのコンテンツにナビゲーション サービスを提供します。</summary><see cref="P:System.Windows.Navigation.NavigationWindow.NavigationService"/></member>
        <member name="P:MahApps.Metro.Controls.MetroNavigationWindow.CanGoBack">
            <summary>戻るナビゲーション履歴に、少なくとも 1 つのエントリがあるかどうかを示す値を取得します。</summary><see cref="P:System.Windows.Navigation.NavigationWindow.CanGoBack"/></member>
        <member name="P:MahApps.Metro.Controls.MetroNavigationWindow.CanGoForward">
            <summary>次に進むナビゲーション履歴に、少なくとも 1 つのエントリがあるかどうかを示す値を取得します。</summary><see cref="P:System.Windows.Navigation.NavigationWindow.CanGoForward"/></member>
        <member name="P:MahApps.Metro.Controls.MetroNavigationWindow.System#Windows#Markup#IUriContext#BaseUri">
            <summary>現在のコンテキストの基本 Uniform Resource Identifier (URI) を取得または設定します。</summary><see cref="P:System.Windows.Markup.IUriContext.BaseUri"/></member>
        <member name="P:MahApps.Metro.Controls.MetroNavigationWindow.Source">
            <summary>現在のコンテンツの Uniform Resource Identifier (URI)、または現在ナビゲートされている新しいコンテンツの URI を、取得または設定します。</summary><see cref="P:System.Windows.Navigation.NavigationWindow.Source"/></member>
        <member name="M:MahApps.Metro.Controls.MetroNavigationWindow.AddBackEntry(System.Windows.Navigation.CustomContentState)">
            <summary>CustomContentState オブジェクトを含む、戻るナビゲーション履歴にエントリを追加します。</summary>
            <param name="state">コンテンツの特定部分に関連付けらる、アプリケーション定義状態を表す CustomContentState オブジェクト。</param><see cref="M:System.Windows.Navigation.NavigationWindow.AddBackEntry(System.Windows.Navigation.CustomContentState)"/></member>
        <member name="M:MahApps.Metro.Controls.MetroNavigationWindow.RemoveBackEntry">
            <summary>戻る履歴から最新のジャーナル項目を削除します。</summary>
            <returns>戻るナビゲーション履歴の、最新の JournalEntry (存在する場合)。</returns><see cref="M:System.Windows.Navigation.NavigationWindow.RemoveBackEntry"/></member>
        <member name="M:MahApps.Metro.Controls.MetroNavigationWindow.GoBack">
            <summary>戻るナビゲーション履歴の、最新の項目に移動します。</summary><see cref="M:System.Windows.Navigation.NavigationWindow.GoBack"/></member>
        <member name="M:MahApps.Metro.Controls.MetroNavigationWindow.GoForward">
            <summary>次に進むナビゲーション履歴の、最新の項目に移動します。</summary><see cref="M:System.Windows.Navigation.NavigationWindow.GoForward"/></member>
        <member name="M:MahApps.Metro.Controls.MetroNavigationWindow.Navigate(System.Object)">
            <summary>オブジェクトに含まれるコンテンツに非同期的に移動します。</summary>
            <param name="content">移動先のコンテンツを含むオブジェクト。</param>
            <returns>ナビゲーションがキャンセルされない場合は true、それ以外は false です。</returns><see cref="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Object)"/></member>
        <member name="M:MahApps.Metro.Controls.MetroNavigationWindow.Navigate(System.Uri)">
            <summary>Uniform Resource Identifier (URI) によって指定されたコンテンツに非同期に移動します。</summary>
            <param name="source">所定のコンテンツの URI で初期化された URI オブジェクト。</param>
            <returns>ナビゲーションがキャンセルされない場合は true、それ以外は false です。</returns><see cref="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Uri)"/></member>
        <member name="M:MahApps.Metro.Controls.MetroNavigationWindow.Navigate(System.Object,System.Object)">
            <summary>オブジェクトに含まれるコンテンツに非同期的に移動し、ナビゲーションの間の処理に使用するデータを含むオブジェクトを渡します。</summary>
            <param name="content">移動先のコンテンツを含むオブジェクト。</param>
            <param name="extraData">ナビゲーションの間の処理に使用するデータを含むオブジェクト。</param>
            <returns>ナビゲーションがキャンセルされない場合は true、それ以外は false です。</returns><see cref="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Object,System.Object)"/></member>
        <member name="M:MahApps.Metro.Controls.MetroNavigationWindow.Navigate(System.Uri,System.Object)">
            <summary>Uniform Resource Identifier (URI) にあるソース コンテンツに非同期的に移動し、ナビゲーションの間の処理に使用するデータを含むオブジェクトを渡します。</summary>
            <param name="source">所定のコンテンツの URI で初期化された URI オブジェクト。</param>
            <param name="extraData">ナビゲーションの間の処理に使用するデータを含むオブジェクト。</param>
            <returns>ナビゲーションがキャンセルされない場合は true、それ以外は false です。</returns><see cref="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Uri,System.Object)"/></member>
        <member name="M:MahApps.Metro.Controls.MetroNavigationWindow.StopLoading">
            <summary>現在のナビゲーション要求のコンテンツの、それ以上のダウンロードを中止します。</summary><see cref="M:System.Windows.Navigation.NavigationWindow.StopLoading"/></member>
        <member name="E:MahApps.Metro.Controls.MetroNavigationWindow.FragmentNavigation">
            <summary>コンテンツ フラグメントへのナビゲーションが始まると発生します。このことは、所定のフラグメントが現在のコンテンツ内にある場合はすぐに、もしくは所定のフラグメントが異なるコンテンツにある場合はソース XAML コンテンツが読み込まれた後に発生します。</summary><see cref="E:System.Windows.Navigation.NavigationWindow.FragmentNavigation"/></member>
        <member name="E:MahApps.Metro.Controls.MetroNavigationWindow.Navigating">
            <summary>新しいナビゲーションが要求されると発生します。</summary><see cref="E:System.Windows.Navigation.NavigationWindow.Navigating"/></member>
        <member name="E:MahApps.Metro.Controls.MetroNavigationWindow.NavigationFailed">
            <summary>要求されたコンテンツへの移動中にエラーが発生すると発生します。</summary><see cref="E:System.Windows.Navigation.NavigationWindow.NavigationFailed"/></member>
        <member name="E:MahApps.Metro.Controls.MetroNavigationWindow.NavigationProgress">
            <summary>ナビゲーションの進捗情報を提供するために、ダウンロードの間に定期的に発生します。</summary><see cref="E:System.Windows.Navigation.NavigationWindow.NavigationProgress"/></member>
        <member name="E:MahApps.Metro.Controls.MetroNavigationWindow.NavigationStopped">
            <summary>StopLoading メソッドが呼び出された場合、または現在のナビゲーションの進捗中に、新しいナビゲーションが要求された場合に発生します。</summary><see cref="E:System.Windows.Navigation.NavigationWindow.NavigationStopped"/></member>
        <member name="E:MahApps.Metro.Controls.MetroNavigationWindow.Navigated">
            <summary>移動先のコンテンツが見つかり、PageContent プロパティから利用できる場合に発生しますが、読み込みが完了していない可能性があります。</summary><see cref="E:System.Windows.Navigation.NavigationWindow.Navigated"/></member>
        <member name="E:MahApps.Metro.Controls.MetroNavigationWindow.LoadCompleted">
            <summary>移動先のコンテンツが読み込まれ、解析され、レンダリングが開始されると発生します。</summary><see cref="E:System.Windows.Navigation.NavigationWindow.LoadCompleted"/></member>
        <member name="M:MahApps.Metro.Controls.MetroNavigationWindow.InitializeComponent">
            <summary>InitializeComponent</summary>
        </member>
        <member name="T:MahApps.Metro.Controls.MetroProgressBar">
            <summary>メトロ化される ProgressBar。 <see cref="T:System.Windows.Controls.ProgressBar"/></summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroProgressBar.EllipseDiameter">
            <summary>不確定なアニメーションで使用される楕円の直径を取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroProgressBar.EllipseOffset">
            <summary>不確定なアニメーションで使用される楕円のオフセットを取得/設定します。</summary>
        </member>
        <member name="T:MahApps.Metro.Controls.MetroTabControl">
            <summary>標準 MetroTabControl (ピボット)。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.MetroTabControl.#ctor">
            <summary>MahApps.Metro.Controls.MetroTabControl クラスの新しいインスタンスを初期化します。</summary>
        </member>
        <member name="T:MahApps.Metro.Controls.BaseMetroTabControl">
            <summary>すべての MetroTabControl (ピボット) の基本クラス。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.BaseMetroTabControl.CloseTabCommand">
            <summary>MetroTabItemの閉じるボタンがクリックされると実行されるコマンドを取得/設定します。</summary>
        </member>
        <member name="E:MahApps.Metro.Controls.BaseMetroTabControl.TabItemClosingEvent">
            <summary>TabItem が閉じられると発生するイベント。</summary>
        </member>
        <member name="T:MahApps.Metro.Controls.BaseMetroTabControl.TabItemClosingEventArgs">
            <summary>TabItem が閉じられると作成されるイベント引数。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.BaseMetroTabControl.TabItemClosingEventArgs.ClosingTabItem">
            <summary>閉じられる MetroTabItem を取得します。</summary>
        </member>
        <member name="T:MahApps.Metro.Controls.MetroTabItem">
            <summary>メトロ スタイルによる拡張 TabItem。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroTabItem.CloseButtonEnabled">
            <summary>閉じるボタンを表示にするかどうかを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroTabItem.InternalCloseTabCommand">
            <summary>閉じるボタンがクリックされると実行されるコマンドを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroTabItem.CloseTabCommand">
            <summary>閉じるボタンがクリックされると実行されるコマンドを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroTabItem.CloseTabCommandParameter">
            <summary>閉じるボタン コマンドに渡されるコマンド パラメーターを取得/設定します。</summary>
        </member>
        <member name="T:MahApps.Metro.Controls.MetroWindowHelpers">
            <summary>このクラスは、子クラスを発生させます。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.MetroWindowHelpers.SetIsHitTestVisibleInChromeProperty``1(MahApps.Metro.Controls.MetroWindow,System.String,System.Boolean)">
            <summary>IsHitTestVisibleInChromeProperty を MetroWindow テンプレートの子に設定します。</summary>
            <param name="window">MetroWindow.</param>
            <param name="name">テンプレートの子の名前。</param>
            <param name="hitTestVisible"></param>
        </member>
        <member name="M:MahApps.Metro.Controls.MetroWindowHelpers.SetWindowChromeResizeGripDirection(MahApps.Metro.Controls.MetroWindow,System.String,Microsoft.Windows.Shell.ResizeGripDirection)">
            <summary>WindowChrome ResizeGripDirection を MetroWindow テンプレートの子に設定します。</summary>
            <param name="window">MetroWindow.</param>
            <param name="name">テンプレートの子の名前。</param>
            <param name="direction">方向。</param>
        </member>
        <member name="M:MahApps.Metro.Controls.MetroWindowHelpers.HandleWindowCommandsForFlyouts(MahApps.Metro.Controls.MetroWindow,System.Collections.Generic.IEnumerable{MahApps.Metro.Controls.Flyout},System.Windows.Media.Brush)">
            <summary>WindowCommands を、最初に開いた、一番上の &amp;&amp; (上 || 右 || 左) のポップアップに順応させます。</summary>
            <param name="window">MetroWindow</param>
            <param name="flyouts">すべてのポップアップまたは、要約で記述されているカテゴリに分類されるポップアップ。</param>
            <param name="resetBrush">ウィンドウ コマンド ブラシをリセットするためのオプションのブラシ。</param>
        </member>
        <member name="T:MahApps.Metro.Controls.NumericUpDown">
            <summary>数値を表示する Windows スピン ボックス (アップダウン コントロールとも呼ばれます) を表します。</summary>
        </member>
        <member name="E:MahApps.Metro.Controls.NumericUpDown.MaximumReached">
            <summary>この NumericUpDownから、その値が最大値に達すると起動されるイベント</summary>
        </member>
        <member name="E:MahApps.Metro.Controls.NumericUpDown.MinimumReached">
            <summary>この NumericUpDownから、その値が最小値に達すると起動されるイベント</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.NumericUpDown.Delay">
            <summary>NumericUpDown が、<see cref="P:MahApps.Metro.Controls.NumericUpDown.Value" />の、指定された<see cref="P:MahApps.Metro.Controls.NumericUpDown.Interval" />のための増減の開始を、上下ボタンが押されるまで待機する時間をミリ秒単位で取得または設定します。値は負以外でなければなりません。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.NumericUpDown.InterceptArrowKeys">
            <summary>ユーザーが、矢印キー <see cref="F:System.Windows.Input.Key.Up"/> と <see cref="F:System.Windows.Input.Key.Down"/> を
 値を変更するために使用できるかどうかを示す値を取得または設定します。 </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.NumericUpDown.InterceptMouseWheel">
            <summary>ユーザーが、マウス ホイールを使用して値を変更できるかどうかを示す値を、取得または設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.NumericUpDown.TrackMouseWheelWhenMouseOver">
            <summary>コントロールが、マウス ホイールを使用して数値を変更するために、フォーカスされる必要があるかどうかを示す値を取得または設定します。<remarks>値が true の場合、マウス ホイールがコントロール上にあると数値は変更されます。値が false の場合、コントロールがフォーカスされている場合のみに数値が変更されます。  <see cref="P:MahApps.Metro.Controls.NumericUpDown.InterceptMouseWheel"/> が &quot;false&quot; に設定されている場合、このプロパティは無効です。</remarks>
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.NumericUpDown.InterceptManualEnter">
            <summary>ユーザーが、コントロールにテキストを入力できるかどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.NumericUpDown.Culture">
            <summary>文字列書式設定操作で使用するカルチャを示す値を取得または設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.NumericUpDown.HideUpDownButtons">
            <summary>コントロールの +/- ボタンが、表示になっているかどうかを示す値を取得または設定します。</summary>
            <remarks>値が false の場合は、コントロールの <see cref="P:MahApps.Metro.Controls.NumericUpDown.Value" /> は、次のいずれかのケースが満たされた場合にのみ変更できます。 <list type="bullet"><item><description><see cref="P:MahApps.Metro.Controls.NumericUpDown.InterceptArrowKeys" /> が true。</description></item> <item><description><see cref="P:MahApps.Metro.Controls.NumericUpDown.InterceptMouseWheel" /> が true。</description></item> <item><description><see cref="P:MahApps.Metro.Controls.NumericUpDown.InterceptManualEnter" /> が true。</description></item></list></remarks>
        </member>
        <member name="P:MahApps.Metro.Controls.NumericUpDown.IsReadOnly">
            <summary>テキストを、上下ボタンのみを使用して変更できるかどうかを示す値を、取得または設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.NumericUpDown.Speedup">
            <summary><see cref="P:MahApps.Metro.Controls.NumericUpDown.Value" /> に加算または減算する値が、 常に <see cref="P:MahApps.Metro.Controls.NumericUpDown.Interval" /> のままであるか、または何らかのタイミングで上下ボタン/矢印を押した後、急速に増加するかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.NumericUpDown.StringFormat">
            <summary>を表示する書式を取得または設定します。 <see cref="P:MahApps.Metro.Controls.NumericUpDown.Value" /></summary>
            <remarks><see href="http://msdn.microsoft.com/ja-jp/library/dwhawy9k.aspx"></see></remarks>
        </member>
        <member name="P:MahApps.Metro.Controls.NumericUpDown.TextAlignment">
            <summary>テキスト ボックスの内容の、水平方向の配置を取得または設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.NumericUpDown.HasDecimals">
            <summary>NumericUpDown が、小数桁の区切り文字を表示するかどうかを示します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.NumericUpDown.OnGotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>この要素または以下のいずれかが、フォーカスを取得すると呼び出されます。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.NumericUpDown.OnApplyTemplate">
            <summary>派生クラスでオーバーライドされた場合、アプリケーション コードまたは内部プロセスが<see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> を呼び出すたびに起動されます。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.NumericUpDown.OnValueChanged(System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary><see cref="E:MahApps.Metro.Controls.NumericUpDown.ValueChanged" />ルーティング イベントを発生させます。</summary>
            <param name="oldValue"><see cref="P:MahApps.Metro.Controls.NumericUpDown.Value" />プロパティの古い値</param>
            <param name="newValue"><see cref="P:MahApps.Metro.Controls.NumericUpDown.Value" />プロパティの新しい値</param>
        </member>
        <member name="T:MahApps.Metro.Controls.Position">
            <summary>左または右など、異なる位置を表す列挙型です。</summary>
        </member>
        <member name="T:MahApps.Metro.Controls.PropertyChangeNotifier">
            <summary>既にご存知のとおり、依存関係プロパティ記述子の AddValueChanged は、メモリ リークをもたらします。したがって、ここで説明するように、カスタム クラス PropertyChangeNotifier を作成して、依存関係プロパティの変更をリッスンできます。このクラスは、バインディングが弱い参照を使用して関連付けを管理するという事実を利用して、プロパティの変更を監視しているオブジェクトをクラスがルーティングしないようにします。また、WeakReference を使用して、そのオブジェクトをルートせずに監視しているオブジェクトへの参照を維持します。このようにして、これらのオブジェクトのコレクションを維持し、その値を監視するオブジェクトをルーティングするコレクションの心配をすることなく、後でプロパティの変更をアンフックできます。完全な実装は以下で検索してください: http://agsmith.wordpress.com/2008/04/07/propertydescriptor-addvaluechanged-alternative/</summary>
        </member>
        <member name="F:MahApps.Metro.Controls.PropertyChangeNotifier.ValueProperty">
            <summary><see cref="P:MahApps.Metro.Controls.PropertyChangeNotifier.Value"/>依存関係プロパティを識別します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.PropertyChangeNotifier.Value">
            <summary>プロパティの値を、返します/設定します。</summary><seealso cref="F:MahApps.Metro.Controls.PropertyChangeNotifier.ValueProperty"/></member>
        <member name="F:MahApps.Metro.Controls.ScrollBarHelper.VerticalScrollBarOnLeftSideProperty">
            <summary>このプロパティを使用すると、tabpanel から、左側の垂直スクロールバーを設定できます (MetroAnimatedSingleRowTabControl を検討してください)。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.SplitButton.CommandParameter">
            <summary>実行時に、CommandProperty に渡すパラメーターを反映します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.SplitButton.CommandTarget">
            <summary>コマンドを起動するターゲット要素を取得または設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.SplitButton.Command">
            <summary>コマンド プロパティを取得または設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.SplitButton.IsExpanded">
            <summary>ポップアップが表示になるかどうかを示します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.SplitButton.ExtraTag">
            <summary>追加タグを取得または設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.SplitButton.Orientation">
            <summary>子スタッキングのディメンションを取得または設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.SplitButton.Icon">
            <summary>アイコン部の生成に使用するコンテンツを取得または設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.SplitButton.IconTemplate">
            <summary>アイコン部のコンテンツの表示に使用する、ContentTemplate を取得または設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.SplitButton.ButtonStyle">
            <summary>ボタン スタイルを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.SplitButton.ButtonArrowStyle">
            <summary>ボタンの矢印スタイルを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.SplitButton.ListBoxStyle">
            <summary>ポップアップ リストボックス スタイルを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.SplitButton.ArrowBrush">
            <summary>ボタン矢印アイコンのブラシを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.SplitButton.ArrowMouseOverBrush">
            <summary>マウスが分割ボタンの上にある場合は、ボタン矢印アイコンのブラシを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.SplitButton.ArrowPressedBrush">
            <summary>矢印ボタンを押すと、ボタン矢印アイコンのブラシを取得/設定します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.SplitButton.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary><see cref="T:System.Windows.Controls.Primitives.Selector" /> の中の項目が変更されると、現在の選択を更新します。</summary>
            <param name="e">イベント データです。</param>
        </member>
        <member name="F:MahApps.Metro.Controls.TabControlHelper.IsUnderlinedProperty">
            <summary><see cref="T:System.Windows.Controls.TabControl"/> の下に下線を表示するかどうかを定義します。</summary>
        </member>
        <member name="F:MahApps.Metro.Controls.TabControlHelper.TransitionProperty">
            <summary>このプロパティを使用して、アニメ化された TabControls の切り替えを設定できます。</summary>
        </member>
        <member name="F:MahApps.Metro.Controls.ToggleButtonHelper.ContentDirectionProperty">
            <summary>このプロパティは、CheckBox と RadioButton のスタイルを処理するために使用できます。LeftToRight はコンテンツが左、ボタンが右にあることを意味し、RightToLeft はその逆です。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ToggleButtonHelper.GetContentDirection(System.Windows.UIElement)">
            <summary>このプロパティは、CheckBox と RadioButton のスタイルを処理するために使用できます。LeftToRight はコンテンツが左、ボタンが右にあることを意味し、RightToLeft はその逆です。</summary>
        </member>
        <member name="T:MahApps.Metro.Controls.Theme">
            <summary>ウィンドウ コマンド用の異なるテーマを表す列挙型。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.WindowButtonCommands.LightMinButtonStyle">
            <summary>最小化ボタンの、現在の淡色スタイルを示す値を取得または設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.WindowButtonCommands.LightMaxButtonStyle">
            <summary>最大化ボタンの、現在の淡色スタイルを示す値を取得または設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.WindowButtonCommands.LightCloseButtonStyle">
            <summary>閉じるボタンの、現在の淡色スタイルを示す値を取得または設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.WindowButtonCommands.DarkMinButtonStyle">
            <summary>最小化ボタンの、現在の濃色スタイルを示す値を取得または設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.WindowButtonCommands.DarkMaxButtonStyle">
            <summary>最大化ボタンの、現在の濃色スタイルを示す値を取得または設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.WindowButtonCommands.DarkCloseButtonStyle">
            <summary>閉じるボタンの、現在の濃色スタイルを示す値を取得または設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.WindowButtonCommands.Theme">
            <summary>現在のテーマを示す値を取得または設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.WindowButtonCommands.Minimize">
            <summary>最小化ボタンのヒントを取得または設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.WindowButtonCommands.Maximize">
            <summary>最大化ボタンのヒントを取得または設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.WindowButtonCommands.Close">
            <summary>閉じるボタンのヒントを取得または設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.WindowButtonCommands.Restore">
            <summary>復元ボタンのヒントを取得または設定します。</summary>
        </member>
        <member name="F:MahApps.Metro.Controls.WindowCommandsOverlayBehavior.Never">
            <summary>ポップアップや、非表示の TitleBar をオーバーレイしません。</summary>
        </member>
        <member name="F:MahApps.Metro.Controls.WindowCommandsOverlayBehavior.Flyouts">
            <summary>開いた <see cref="T:MahApps.Metro.Controls.Flyout"/> コントロールをオーバーレイします。</summary>
        </member>
        <member name="F:MahApps.Metro.Controls.WindowCommandsOverlayBehavior.HiddenTitleBar">
            <summary>非表示のタイトル バーをオーバーレイします。</summary>
        </member>
        <member name="T:MahApps.Metro.Controls.Planerator">
            <summary>Greg Schechter の Planerator に基づきます。
http://blogs.msdn.com/b/greg_schechter/archive/2007/10/26/enter-the-planerator-dead-simple-3d-in-wpf-with-a-stupid-name.aspx</summary>
        </member>
        <member name="T:MahApps.Metro.Controls.RangeSelectionChangedEventArgs">
            <summary>RangeSlider の SelectionChanged イベント用に作成されたイベント引数です。 <see cref="T:MahApps.Metro.Controls.RangeSlider"/></summary>
        </member>
        <member name="P:MahApps.Metro.Controls.RangeSelectionChangedEventArgs.NewLowerValue">
            <summary>新しい範囲の始まりの値です。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.RangeSelectionChangedEventArgs.NewUpperValue">
            <summary>新しい範囲の終わりの値です。</summary>
        </member>
        <member name="T:MahApps.Metro.Controls.RangeSlider">
            <summary>2 つの値の間の範囲を選択する機能があるスライダー コントロールです。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.RangeSlider.Interval">
            <summary>ユーザーが、左マウスボタンで左/右/中央を押した場合に、サムネイルが移動する速度を取得/設定します (IsMoveToPoint は FALSEに設定する必要があります)。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.RangeSlider.AutoToolTipPrecision">
            <summary>AutotToolTip 内に表示される値の、精度を取得/設定します</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.RangeSlider.AutoToolTipTextConverter">
            <summary>ヒント テキストのコンバーターを取得/設定します</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.RangeSlider.AutoToolTipPlacement">
            <summary>サムネイルをドラッグする間に表示され、最新の値を示すヒントを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.RangeSlider.TickPlacement">
            <summary>目盛り配置位置を取得/設定します</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.RangeSlider.IsMoveToPointEnabled">
            <summary>ユーザーがクリックした場合、コントロール内の正確なポイントへの移動を有効/無効にする、IsMoveToPoint 機能を取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.RangeSlider.TickFrequency">
            <summary>tickFrequency を取得/設定します</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.RangeSlider.Orientation">
            <summary>範囲スライダーの方向を取得/設定します</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.RangeSlider.IsSnapToTickEnabled">
            <summary>範囲内で、左/右のマウスボタン+コトロールボタンで、操作を行う可能性があるかどうかを取得/設定します</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.RangeSlider.ExtendedMode">
            <summary>範囲内で、左/右のマウスボタン+コトロールボタンで、操作を行う可能性があるかどうかを取得/設定します</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.RangeSlider.MoveWholeRange">
            <summary>コントロールの右/左/中央部分を押すと、範囲全体が移動するかどうかを取得/設定します</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.RangeSlider.MinRangeWidth">
            <summary>2 つのサムネイル間の最小距離を取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.RangeSlider.LowerValue">
            <summary>範囲選択の始まりを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.RangeSlider.UpperValue">
            <summary>範囲選択の終わりを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.RangeSlider.MinRange">
            <summary>選択可能な最小範囲を取得/設定します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.RangeSlider.OnMinimumChanged(System.Double,System.Double)">
            <summary><see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"/>プロパティの、値の変更に応答します。</summary>
            <param name="oldMinimum"><see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"/>プロパティの古い値です。</param><param name="newMinimum"><see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"/>プロパティの新しい値です。</param>
        </member>
        <member name="M:MahApps.Metro.Controls.RangeSlider.OnMaximumChanged(System.Double,System.Double)">
            <summary><see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"/>プロパティの、値の変更に応答します。</summary>
            <param name="oldMaximum"><see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"/>プロパティの古い値です。</param><param name="newMaximum"><see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"/>プロパティの新しい値です。</param>
        </member>
        <member name="T:MahApps.Metro.Controls.TextBoxHelper">
            <summary>TextBox コントロールにさまざまな添付プロパティを提供するヘルパー クラス。</summary>
            <remarks>以下からのパスワード透かしコード: http://prabu-guru.blogspot.com/2010/06/how-to-add-watermark-text-to-textbox.html</remarks>
        </member>
        <member name="F:MahApps.Metro.Controls.TextBoxHelper.IsClearTextButtonBehaviorEnabledProperty">
            <summary>クリア テキスト ボタン behavior プロパティ。値が true の場合は、クリック イベントをボタンに設定します。</summary>
        </member>
        <member name="F:MahApps.Metro.Controls.TextBoxHelper.ButtonWidthProperty">
            <summary>このプロパティは、TextBox、PasswordBox、ComboBox、NumericUpDown のボタン幅 (PART_ClearText) の設定に使用できます。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.TextBoxHelper.GetIsSpellCheckContextMenuEnabled(System.Windows.UIElement)">
            <summary>TextBox または RichTextBox が、SpellCheck コンテキストメニューを使用するかどうかを示します</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.TextBoxHelper.GetHasText(System.Windows.DependencyObject)">
            <summary>添付された TextBox にテキストがある場合に取得します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.TextBoxHelper.GetClearTextButton(System.Windows.DependencyObject)">
            <summary>クリアテキストボタンの表示/機能を取得します。テキストの削除を有効にするために使用できます。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.TextBoxHelper.SetClearTextButton(System.Windows.DependencyObject,System.Boolean)">
            <summary>クリアテキストボタンの表示/機能を設定します。テキストの削除を有効にするために使用できます。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.TextBoxHelper.GetTextButton(System.Windows.DependencyObject)">
            <summary>テキスト ボタンの表示を取得します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.TextBoxHelper.SetTextButton(System.Windows.DependencyObject,System.Boolean)">
            <summary>テキスト ボタンの表示を設定します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.TextBoxHelper.GetButtonsAlignment(System.Windows.DependencyObject)">
            <summary>ボタン配置バリアントを取得します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.TextBoxHelper.SetButtonsAlignment(System.Windows.DependencyObject,MahApps.Metro.Controls.ButtonsAlignment)">
            <summary>ボタン配置バリアントを設定します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.TextBoxHelper.GetIsClearTextButtonBehaviorEnabled(System.Windows.Controls.Button)">
            <summary>クリア テキスト ボタンの動作を取得します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.TextBoxHelper.SetIsClearTextButtonBehaviorEnabled(System.Windows.Controls.Button,System.Boolean)">
            <summary>クリア テキスト ボタンの動作を設定します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.TextBoxHelper.GetButtonContentTemplate(System.Windows.DependencyObject)">
            <summary>ButtonContentTemplate は、ClearText ボタンの内容を表示するために使用されるテンプレートです。</summary>
        </member>
        <member name="T:MahApps.Metro.Controls.ToggleSwitchButton">
            <summary>ユーザーが 2 つの状態の間で切り替えることができるボタンです。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ToggleSwitchButton.SwitchForeground">
            <summary>コントロールの前面に使用するブラシを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ToggleSwitchButton.OnSwitchBrush">
            <summary>オン-スイッチの前面に使用するブラシを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ToggleSwitchButton.OffSwitchBrush">
            <summary>オフ-スイッチの前面に使用するブラシを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ToggleSwitchButton.ThumbIndicatorBrush">
            <summary>サムネイル インジケーターに使用するブラシを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ToggleSwitchButton.ThumbIndicatorDisabledBrush">
            <summary>サムネイル インジケーターに使用するブラシを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ToggleSwitchButton.ThumbIndicatorWidth">
            <summary>サムネイル インジケーターの幅を取得/設定します。</summary>
        </member>
        <member name="T:MahApps.Metro.Controls.TransitionType">
            <summary>さまざまな切り替えタイプの列挙</summary>
        </member>
        <member name="F:MahApps.Metro.Controls.TransitionType.Default">
            <summary>VisualState DefaultTransition を使用します</summary>
        </member>
        <member name="F:MahApps.Metro.Controls.TransitionType.Normal">
            <summary>VisualState Normal を使用します</summary>
        </member>
        <member name="F:MahApps.Metro.Controls.TransitionType.Up">
            <summary>VisualState UpTransition を使用します</summary>
        </member>
        <member name="F:MahApps.Metro.Controls.TransitionType.Down">
            <summary>VisualState DownTransition を使用します</summary>
        </member>
        <member name="F:MahApps.Metro.Controls.TransitionType.Right">
            <summary>VisualState RightTransition を使用します</summary>
        </member>
        <member name="F:MahApps.Metro.Controls.TransitionType.RightReplace">
            <summary>VisualState RightReplaceTransition を使用します</summary>
        </member>
        <member name="F:MahApps.Metro.Controls.TransitionType.Left">
            <summary>VisualState LeftTransition を使用します</summary>
        </member>
        <member name="F:MahApps.Metro.Controls.TransitionType.LeftReplace">
            <summary>VisualState LeftReplaceTransition を使用します</summary>
        </member>
        <member name="F:MahApps.Metro.Controls.TransitionType.Custom">
            <summary>カスタム VisualState を使用し、名前は CustomVisualStatesName プロパティを使用して設定する必要があります。</summary>
        </member>
        <member name="T:MahApps.Metro.Controls.TransitioningContentControl">
            <summary>コンテンツを、ロード時およびアンロード時にアニメ化する ContentControl です。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.TransitioningContentControl.CustomVisualStatesName">
            <summary>カスタム切り替え視覚化状態の名前を、取得または設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.TransitioningContentControl.IsTransitioning">
            <summary>コンテンツが、切り換えられる場合に取得/設定します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.TransitioningContentControl.ReloadTransition">
            <summary>現在の切り替えを、コンテンツが同じ場合は再読み込みします。</summary>
        </member>
        <member name="T:MahApps.Metro.Controls.TreeHelper">
            <summary>UI 関連のタスクのヘルパー メソッドです。このクラスは、Philip Sumi (フェロー WPF Disciples ブログ) http://www.hardcodet.net/uploads/2009/06/UIHelper.cs から取得されました。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.TreeHelper.TryFindParent``1(System.Windows.DependencyObject)">
            <summary>ビジュアル ツリー上の規定された項目の親を検索します。</summary>
            <typeparam name="T">クエリされた項目のタイプです。</typeparam>
            <param name="child">クエリされた項目の直接または間接の子です。</param>
            <returns>送信されたタイプ パラメーターに一致する最初の親の項目です。一致する項目が見つからない場合は、null 参照が返されます。</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.TreeHelper.FindChild``1(System.Windows.DependencyObject,System.String)">
            <summary>ビジュアル ツリーで、規定された項目の子を検索します。</summary>
            <param name="parent">クエリされた項目の直接の親です。</param>
            <typeparam name="T">クエリされた項目のタイプです。</typeparam>
            <param name="childName">x:名前または子の名前です。</param>
            <returns>送信されたタイプ パラメーターに一致する最初の親の項目です。一致する項目が見つからない場合は、null 親が返されます。</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.TreeHelper.GetParentObject(System.Windows.DependencyObject)">
            <summary>このメソッドは、WPF の <see cref="M:System.Windows.Media.VisualTreeHelper.GetParent(System.Windows.DependencyObject)"/>メソッドの代替で、コンテンツ要素もサポートします。コンテンツ要素の場合は、このメソッドは要素の論理ツリーに戻ることに注意してください。</summary>
            <param name="child">処理する項目です。</param>
            <returns>送信された項目の親です (使用可能な場合)。それ以外の場合は null です。</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.TreeHelper.FindChildren``1(System.Windows.DependencyObject,System.Boolean)">
            <summary>ビジュアル ツリーと論理ツリーの両方を分析して、 <paramref name="source"/> 項目の子孫である、規定されたタイプすべての要素を検索します。</summary>
            <typeparam name="T">クエリされた項目のタイプです。</typeparam>
            <param name="source">検索のソースをマークするルート要素です。ソースが、既に要求されたタイプである場合、それは結果に含まれません。</param>
            <param name="forceUsingTheVisualTreeHelper">VisualTree で検索する方が適切な場合があります (テストなど)。</param>
            <returns>要求されたタイプと一致する <paramref name="source"/>の子孫すべて。</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.TreeHelper.GetChildObjects(System.Windows.DependencyObject,System.Boolean)">
            <summary>このメソッドは、WPF の <see cref="M:System.Windows.Media.VisualTreeHelper.GetChild(System.Windows.DependencyObject,System.Int32)"/>メソッドの代替で、コンテンツ要素もサポートします。コンテンツ要素の場合、このメソッドは要素の論理ツリーに戻ることに注意してください。</summary>
            <param name="parent">処理する項目です。</param>
            <param name="forceUsingTheVisualTreeHelper">VisualTree で検索する方が適切な場合があります (テストなど)。</param>
            <returns>送信されたアイテムの子要素です (使用可能な場合)。</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.TreeHelper.TryFindFromPoint``1(System.Windows.UIElement,System.Windows.Point)">
            <summary>ビジュアル ツリー内で、規定された項目の検索を試み、規定された位置にある依存関係オブジェクトから始めます。</summary>
            <typeparam name="T">規定された位置にある、要素のビジュアル ツリー上で検索された要素のタイプです。</typeparam>
            <param name="reference">ヒット テストの実行に使用される主な要素です。</param>
            <param name="point">原点で評価されるべき位置。</param>
        </member>
        <member name="P:MahApps.Metro.Controls.WindowCommands.Theme">
            <summary>現在のテーマを示す値を取得または設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.WindowCommands.LightTemplate">
            <summary>淡色テーマ テンプレートを示す値を、取得または設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.WindowCommands.DarkTemplate">
            <summary>淡色テーマ テンプレートを示す値を、取得または設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.WindowCommands.ShowSeparators">
            <summary>区切り記号を表示するかどうかを示す値を、取得または設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.WindowCommands.ShowLastSeparator">
            <summary>最後の区切り記号を表示するかどうかを示す値を、取得または設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.WindowCommands.SeparatorHeight">
            <summary>区切り記号の高さを示す値を、取得または設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.WindowCommandsItem.IsSeparatorVisible">
            <summary>区切り記号を表示するかどうかを示す値を、取得または設定します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.IWindowPlacementSettings.Reload">
            <summary>永続的ストレージから、アプリケーション設定プロパティ値を更新します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.IWindowPlacementSettings.UpgradeSettings">
            <summary>読み込み時に、アプリケーションの設定をアップグレードします。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.IWindowPlacementSettings.Upgrade">
            <summary>アプリケーションの設定を更新して、アプリケーションのより最近のインストールを反映します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.IWindowPlacementSettings.Save">
            <summary>設定プロパティの最新の値を保存します。</summary>
        </member>
        <member name="T:MahApps.Metro.Controls.WindowApplicationSettings">
            <summary>この設定クラスは、ウィンドウの配置を保存する、デフォルトの方法です。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.WindowApplicationSettings.UpgradeSettings">
            <summary>読み込み時に、アプリケーションの設定をアップグレードします。</summary>
        </member>
        <member name="T:MahApps.Metro.Controls.MetroContentControl">
            <summary>原典は、http://xamlcoder.com/blog/2010/11/04/creating-a-metro-ui-style-control/ です</summary>
        </member>
        <member name="T:MahApps.Metro.Controls.MetroWindow">
            <summary>拡張メトロ化ウィンドウ クラスです。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.OverrideDefaultWindowCommandsBrush">
            <summary>ウィンドウ コマンド ブラシの簡単な処理を可能にします。テーマもこのブラシに基づいて適用されます。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.WindowTransitionsEnabled">
            <summary>ウィンドウの、入り口切り替えアニメが有効になっているかどうか、取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.Flyouts">
            <summary>ウィンドウのポップアップをホストする FlyoutsControl を取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.IconTemplate">
            <summary>カスタム アイコンを表示する、アイコン コンテンツ テンプレートを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.TitleTemplate">
            <summary>カスタム タイトルを表示する、タイトル コンテンツ テンプレートを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.LeftWindowCommands">
            <summary>ユーザー コマンドをホストする、左側のウィンドウ コマンドを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.RightWindowCommands">
            <summary>ユーザー コマンドをホストする、右側のウィンドウ コマンドを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.WindowButtonCommands">
            <summary>最小/最大/閉じるコマンドをホストする、ウィンドウ ボタン コマンドを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.IgnoreTaskbarOnMaximize">
            <summary>最大化時に、ウィンドウがタスク バーを無視 (および重複) するかどうか、取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.TitleForeground">
            <summary>タイトル バーの前面に使用するブラシを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.SaveWindowPosition">
            <summary>ウィンドウが、読み込みの間の位置を保存するかどうか、取得/設定します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.MetroWindow.GetWindowPlacementSettings">
            <summary>ウィンドウの配置設定を取得します (上書き可能)。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.ShowIconOnTitleBar">
            <summary>titlebar アイコンを表示にするかどうか、取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.ShowDialogsOverTitleBar">
            <summary>ダイアログをタイトル バーの上に表示するかどうか、取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.IconEdgeMode">
            <summary>titlebar アイコンのエッジ モードを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.IconBitmapScalingMode">
            <summary>titlebar アイコンのビットマップ スケーリング モードを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.ShowTitleBar">
            <summary>TitleBar を表示にするかどうかを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.UseNoneWindowStyle">
            <summary>WindowStyle が None であるかどうかを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.ShowMinButton">
            <summary>最小化ボタンが表示かどうか、取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.ShowMaxRestoreButton">
            <summary>[最大化/復元] ボタンが表示かどうか、取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.ShowCloseButton">
            <summary>閉じるボタンが表示かどうか、取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.IsMinButtonEnabled">
            <summary>[分] ボタンが有効かどうか、取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.IsMaxRestoreButtonEnabled">
            <summary>最大/復元ボタンが有効かどうか、取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.IsCloseButtonEnabled">
            <summary>閉じるボタンが有効かどうか、取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.ShowSystemMenuOnRightClick">
            <summary>システムメニューが右クリックでポップアップするかどうか、取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.TitlebarHeight">
            <summary>TitleBar の高さを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.TitleCaps">
            <summary>TitleBar のテキストが自動的に大文字に設定されるかどうか、取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.TitleCharacterCasing">
            <summary>タイトルの大文字と小文字の区別</summary> 
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.TitleAlignment">
            <summary>タイトルの水平方向配置を取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.WindowTitleBrush">
            <summary>ウィンドウのタイトル バーに使用されるブラシを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.GlowBrush">
            <summary>ウィンドウの光彩に使用するブラシを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.NonActiveGlowBrush">
            <summary>ウィンドウの非アクティブ光彩に使用するブラシを、取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.NonActiveBorderBrush">
            <summary>ウィンドウの非アクティブな境界に使用されるブラシを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.NonActiveWindowTitleBrush">
            <summary>ウィンドウの非アクティブなタイトル バーに使用されるブラシを取得/設定します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.MetroWindow.ShowOverlayAsync">
            <summary>MetroWindow のオーバーレイ効果の表示を開始します。</summary>
            <returns>プロセスを表すタスクです。</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.MetroWindow.HideOverlayAsync">
            <summary>MetroWindow のオーバーレイ効果の非表示を開始します。</summary>
            <returns>プロセスを表すタスクです。</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.MetroWindow.StoreFocus(System.Windows.IInputElement)">
            <summary>規定された要素、または最後にフォーカスされた要素を、FocusManager を介して保存し、ダイアログを閉じた後にフォーカスを復元します。</summary>
            <param name="thisElement">再びフォーカスされる要素。</param>
        </member>
        <member name="M:MahApps.Metro.Controls.MetroWindow.ResetStoredFocus">
            <summary>ダイアログを閉じた後にフォーカスを取得する、保存済み要素をクリアします。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.MetroWindow.#ctor">
            <summary>MahApps.Metro.Controls.MetroWindow クラスの新しいインスタンスを初期化します。</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.MetroWindow.GetPart``1(System.String)">
            <summary>規定された名前を持つ、テンプレートの子を取得します。</summary>
            <typeparam name="T">DependencyObject から引き継がれたインターフェイスのタイプです。</typeparam>
            <param name="name">テンプレートの子の名前。</param>
        </member>
        <member name="M:MahApps.Metro.Controls.MetroWindow.GetPart(System.String)">
            <summary>規定された名前を持つ、テンプレートの子を取得します。</summary>
            <param name="name">テンプレートの子の名前。</param>
        </member>
        <member name="T:MahApps.Metro.Controls.RevealImage">
            <summary>RevealImage</summary>
        </member>
        <member name="M:MahApps.Metro.Controls.RevealImage.InitializeComponent">
            <summary>InitializeComponent</summary>
        </member>
        <member name="F:MahApps.Metro.Controls.Tile.HorizontalTitleAlignmentProperty">
            <summary>HorizontalTitleAlignment 依存関係プロパティ。既定値：HorizontalAlignment.Left</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Tile.HorizontalTitleAlignment">
            <summary>タイトルの水平方向の配置を取得/設定します。</summary> 
        </member>
        <member name="F:MahApps.Metro.Controls.Tile.VerticalTitleAlignmentProperty">
            <summary>VerticalTitleAlignment 依存関係プロパティ。既定値：VerticalAlignment.Bottom</summary> 
        </member>
        <member name="P:MahApps.Metro.Controls.Tile.VerticalTitleAlignment">
            <summary>タイトルの垂直方向の配置を取得/設定します。</summary>
        </member>
        <member name="T:MahApps.Metro.Controls.ToggleSwitch">
            <summary>ユーザーが 2 つの状態の間で切り替えることができるコントロールです。一方は true を表します。他方は false を表します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ToggleSwitch.HeaderFontFamily">
            <summary>ヘッダーのフォント ファミリを取得/設定します。</summary> 
        </member>
        <member name="P:MahApps.Metro.Controls.ToggleSwitch.OnLabel">
            <summary>コントロールがオン状態の場合に表示するテキストを、取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ToggleSwitch.OffLabel">
            <summary>コントロールがオフ状態の場合に表示するテキストを、取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ToggleSwitch.SwitchForeground">
            <summary>スイッチの前面に使用するブラシを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ToggleSwitch.OnSwitchBrush">
            <summary>オン-スイッチの前面に使用するブラシを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ToggleSwitch.OffSwitchBrush">
            <summary>オフ-スイッチの前面に使用するブラシを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ToggleSwitch.ThumbIndicatorBrush">
            <summary>サムネイル インジケーターに使用するブラシを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ToggleSwitch.ThumbIndicatorDisabledBrush">
            <summary>サムネイル インジケーターに使用するブラシを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ToggleSwitch.ThumbIndicatorWidth">
            <summary>サムネイル インジケーターの幅を取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ToggleSwitch.ContentDirection">
            <summary>コントロールの、コンテンツ フロー方向を取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ToggleSwitch.ToggleSwitchButtonStyle">
            <summary>コントロールの、切り替えスイッチ ボタンのスタイルを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ToggleSwitch.IsChecked">
            <summary>コントロールにチェックが付いている (オン) または付いていない (オフ) のいずれかを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ToggleSwitch.CheckChangedCommand">
            <summary>IsChecked プロパティが変更された場合に実行されるコマンドを、取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ToggleSwitch.CheckedCommand">
            <summary>コントロールの、チェックが付いたイベントが起動された場合に実行されるコマンドを、取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ToggleSwitch.UnCheckedCommand">
            <summary>コントロールの、チェックが付いたイベントが起動された場合に実行されるコマンドを、取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ToggleSwitch.CheckChangedCommandParameter">
            <summary>CheckChangedCommand によって渡されるコマンド パラメーターを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ToggleSwitch.CheckedCommandParameter">
            <summary>CheckCommand によって渡されるコマンド パラメーターを取得/設定します。</summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ToggleSwitch.UnCheckedCommandParameter">
            <summary>UnCheckedCommand によって渡されるコマンド パラメーターを取得/設定します。</summary>
        </member>
        <member name="E:MahApps.Metro.Controls.ToggleSwitch.IsCheckedChanged">
            <summary>IsChecked の値が変更されると発生するイベントです。</summary>
        </member>
        <member name="T:MahApps.Metro.Converters.ClockDegreeConverter">
            <summary>時/分/秒のいずれかを表す倍精度を、相当する角度に変換します。</summary>
        </member>
        <member name="M:MahApps.Metro.Converters.BackgroundToForegroundConverter.IdealTextColor(System.Windows.Media.Color)">
            <summary>次のサイトで、指定されたバックグラウンドの色に基づいて、最適なテキストの色を決定します http://www.codeproject.com/KB/GDI-plus/IdealTextColor.aspx</summary>
            <param name = "bg">バックグラウンド</param>
            <returns></returns>
        </member>
        <member name="T:MahApps.Metro.Converters.IsNullConverter">
            <summary>値を true から false、および false から true に変換します。</summary>
        </member>
        <member name="T:MahApps.Metro.Converters.StringToVisibilityConverter">
            <summary>文字列を可視列挙に変換します (そして、戻します)。FalseEquivalent は &quot;FalseEquivalent&quot; プロパティによって宣言できます。</summary>
        </member>
        <member name="M:MahApps.Metro.Converters.StringToVisibilityConverter.#ctor">
            <summary>プロパティを、標準値を使用して初期化します</summary>
        </member>
        <member name="P:MahApps.Metro.Converters.StringToVisibilityConverter.FalseEquivalent">
            <summary>FalseEquivalent (デフォルト: Visibility.Collapsed =&gt; コンストラクター参照)</summary>
        </member>
        <member name="P:MahApps.Metro.Converters.StringToVisibilityConverter.OppositeStringValue">
            <summary>反対のブール値が重要かどうかを定義します (デフォルト : false)</summary>
        </member>
        <member name="T:MahApps.Metro.Converters.ThicknessBindingConverter">
            <summary>厚さを、新しい厚さに変換します。IgnoreThicknessSide プロパティを使用して、側面を無視することは可能です。</summary>
        </member>
        <member name="F:MahApps.Metro.Converters.IgnoreThicknessSideType.None">
            <summary>すべての側面を使用します。</summary>
        </member>
        <member name="F:MahApps.Metro.Converters.IgnoreThicknessSideType.Left">
            <summary>左側を無視します。</summary>
        </member>
        <member name="F:MahApps.Metro.Converters.IgnoreThicknessSideType.Top">
            <summary>上面を無視します。</summary>
        </member>
        <member name="F:MahApps.Metro.Converters.IgnoreThicknessSideType.Right">
            <summary>右側を無視します。</summary>
        </member>
        <member name="F:MahApps.Metro.Converters.IgnoreThicknessSideType.Bottom">
            <summary>下側は無視します。</summary>
        </member>
        <member name="M:MahApps.Metro.Converters.TimeSpanToStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>値を変換します。</summary>
            <returns>変換された値。メソッドが null を返す場合は、有効な null 値が使用されます。</returns>
            <param name="value">バインディング ソースによって生成される値です。</param>
            <param name="targetType">バインディング ターゲット プロパティのタイプです。</param>
            <param name="parameter">使用するコンバーター パラメータです。</param>
            <param name="culture">コンバーターで使用するカルチャです。</param>
        </member>
        <member name="M:MahApps.Metro.Converters.TimeSpanToStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>値を変換します。</summary>
            <returns>変換された値。メソッドが null を返す場合は、有効な null 値が使用されます。</returns>
            <param name="value">バインディング ターゲットによって生成される値です。</param>
            <param name="targetType">変換先のタイプです。</param>
            <param name="parameter">使用するコンバーター パラメータです。</param>
            <param name="culture">コンバータで使用するカルチャです。</param>
        </member>
        <member name="T:MahApps.Metro.Models.Win32.WM">
            <summary>MSDN からプルされた Windows SDK v6.1 ドキュメントからの、winuser.h で定義された Windows Messages です。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.NULL">
            <summary>WM_NULL メッセージは動作を実行しません。アプリケーションは、WM_NULL メッセージを、受信者ウィンドウが無視するメッセージをポストする場合に送信します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.CREATE">
            <summary>WM_CREATE メッセージは、アプリケーションが、CreateWindowEx 関数または CreateWindow 関数を呼び出すことによってウィンドウが作成されるように要求する場合に送信されます。(メッセージは、関数が返される前に送信されます。)新しいウィンドウのウィンドウ プロシージャは、このメッセージを、ウィンドウが作成された後、ただしウィンドウが表示される前に受け取ります。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.DESTROY">
            <summary>WM_DESTROY メッセージは、ウィンドウが破棄されると送信されます。それは、ウィンドウが画面から削除された後、破棄されるウィンドウのウィンドウ プロシージャに送信されます。このメッセージは、最初に破棄されるウィンドウに送信され、次に子ウィンドウ (存在する場合) に、破棄される際に送信されます。メッセージ処理の間に、すべての子ウィンドウがまだ存在すると仮定できます。///</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.MOVE">
            <summary>WM_MOVE メッセージは、ウィンドウが移動された後に送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.SIZE">
            <summary>WM_SIZE メッセージは、ウィンドウに、そのサイズが変更された後送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.ACTIVATE">
            <summary>WM_ACTIVATE メッセージは、アクティブ化されているウィンドウと、非アクティブ化されているウィンドウの両方に送信されます。複数のウィンドウが同じ入力キューを使用する場合、メッセージは同期して送信され、最初に非アクティブ化されている最上位ウィンドウのウィンドウ プロシージャに、次にアクティブ化されている最上位ウィンドウのウィンドウ プロシージャに送信されます。複数のウィンドウが異なる入力キューを使用する場合、メッセージは非同期に送信されるため、ウィンドウは即時にアクティブ化されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.SETFOCUS">
            <summary>WM_SETFOCUS メッセージは、ウィンドウに、それがキーボード フォーカスを取得した後送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.KILLFOCUS">
            <summary>WM_KILLFOCUS メッセージは、ウィンドウに、そのキーボード フォーカスが失われる直前に送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.ENABLE">
            <summary>WM_ENABLE メッセージは、アプリケーションがウィンドウの有効な状態を変更した場合に送信されます。有効な状態が変更されているウィンドウに送信されます。このメッセージは、EnableWindow 関数が返される前に送信されますが、ただしウィンドウの有効な状態 (WS_DISABLED スタイル ビット) が変更された後となります。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.SETREDRAW">
            <summary>アプリケーションは WM_SETREDRAW メッセージをウィンドウに送信して、そのウィンドウの変更の再描画を許可したり、そのウィンドウの変更の再描画を防止したりします。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.SETTEXT">
            <summary>アプリケーションは、WM_SETTEXT メッセージを送信して、ウィンドウのテキストを設定します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.GETTEXT">
            <summary>アプリケーションは、WM_GETTEXT メッセージを送信し、ウィンドウに対応するテキストを、呼び出し元によって規定されるバッファーにコピーします。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.GETTEXTLENGTH">
            <summary>アプリケーションは、WM_GETTEXTLENGTH メッセージを送信して、ウィンドウに関連付けられたテキストの長さ、を文字数で判定します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.PAINT">
            <summary>WM_PAINT メッセージは、システムまたは別のアプリケーションが、アプリケーションのウィンドウの一部をペイントする要求を行うと送信されます。このメッセージは、UpdateWindow または RedrawWindow 関数が呼び出された場合、またはDispatchMessage 関数によってアプリケーションが GetMessage または PeekMessage 関数を使用して WM_PAINT メッセージを取得した場合に送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.CLOSE">
            <summary>WM_CLOSE メッセージは、ウィンドウまたはアプリケーションが終了する必要があることを示すシグナルとして送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.QUERYENDSESSION">
            <summary>WM_QUERYENDSESSION メッセージは、ユーザーがセッションを終了することを選択した場合、またはアプリケーションがシステム シャットダウン関数の 1 つを呼び出す場合に送信されます。いずれかのアプリケーションがゼロを返す場合、セッションは終了しません。1 つのアプリケーションがゼロを返すとすぐに、システムは WM_QUERYENDSESSION メッセージの送信を停止します。このメッセージを処理した後、システムは、WM_ENDSESSION メッセージを、wParam パラメーター セットを付けて、WM_QUERYENDSESSION メッセージの結果に送信します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.QUERYOPEN">
            <summary>WM_QUERYOPEN メッセージは、ユーザーがウィンドウを以前のサイズと位置に復元することを要求すると、アイコンに送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.ENDSESSION">
            <summary>WM_ENDSESSION メッセージは、アプリケーションに、システムが WM_QUERYENDSESSION メッセージの結果を処理した後送信されます。WM_ENDSESSION メッセージは、アプリケーションに、セッションが終了しているかどうかを通知します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.QUIT">
            <summary>WM_QUIT メッセージは、アプリケーションを終了する要求を示し、アプリケーションが、PostQuitMessage 関数を呼び出すと生成されます。それは、GetMessage 関数はゼロを返させます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.ERASEBKGND">
            <summary>WM_ERASEBKGND メッセージは、ウィンドウのバックグラウンドを消去する必要がある場合 (たとえば、ウィンドウのサイズ変更) に送信されます。メッセージは、ウィンドウの無効部分をペイント用に準備するために送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.SYSCOLORCHANGE">
            <summary>このメッセージは、システムカラー設定に変更が行われると、すべての最上位ウィンドウに送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.SHOWWINDOW">
            <summary>WM_SHOWWINDOW メッセージは、ウィンドウに、ウィンドウがこれから非表示または表示にされる場合に送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.WININICHANGE">
            <summary>アプリケーションは、WM_WININICHANGE メッセージを、WIN.INI ファイルへの変更を行った後すべての最上位ウィンドウに送信します。SystemParametersInfo 関数は、このメッセージを、アプリケーションが関数を使用して WIN.INI で設定を変更した後に送信します。注: WM_WININICHANGE メッセージは、以前のバージョンのシステムとの互換性のためにのみ提供されます。アプリケーションは、WM_SETTINGCHANGE メッセージを使用する必要があります。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.SETTINGCHANGE">
            <summary>アプリケーションは、WM_WININICHANGE メッセージを、WIN.INI ファイルへの変更を行った後すべての最上位ウィンドウに送信します。SystemParametersInfo 関数は、このメッセージを、アプリケーションが関数を使用して WIN.INI で設定を変更した後に送信します。注: WM_WININICHANGE メッセージは、以前のバージョンのシステムとの互換性のためにのみ提供されます。アプリケーションは、WM_SETTINGCHANGE メッセージを使用する必要があります。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.DEVMODECHANGE">
            <summary>WM_DEVMODECHANGE メッセージは、ユーザーがデバイス モードの設定を変更するたびに、すべての最上位ウィンドウに送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.ACTIVATEAPP">
            <summary>WM_ACTIVATEAPP メッセージは、アクティブ ウィンドウとは異なるアプリケーションに属するウィンドウが、これからアクティブ化される場合に送信されます。メッセージは、ウィンドウがアクティブ化されているアプリケーション、およびウィンドウが非アクティブ化されているアプリケーションに送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.FONTCHANGE">
            <summary>アプリケーションは、WM_FONTCHANGE メッセージを、システム内のすべての最上位ウィンドウに、フォント リソースのプールを変更した後送信します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.TIMECHANGE">
            <summary>システム時刻に変更があると、必ず送信されるメッセージです。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.CANCELMODE">
            <summary>WM_CANCELMODE メッセージは、マウス キャプチャなど、特定のモードをキャンセルするために送信されます。たとえば、システムは、ダイアログ ボックスまたはメッセージ ボックスが表示されると、このメッセージをアクティブ ウィンドウに送信します。また、特定の関数は、指定されたウィンドウに、アクティブウィンドウであるかどうかに関係なく、このメッセージを明示的に送信します。たとえば、EnableWindow 関数は、指定したウィンドウを無効にする場合にこのメッセージを送信します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.SETCURSOR">
            <summary>WM_SETCURSOR メッセージは、マウスがウィンドウ内でカーソルを移動させ、マウス入力がキャプチャされない場合に、ウィンドウに送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.MOUSEACTIVATE">
            <summary>WM_MOUSEACTIVATE メッセージは、カーソルが非アクティブなウィンドウにある場合に、ユーザーがマウス ボタンを押すと送信されます。親ウィンドウは、このメッセージを、それを子ウィンドウが DefWindowProc 関数に渡す場合にのみ受け取ります。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.CHILDACTIVATE">
            <summary>WM_CHILDACTIVATE メッセージは、子ウィンドウに、
ユーザーがウィンドウのタイトル バーをクリックした場合、もしくはウィンドウがアクティブ化、移動、またはサイズ変更された場合に送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.QUEUESYNC">
            <summary>WM_QUEUESYNC メッセージは、コンピュータ ベースト トレーニング (CBT) アプリケーションによって、ユーザー入力メッセージを、WH_JOURNALPLAYBACK フック・プロシージャーを介して送信される他のメッセージから分離するために送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.GETMINMAXINFO">
            <summary>WM_GETMINMAXINFO メッセージは、ウィンドウに、ウィンドウのサイズまたは位置がこれから変更される場合に送信されます。アプリケーションは、このメッセージを、ウィンドウの既定の最大サイズおよび位置、または既定の最小または最大トラッキング サイズをオーバーライドするために使用できます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.PAINTICON">
            <summary>Windows NT 3.51 以前: WM_PAINTICON メッセージは、最小化されたウィンドウに、アイコンがペイントされる場合に送信されます。このメッセージは、それ以降のバージョンの Microsoft Windows では、注釈で説明される異常な状況を除いて送信されません。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.ICONERASEBKGND">
            <summary>Windows NT 3.51 以前: WM_ICONERASEBKGND メッセージは、最小化されたウィンドウに、アイコンをペイントする前にアイコンのバックグラウンドを塗りつぶす必要がある場合に送信されます。ウィンドウは、このメッセージを、クラス アイコンがウィンドウ用に定義されている場合のみ受け取ります。それ以外の場合は、WM_ERASEBKGND が送信されます。このメッセージは、それ以降のバージョンの Windows では送信されません。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.NEXTDLGCTL">
            <summary>WM_NEXTDLGCTL メッセージはダイアログ ボックス プロシージャに送信され、キーボード フォーカスを、ダイアログ ボックスの別のコントロールに設定します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.SPOOLERSTATUS">
            <summary>WM_SPOOLERSTATUS メッセージは、プリント マネージャーから、ジョブがプリント マネージャー キューに追加または削除されるたびに送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.DRAWITEM">
            <summary>WM_DRAWITEM メッセージは、オーナー描画のボタン、コンボ ボックス、リスト ボックス、またはメニューの親ウィンドウに、ボタン、コンボ ボックス、リスト ボックス、またはメニューのビジュアル面が変更されると送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.MEASUREITEM">
            <summary>WM_MEASUREITEM メッセージは、コントロールまたはメニューが作成されると、コンボ ボックス、リスト ボックス、リスト ビュー コントロール、またはメニュー項目のオーナー ウィンドウに送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.DELETEITEM">
            <summary>リスト ボックスまたはコンボ ボックスの所有者に、リスト ボックスまたはコンボ ボックスが破棄された場合、もしくは項目が LB_DELETESTRING、LB_RESETCONTENT、CB_DELETESTRING、または CB_RESETCONTENT メッセージによって削除された場合に送信されます。システムは、WM_DELETEITEM メッセージを、削除された各項目のために送信します。システムは、WM_DELETEITEM メッセージを、削除されるリスト ボックス、またはゼロ以外の項目データがあるコンボ ボックス項目のために送信します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.VKEYTOITEM">
            <summary>LBS_WANTKEYBOARDINPUT スタイルのリスト ボックスによって、所有者に、WM_KEYDOWN メッセージに応答して送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.CHARTOITEM">
            <summary>LBS_WANTKEYBOARDINPUT スタイルのリスト ボックスによって、所有者に、WM_CHAR メッセージに応答して送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.SETFONT">
            <summary>アプリケーションは、WM_SETFONT メッセージを送信して、コントロールがテキスト描画時に使用するフォントを指定します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.GETFONT">
            <summary>アプリケーションは、WM_GETFONT メッセージをコントロールに送信して、コントロールが現在テキストを描画しているフォントを取得します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.SETHOTKEY">
            <summary>アプリケーションは、WM_SETHOTKEY メッセージを、ウィンドウに、ホット キーをウィンドウに関連付けるために送信します。ユーザーがホットキーを押すと、システムはウィンドウをアクティブにします。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.GETHOTKEY">
            <summary>アプリケーションは、WM_GETHOTKEY メッセージを送信して、ウィンドウに関連付けられているホット キーを判別します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.QUERYDRAGICON">
            <summary>WM_QUERYDRAGICON メッセージは、最小化された (アイコンのような) ウィンドウに送信されます。ウィンドウは、ユーザーがドラッグしようとしていますが、そのクラスに定義されたアイコンがありません。アプリケーションは、ハンドルを、アイコンまたはカーソルに返すことができます。システムは、このカーソルまたはアイコンを、ユーザーがアイコンをドラッグしている間は表示します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.COMPAREITEM">
            <summary>システムは、WM_COMPAREITEM メッセージを送信し、オーナー描画のコンボ ボックスまたはリスト ボックスの、並べ替えられたリスト内の新しい項目の相対位置を判定します。アプリケーションが新しい項目を追加するたびに、システムは
、このメッセージを、コンボ ボックス、あるいは CBS_SORT または LBS_SORT スタイルで作成されたリスト ボックスの所有者に送信します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.GETOBJECT">
            <summary>アクティブ アクセシビリティは、WM_GETOBJECT メッセージを送信して、サーバー・アプリケーションに含まれるアクセス可能なオブジェクトに関する情報を取得します。アプリケーションはこのメッセージを直接送信することはありません。これは、AccessibleObjectFromPoint、AccessibleObjectFromEvent、または AccessibleObjectFromWindowへの呼び出しに応答して、アクティブ アクセシビリティのみによって送信されます。ただし、サーバー アプリケーションはこのメッセージを処理します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.COMPACTING">
            <summary>WM_COMPACTING メッセージは、システムが、30 ~ 60 秒の間隔でシステム時間の 12.5% を超えるシステム時間がメモリの圧縮に費やされているのを検出すると、すべての最上位ウィンドウに送信されます。これは、システム メモリが不足していることを示します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.COMMNOTIFY">
            <summary>WM_COMMNOTIFY は Win32 ベースのアプリケーションでは廃止されました</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.WINDOWPOSCHANGING">
            <summary>WM_WINDOWPOSCHANGE メッセージは、Z オーダーのサイズ、位置、または配置が、SetWindowPos 関数または別のウィンドウ管理関数の呼び出しの結果として変更されようとしているウィンドウに送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.WINDOWPOSCHANGED">
            <summary>WM_WINDOWPOSCHANGED メッセージは、Z オーダーのサイズ、位置、または配置が、SetWindowPos 関数または別のウィンドウ管理関数の呼び出しの結果として変更されたウィンドウに送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.POWER">
            <summary>通常はバッテリ駆動のパーソナル コンピューターで、システムが一時停止モードに入ろうとしていることをアプリケーションに知らします。用途: POWERBROADCAST</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.COPYDATA">
            <summary>アプリケーションは WM_COPYDATA メッセージを送信して、データを別のアプリケーションに渡します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.CANCELJOURNAL">
            <summary>WM_CANCELJOURNAL メッセージは、ユーザーがアプリケーションのジャーナル処理アクティビティを取り消すと、アプリケーションにポストされます。メッセージは、NULL ウィンドウ ハンドルによりポストされます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.NOTIFY">
            <summary>イベントが発生した場合、またはコントロールに何らかの情報が必要な場合に、共通コントロールによって親ウィンドウに送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.INPUTLANGCHANGEREQUEST">
            <summary>WM_INPUTLANGCHANGEREQUEST メッセージは、ユーザーがホットキー (キーボード コントロール パネル アプリケーションで指定)、またはシステム タスク バー上のインジケーターから新しい入力言語を選択すると、フォーカスされたウィンドウにポストされます。アプリケーションは、変更を、DefWindowProc 関数にメッセージを渡すことによって受け入れるか、すぐに返すことによって拒否する(および変更が発生するのを防ぐ)ことができます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.INPUTLANGCHANGE">
            <summary>WM_INPUTLANGCHANGE メッセージは、最上位の影響を受けるウィンドウに、アプリケーションの入力言語が変更された後送信されます。アプリケーション固有の設定を行い、メッセージを DefWindowProc 関数に渡す必要がありますが、その関数が、メッセージをすべての 1 番目のレベルの子ウィンドウに渡します。これらの子ウィンドウは、メッセージを DefWindowProc に渡して、そのメッセージをその子ウィンドウに渡してもらうことができ、その先も同様です。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.TCARD">
            <summary>Microsoft Windows ヘルプでトレーニング カードを開始したアプリケーションに送信されます。メッセージは、ユーザーが編集可能なボタンをクリックすると、アプリケーションに通知します。アプリケーションは、WinHelp 関数の呼び出しで、HELP_TCARD コマンドを指定することによって、トレーニング カードを開始します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.HELP">
            <summary>ユーザーが F1 キーを押したことを示します。F1 が押されときにメニューがアクティブであれば、WM_HELP はメニューに関連付けられたウィンドウに送信されます。アクティブでなければ、WM_HELP はキーボード フォーカスがあるウィンドウに送信されます。キーボード フォーカスがあるウィンドウがない場合、WM_HELP は現在アクティブなウィンドウに送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.USERCHANGED">
            <summary>WM_USERCHANGED メッセージは、ユーザーがログオンまたはオフにした後、すべてのウィンドウに送信されます。ユーザーがログオンまたはログオフすると、システムはユーザー固有の設定を更新します。システムは、設定更新の直後に、このメッセージを送信します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.NOTIFYFORMAT">
            <summary>ウィンドウが、WM_NOTIFY 通知メッセージに ANSI または Unicode 構造を、受け入れるかどうか判定します。WM_NOTIFYFORMAT メッセージは、共通コントロールから親ウィンドウ、および親ウィンドウから共通コントロールに送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.CONTEXTMENU">
            <summary>WM_CONTEXTMENU メッセージは、ウィンドウに、ユーザーがウィンドウの右マウス ボタンをクリックしたこと (右クリック) を知らします。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.STYLECHANGING">
            <summary>WM_STYLECHANGE メッセージは、SetWindowLong 関数がウィンドウのスタイルの 1 つ以上を変更しようとすると、ウィンドウに送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.STYLECHANGED">
            <summary>WM_STYLECHANGED メッセージは、SetWindowLong 関数がウィンドウのスタイルの 1 つ以上を変更すると、ウィンドウに送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.DISPLAYCHANGE">
            <summary>WM_DISPLAYCHANGE メッセージは、すべてのウィンドウに、表示解像度が変更されると送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.GETICON">
            <summary>WM_GETICON メッセージは、ウィンドウに関連付けられた大きいアイコンまたは小さいアイコンへのハンドルを取得するために、ウィンドウに送信されます。システムは、大きいアイコンを Alt+ TAB ダイアログに表示し、小さいアイコンをウィンドウキャプションに表示します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.SETICON">
            <summary>アプリケーションは WM_SETICON メッセージを送信して、新しい大きいアイコンまたは小さいアイコンをウィンドウに関連付けます。システムは、大きいアイコンを Alt+ TAB ダイアログボックスに表示し、小さいアイコンをウィンドウキャプションに表示します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.NCCREATE">
            <summary>WM_NCCREATE メッセージは、ウィンドウが最初に作成されると、WM_CREATE メッセージの前に送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.NCDESTROY">
            <summary>WM_NCDESTROY メッセージは、ウィンドウに、非クライアント領域が破棄されていることを通知します。DestroyWindow 関数は、WM_NCDESTROY メッセージを、WM_DESTROY メッセージの後にウィンドウに送信します。WM_DESTROY は、ウィンドウに関連付けられた、割り当てメモリー オブジェクトを解放するために使用されます。WM_NCDESTROY メッセージは、子ウィンドウが破棄された後に送信されます。反対に、WM_DESTROY は子ウィンドウが破棄される前に送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.NCCALCSIZE">
            <summary>WM_NCCALCSIZE メッセージは、ウィンドウのクライアント領域のサイズと位置を計算する必要がある場合に送信されます。このメッセージを処理することにより、アプリケーションは、ウィンドウのサイズまたは位置が変更された場合も、ウィンドウのクライアント領域の内容を制御できます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.NCHITTEST">
            <summary>WM_NCHITTEST メッセージは、カーソルが移動した場合、またはマウス ボタンが押されたり離されたりした場合にウィンドウに送信されます。マウスがキャプチャされない場合は、メッセージがカーソルの下のウィンドウに送信されます。それ以外の場合は、メッセージは、マウスをキャプチャしたウィンドウに送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.NCPAINT">
            <summary>WM_NCPAINT メッセージは、ウィンドウに、フレームをペイントする必要がある場合に送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.NCACTIVATE">
            <summary>WM_NCACTIVATE メッセージは、ウィンドウに、非クライアント領域を変更してアクティブまたは非アクティブな状態を示す必要がある場合に送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.GETDLGCODE">
            <summary>WM_GETDLGCODE メッセージは、コントロールに関連付けられたウィンドウ プロシージャに送信されます。デフォルトでは、システムはコントロールへのすべてのキーボード入力を処理します。システムは、特定タイプのキーボード入力を、ダイアログ ボックスナビゲーション キーとして解釈します。このデフォルトの動作をオーバーライドするために、コントロールは WM_GETDLGCODE メッセージに応答し、それ自体を処理する入力の種類を示すことができます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.SYNCPAINT">
            <summary>WM_SYNCPAINT メッセージは、独立した GUI スレッドにリンクすることを回避しながら、ペイントを同期するために使用されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.NCMOUSEMOVE">
            <summary>WM_NCMOUSEMOVE メッセージは、ウィンドウに、カーソルがウィンドウの非クライアント領域内に移動するとポストされます。このメッセージは、カーソルがあるウィンドウにポストされます。ウィンドウがマウスをキャプチャしている場合、このメッセージはポストされません。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.NCLBUTTONDOWN">
            <summary>WM_NCLBUTTONDOWN メッセージは、カーソルがウィンドウの非クライアント領域内にある間に、ユーザーがマウスの左ボタンを押すとポストされます。このメッセージは、カーソルがあるウィンドウにポストされます。ウィンドウがマウスをキャプチャしている場合、このメッセージはポストされません。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.NCLBUTTONUP">
            <summary>WM_NCLBUTTONUP メッセージは、カーソルがウィンドウの非クライアント領域内にある間に、ユーザーがマウスの左ボタンを離すとポストされます。このメッセージは、カーソルがあるウィンドウにポストされます。ウィンドウがマウスをキャプチャしている場合、このメッセージはポストされません。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.NCLBUTTONDBLCLK">
            <summary>WM_NCLBUTTONDBLCLK メッセージは、カーソルがウィンドウの非クライアント領域内にある間に、ユーザーがマウスの左ボタンをダブルクリックするとポストされます。このメッセージは、カーソルがあるウィンドウにポストされます。ウィンドウがマウスをキャプチャしている場合、このメッセージはポストされません。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.NCRBUTTONDOWN">
            <summary>WM_NCRBUTTONDOWN メッセージは、カーソルがウィンドウの非クライアント領域内にある間に、ユーザーがマウスの右ボタンを押すとポストされます。このメッセージは、カーソルがあるウィンドウにポストされます。ウィンドウがマウスをキャプチャしている場合、このメッセージはポストされません。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.NCRBUTTONUP">
            <summary>WM_NCRBUTTONUP メッセージは、カーソルがウィンドウの非クライアント領域内にある間に、ユーザーがマウスの右ボタンを離すとポストされます。このメッセージは、カーソルがあるウィンドウにポストされます。ウィンドウがマウスをキャプチャしている場合、このメッセージはポストされません。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.NCRBUTTONDBLCLK">
            <summary>WM_NCRBUTTONDBLCLK メッセージは、カーソルがウィンドウの非クライアント領域内にある間に、ユーザーがマウスの右ボタンをダブルクリックするとポストされます。このメッセージは、カーソルがあるウィンドウにポストされます。ウィンドウがマウスをキャプチャしている場合、このメッセージはポストされません。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.NCMBUTTONDOWN">
            <summary>WM_NCMBUTTONDOWNメッセージは、カーソルがウィンドウの非クライアント領域内にある間に、ユーザーがマウスの中央ボタンを押すとポストされます。このメッセージは、カーソルがあるウィンドウにポストされます。ウィンドウがマウスをキャプチャしている場合、このメッセージはポストされません。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.NCMBUTTONUP">
            <summary>WM_NCMBUTTONUP メッセージは、カーソルがウィンドウの非クライアント領域内にある間に、ユーザーがマウスの中央ボタンを離すとポストされます。このメッセージは、カーソルがあるウィンドウにポストされます。ウィンドウがマウスをキャプチャしている場合、このメッセージはポストされません。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.NCMBUTTONDBLCLK">
            <summary>WM_NCMBUTTONDBLCLK メッセージは、カーソルがウィンドウの非クライアント領域内にある間に、ユーザーがマウスの中央ボタンをダブルクリックするとポストされます。このメッセージは、カーソルがあるウィンドウにポストされます。ウィンドウがマウスをキャプチャしている場合、このメッセージはポストされません。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.NCXBUTTONDOWN">
            <summary>WM_NCXBUTTONDOWN メッセージは、カーソルがウィンドウの非クライアント領域にある間に、ユーザーが 1 番目または 2 番目の X ボタンを押すとポストされます。このメッセージは、カーソルがあるウィンドウにポストされます。ウィンドウがマウスをキャプチャしている場合、このメッセージはポストされません。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.NCXBUTTONUP">
            <summary>WM_NCXBUTTONUP メッセージは、カーソルがウィンドウの非クライアント領域にある間に、ユーザーが 1 番目または 2 番目の X ボタンを解放するとポストされます。このメッセージは、カーソルがあるウィンドウにポストされます。ウィンドウがマウスをキャプチャしている場合、このメッセージはポストされません。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.NCXBUTTONDBLCLK">
            <summary>WM_NCXBUTTONDBLCLK メッセージは、カーソルがウィンドウの非クライアント領域にある間に、ユーザーが 1 番目または 2 番目の X ボタンをダブルクリックするとポストされます。このメッセージは、カーソルがあるウィンドウにポストされます。ウィンドウがマウスをキャプチャしている場合、このメッセージはポストされません。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.INPUT_DEVICE_CHANGE">
            <summary>WM_INPUT_DEVICE_CHANGE メッセージは、未加工入力を受信するために登録されたウィンドウに送信されます。ウィンドウは、その WindowProc 関数を介してこのメッセージを受信します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.INPUT">
            <summary>WM_INPUT メッセージは、未加工入力を取得するウィンドウに送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.KEYFIRST">
            <summary>このメッセージは、キーボード メッセージのためにフィルター処理します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.KEYDOWN">
            <summary>WM_KEYDOWN メッセージは、非システム キーが押されると、キーボード フォーカスがあるウィンドウにポストされます。非システム キーとは、ALT キーを押さないで押されるキーです。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.KEYUP">
            <summary>WM_KEYUP メッセージは、非システム キーが開放されると、キーボード フォーカスがあるウィンドウにポストされます。非システム キーとは、ALT キーを押さないで押されるキー、またはウィンドウにキーボード フォーカスがある間に押されるキーボード キーです。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.CHAR">
            <summary>WM_CHAR メッセージは、キーボード フォーカスがあるウィンドウに、WM_KEYDOWN メッセージが TranslateMessage 関数によって変換されるとポストされます。WM_CHAR メッセージには、押されたキーの文字コードが含まれます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.DEADCHAR">
            <summary>WM_DEADCHAR メッセージは、キーボード フォーカスがあるウィンドウに、WM_KEYUP メッセージが TranslateMessage 関数によって変換されるとポストされます。WM_DEADCHAR は、デッドキーによって生成される文字コードを指定します。デッドキーは、ウムラウト (二重ドット) などの文字を生成するキーで、別の文字と組み合わせて複合文字を形成します。たとえば、ウムラウト-O 文字 (Ö) は、ウムラウト文字のデッドキーを入力し、次にO キーを入力することによって生成されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.SYSKEYDOWN">
            <summary>WM_SYSKEYDOWN メッセージは、キーボード フォーカスがあるウィンドウに、ユーザーが F10 キー (メニュー バーをアクティブにする) を押すか、Alt キーを押してから別のキーを押すとポストされます。また、このことは現在キーボード フォーカスのあるウィンドウがない場合にも発生します。この場合、WM_SYSKEYDOWN メッセージはアクティブ ウィンドウに送信されます。メッセージを受信するウィンドウは、これら 2 つのコンテキストを、lParam パラメーターのコンテキスト コードをチェックすることにより区別できます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.SYSKEYUP">
            <summary>WM_SYSKEYUP メッセージは、キーボード フォーカスがあるウィンドウに、ユーザーが ALT キーを押し下げている間に押されたキーを解放するとポストされます。また、このことは現在キーボード フォーカスのあるウィンドウがない場合にも発生します。この場合、WM_SYSKEYUP メッセージはアクティブ ウィンドウに送信されます。メッセージを受信するウィンドウは、これら 2 つのコンテキストを、lParam パラメーターのコンテキスト コードをチェックすることにより区別できます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.SYSCHAR">
            <summary>WM_SYSCHAR メッセージは、キーボード フォーカスがあるウィンドウに、WM_SYSKEYDOWN メッセージが TranslateMessage 関数によって変換されるとポストされます。これは、システム文字キー、すなわち ALT キーが押し下げられている間に押される文字キーの文字コードを指定します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.SYSDEADCHAR">
            <summary>WM_SYSDEADCHAR メッセージは、キーボード フォーカスがあるウィンドウに、WM_SYSKEYDOWN メッセージが TranslateMessage 関数によって変換されると送信されます。WM_SYSDEADCHAR は、システムデッドキー、すなわち ALT キーを押したまま押されたデッド キーの文字コードを指定します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.UNICHAR">
            <summary>WM_UNICHAR メッセージは、キーボード フォーカスがあるウィンドウに、WM_KEYDOWN メッセージが TranslateMessage 関数によって変換されるとポストされます。WM_UNICHAR メッセージには、押されたキーの文字コードが含まれます。WM_UNICHAR メッセージは WM_CHAR と同等ですが、ユニコード変換形式 (UTF)-32 を使用し、一方 WM_CHAR は UTF-16 を使用します。それは、Unicode 文字を ANSI ウィンドウに 送信またはポストするように設計されており、Unicode 補助面文字を処理できます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.KEYLAST">
            <summary>このメッセージは、キーボード メッセージのためにフィルター処理します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.IME_STARTCOMPOSITION">
            <summary>IME がキーストロークの結果として複合文字列を生成する直前に送信されます。ウィンドウは、その WindowProc 関数を介してこのメッセージを受信します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.IME_ENDCOMPOSITION">
            <summary>IME が合成を終了すると、アプリケーションに送信されます。ウィンドウは、その WindowProc 関数を介してこのメッセージを受信します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.IME_COMPOSITION">
            <summary>IME が、キーストロークの結果として合成のステータスを変更すると、アプリケーションに送信されます。ウィンドウは、その WindowProc 関数を介してこのメッセージを受信します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.INITDIALOG">
            <summary>WM_INITDIALOG メッセージは、ダイアログ ボックス プロシージャに、ダイアログ ボックスが表示される直前に送信されます。ダイアログ ボックス プロシージャは、通常、このメッセージを使用してコントロールを初期化し、ダイアログ ボックスの外観に影響を与えるその他の初期化タスクを実行します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.COMMAND">
            <summary>WM_COMMAND メッセージは、ユーザーがメニューからコマンド項目を選択する場合、コントロールが通知メッセージを親ウィンドウに送信する場合、またはアクセラレーター キー ストロークが変換された場合に送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.SYSCOMMAND">
            <summary>ウィンドウは、ユーザーが [ウィンドウ] メニューからコマンドを選択したり、最大化ボタン、最少化ボタン、復元ボタン、閉じるボタンをクリックしたり、またはフォームを移動したりするとこのメッセージを受け取ります。これをフィルターで除去することで、フォームの移動を停止できます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.TIMER">
            <summary>WM_TIMER メッセージは、タイマーの時間が過ぎると、インストール スレッドのメッセージ キューにポストされます。メッセージは、GetMessage または PeekMessage 関数によってポストされます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.HSCROLL">
            <summary>WM_HSCROLL メッセージは、ウィンドウに、スクロール イベントがウィンドウの標準水平スクロール バーで発生すると送信されます。また、このメッセージは、水平スクロール バー コントロールの所有者にも、コントロールでスクロール イベントが発生すると送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.VSCROLL">
            <summary>WM_VSCROLL メッセージは、ウィンドウに、スクロール イベントがウィンドウの標準垂直スクロール バーで発生すると、送信されます。また、このメッセージは、垂直スクロール バー コントロールの所有者にも、コントロールでスクロール イベントが発生すると送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.INITMENU">
            <summary>WM_INITMENU メッセージは、メニューがほぼアクティブになると送信されます。これは、ユーザーがメニュー バーの項目をクリックすると、またはメニュー キーを押すと発生します。これにより、アプリケーションは、メニューを、表示される前に変更できます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.INITMENUPOPUP">
            <summary>WM_INITMENUPOPUP メッセージは、ドロップダウン メニュー、またはサブメニューがアクティブになると送信されます。これにより、アプリケーションは、メニューを、表示される前に、全体を変更することなく変更できます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.MENUSELECT">
            <summary>WM_MENUSELECT メッセージは、ユーザーがメニュー項目を選択すると、メニュー所有者のウィンドウに送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.MENUCHAR">
            <summary>WM_MENUCHAR メッセージは、メニューがアクティブで、ユーザーがニーモニック キーまたはアクセラレータ キーに対応しないキーを押すと送信されます。このメッセージは、メニューを所有するウィンドウに送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.ENTERIDLE">
            <summary>WM_ENTERIDLE メッセージは、モーダル ダイアログ ボックス、またはアイドル状態に入っているメニューの、所有者ウィンドウに送信されます。モーダル ダイアログ ボックスまたはメニューは、1 つ以上の前のメッセージを処理した後、キューで待機しているメッセージがない場合にアイドル状態になります。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.MENURBUTTONUP">
            <summary>WM_MENURBUTTONUP メッセージは、カーソルがメニュー項目上にある間に、ユーザーがマウスの右ボタンを離すと送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.MENUDRAG">
            <summary>WM_MENUDRAG メッセージは、ドラッグ アンド ドロップ メニューの所有者に、ユーザーがメニュー項目をドラッグすると送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.MENUGETOBJECT">
            <summary>WM_MENUGETOBJECT メッセージは、ドラッグ アンド ドロップ メニューの所有者に、マウス カーソルがメニュー項目に入るか、または項目の中央から項目の上部または下部に移動すると送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.UNINITMENUPOPUP">
            <summary>WM_UNINITMENUPOPUP メッセージは、ドロップダウン メニューまたはサブメニューが破棄されると送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.MENUCOMMAND">
            <summary>WM_MENUCOMMAND メッセージは、ユーザーがメニューから選択を行うと送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.CHANGEUISTATE">
            <summary>アプリケーションは、WM_CHANGEUISTATE メッセージを送信して、ユーザー インターフェイス (UI) 状態を変更する必要があることを示します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.UPDATEUISTATE">
            <summary>アプリケーションは WM_UPDATEUISTATE メッセージを送信して、指定されたウィンドウと、そのすべての子ウィンドウのユーザー インターフェイス (UI) 状態を変更します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.QUERYUISTATE">
            <summary>アプリケーションは WM_QUERYUISTATE メッセージを送信して、ウィンドウのユーザー インターフェイス (UI) 状態を取得します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.CTLCOLORMSGBOX">
            <summary>WM_CTLCOLORMSGBOX メッセージは、メッセージ ボックスの所有者ウィンドウに、Windows がメッセージ ボックスを描画する前に送信されます。このメッセージに応答することにより、所有者ウィンドウは、メッセージ ボックスのテキストとバックグラウンドの色を、指定された表示デバイス コンテキス トハンドルを使用して設定できます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.CTLCOLOREDIT">
            <summary>読み取り専用、または無効ではない編集コントロールは、WM_CTLCOLOREDIT メッセージを、親ウィンドウに、コントロール描画時に送信します。このメッセージに応答することにより、親ウィンドウは、指定されたデバイス コンテキスト ハンドルを使用して、編集コントロールのテキストとバックグラウンドの色を設定できます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.CTLCOLORLISTBOX">
            <summary>システムがリスト ボックスを描画する前に、リスト ボックスの親ウィンドウに送信されます。このメッセージに応答することにより、親ウィンドウは、リスト ボックスのテキストとバックグラウンドの色を、指定された表示デバイス コンテキスト ハンドルを使用して設定できます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.CTLCOLORBTN">
            <summary>WM_CTLCOLORBTN メッセージは、ボタンの親ウィンドウに、ボタンを描画する前に送信されます。親ウィンドウは、ボタンのテキストとバックグラウンドの色を変更できます。ただし、このメッセージを処理する親ウィンドウに応答するのは、オーナー描画ボタンだけです。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.CTLCOLORDLG">
            <summary>WM_CTLCOLORDLG メッセージは、ダイアログ ボックスに、システムがダイアログ ボックスを描画する前に送信されます。このメッセージに応答することにより、ダイアログ ボックスは、テキストとバックグラウンドの色を、指定した表示デバイス コンテキスト ハンドルを使用して設定できます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.CTLCOLORSCROLLBAR">
            <summary>WM_CTLCOLORSCROLLBAR メッセージは、コントロールが描画されようとすると、スクロール バー コントロールの親ウィンドウに送信されます。このメッセージに応答することにより、親ウィンドウは、ディスプレイ コンテキスト ハンドルを使用して、スクロール バー コントロールのバックグラウンドの色を設定できます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.CTLCOLORSTATIC">
            <summary>静的コントロール、もしくは読み取り専用または無効化された編集コントロールは、 WM_CTLCOLORSTATIC メッセージを、親ウィンドウに、コントロール描画時に送信します。このメッセージに応答することにより、親ウィンドウは、指定されたデバイス コンテキスト ハンドルを使用して、静的コントロールのテキストとバックグラウンドの色を設定できます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.MOUSEFIRST">
            <summary>WM_MOUSEFIRST を使用して、最初のマウス メッセージを指定します。PeekMessage() 関数を使用します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.MOUSEMOVE">
            <summary>WM_MOUSEMOVE メッセージは、カーソルが移動するとウィンドウにポストされます。マウスがキャプチャされない場合、メッセージがカーソルを含むウィンドウにポストされます。それ以外の場合、マウスをキャプチャしたウィンドウにメッセージがポストされます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.LBUTTONDOWN">
            <summary>WM_LBUTTONDOWN メッセージは、カーソルがウィンドウのクライアント領域にある間に、マウスの左ボタンを押すとポストされます。マウスがキャプチャされない場合、メッセージがカーソルの下のウィンドウにポストされます。それ以外の場合、マウスをキャプチャしたウィンドウにメッセージがポストされます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.LBUTTONUP">
            <summary>WM_LBUTTONUP メッセージは、カーソルがウィンドウのクライアント領域にある間に、マウスの左ボタンを開放するとポストされます。マウスがキャプチャされない場合、メッセージがカーソルの下のウィンドウにポストされます。それ以外の場合、マウスをキャプチャしたウィンドウにメッセージがポストされます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.LBUTTONDBLCLK">
            <summary>WM_LBUTTONDBLCLK メッセージは、カーソルがウィンドウのクライアント領域にある間に、ユーザーがマウスの左ボタンをダブルクリックするとポストされます。マウスがキャプチャされない場合、メッセージがカーソルの下のウィンドウにポストされます。それ以外の場合、マウスをキャプチャしたウィンドウにメッセージがポストされます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.RBUTTONDOWN">
            <summary>WM_RBUTTONDOWN メッセージは、カーソルがウィンドウのクライアント領域にある間に、マウスの右ボタンを押すとポストされます。マウスがキャプチャされない場合、メッセージがカーソルの下のウィンドウにポストされます。それ以外の場合、マウスをキャプチャしたウィンドウにメッセージがポストされます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.RBUTTONUP">
            <summary>WM_RBUTTONUP メッセージは、カーソルがウィンドウのクライアント領域にある間に、マウスの右ボタンを開放するとポストされます。マウスがキャプチャされない場合、メッセージがカーソルの下のウィンドウにポストされます。それ以外の場合、マウスをキャプチャしたウィンドウにメッセージがポストされます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.RBUTTONDBLCLK">
            <summary>WM_RBUTTONDBLCLK  メッセージは、カーソルがウィンドウのクライアント領域にある間に、ユーザーがマウスの右ボタンをダブルクリックするとポストされます。マウスがキャプチャされない場合、メッセージがカーソルの下のウィンドウにポストされます。それ以外の場合、マウスをキャプチャしたウィンドウにメッセージがポストされます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.MBUTTONDOWN">
            <summary>WM_MBUTTONDOWN メッセージは、カーソルがウィンドウのクライアント領域にある間に、マウスの中央ボタンを押すとポストされます。マウスがキャプチャされない場合、メッセージがカーソルの下のウィンドウにポストされます。それ以外の場合、マウスをキャプチャしたウィンドウにメッセージがポストされます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.MBUTTONUP">
            <summary>WM_MBUTTONUP メッセージは、カーソルがウィンドウのクライアント領域にある間に、マウスの中央ボタンを開放するとポストされます。マウスがキャプチャされない場合、メッセージがカーソルの下のウィンドウにポストされます。それ以外の場合、マウスをキャプチャしたウィンドウにメッセージがポストされます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.MBUTTONDBLCLK">
            <summary>WM_MBUTTONDBLCLK  メッセージは、カーソルがウィンドウのクライアント領域にある間に、ユーザーがマウスの中央ボタンをダブルクリックするとポストされます。マウスがキャプチャされない場合、メッセージがカーソルの下のウィンドウにポストされます。それ以外の場合、マウスをキャプチャしたウィンドウにメッセージがポストされます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.MOUSEWHEEL">
            <summary>WM_MOUSEWHEEL メッセージは、マウス ホイールを回転させると、フォーカス ウィンドウに送信されます。DefWindowProc 関数は、ウィンドウの親にメッセージを伝達します。メッセージの内部転送は、DefWindowProc が、メッセージを処理するウィンドウが見つかるまで親チェーンに伝達するため、行うべきではありません。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.XBUTTONDOWN">
            <summary>WM_XBUTTONDOWN メッセージは、カーソルがウィンドウのクライアント領域にある間に、ユーザーが 1 番目または 2 番目の X ボタンを押すとポストされます。マウスがキャプチャされない場合、メッセージがカーソルの下のウィンドウにポストされます。それ以外の場合、マウスをキャプチャしたウィンドウにメッセージがポストされます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.XBUTTONUP">
            <summary>WM_XBUTTONUP メッセージは、カーソルがウィンドウのクライアント領域にある間に、ユーザーが 1 番目または 2 番目の X ボタンを解放するとポストされます。マウスがキャプチャされない場合、メッセージがカーソルの下のウィンドウにポストされます。それ以外の場合、マウスをキャプチャしたウィンドウにメッセージがポストされます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.XBUTTONDBLCLK">
            <summary>WM_XBUTTONDBLCLK メッセージは、カーソルがウィンドウのクライアント領域にある間に、ユーザーが 1 番目または 2 番目の X ボタンをダブルクリックするとポストされます。マウスがキャプチャされない場合、メッセージがカーソルの下のウィンドウにポストされます。それ以外の場合、マウスをキャプチャしたウィンドウにメッセージがポストされます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.MOUSEHWHEEL">
            <summary>WM_MOUSEHWHEEL メッセージは、マウス の水平スクロール ホイールを、チルトまたは回転させると、フォーカス ウィンドウに送信されます。DefWindowProc 関数は、ウィンドウの親にメッセージを伝達します。メッセージの内部転送は、DefWindowProc が、メッセージを処理するウィンドウが見つかるまで親チェーンに伝達するため、行うべきではありません。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.MOUSELAST">
            <summary>WM_MOUSELAST を使用して、最後のマウス メッセージを指定します。PeekMessage() 関数と合わせて使用されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.PARENTNOTIFY">
            <summary>WM_PARENTNOTIFY メッセージは、子ウィンドウの親に、子ウィンドウが作成または破棄されると、またはカーソルが子ウィンドウの上にある間にユーザーがマウス ボタンをクリックすると送信されます。子ウィンドウが作成されると、システムは、WM_PARENTNOTIFY を、CreateWindow または CreateWindowEx 関数がウィンドウのリターンを作成する直前に送信します。子ウィンドウが破棄されると、システムはウィンドウを破棄する処理が行われる前にメッセージを送信します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.ENTERMENULOOP">
            <summary>WM_ENTERMENULOOP メッセージは、アプリケーションのメイン ウィンドウ プロシージャに、メニュー モーダル ループが開始されたことを通知します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.EXITMENULOOP">
            <summary>WM_EXITMENULOOP メッセージは、アプリケーションのメイン ウィンドウ プロシージャに、メニュー モーダル ループが終了されたことを通知します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.NEXTMENU">
            <summary>WM_NEXTMENU メッセージは、右矢印キーまたは左矢印キーが使用され、メニュー バーとシステム メニューが切り替えられると、アプリケーションに送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.SIZING">
            <summary>WM_SIZING メッセージは、ユーザーがサイズ変更するウィンドウに送信されます。このメッセージを処理することにより、アプリケーションはドラッグ四角形のサイズと位置を監視し、必要に応じてサイズまたは位置を変更できます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.CAPTURECHANGED">
            <summary>WM_CAPTURECHANGED メッセージは、マウス キャプチャを失っているウィンドウに送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.MOVING">
            <summary>WM_MOVING メッセージは、ユーザーが移動させるウィンドウに送信されます。このメッセージを処理することにより、アプリケーションはドラッグ四角形の位置を監視し、必要に応じてその位置を変更できます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.POWERBROADCAST">
            <summary>アプリケーションに、電源管理イベントが発生したことを知らします。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.DEVICECHANGE">
            <summary>アプリケーションに、デバイスまたはコンピューターのハードウェア構成への変更を通知します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.MDICREATE">
            <summary>アプリケーションは、WM_MDICREATE メッセージを、マルチ ドキュメント インターフェイス (MDI) クライアント ウィンドウに送信し、MDI 子ウィンドウを作成します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.MDIDESTROY">
            <summary>アプリケーションは、WM_MDIDESTROY メッセージを、マルチ ドキュメント インターフェイス (MDI) クライアント ウィンドウに送信し、MDI 子ウィンドウを閉じます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.MDIACTIVATE">
            <summary>アプリケーションは、WM_MDIACTIVATE メッセージを、マルチ ドキュメント インターフェイス (MDI) クライアント ウィンドウに送信し、クライアント ウィンドウに別の MDI 子ウィンドウをアクティブ化するように指示します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.MDIRESTORE">
            <summary>アプリケーションは、WM_MDIRESTORE メッセージを、マルチ ドキュメント インターフェイス (MDI) クライアント ウィンドウに送信し、MDI 子ウィンドウを最大化または最小化されたサイズから復元します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.MDINEXT">
            <summary>アプリケーションは、WM_MDINEXT メッセージを、マルチ ドキュメント インターフェイス (MDI) クライアント ウィンドウに送信して、次または前の子ウィンドウをアクティブ化します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.MDIMAXIMIZE">
            <summary>アプリケーションは、WM_MDIMAXIMIZE メッセージを、マルチ ドキュメント インターフェイス (MDI) クライアント ウィンドウに送信し、MDI 子ウィンドウを最大化します。システムは、クライアント領域がクライアント ウィンドウを埋めるように子ウィンドウのサイズを変更します。システムは、子ウィンドウのウィンドウ メニュー アイコンをフレーム ウィンドウのメニュー バーの右端の位置に配置し、子ウィンドウの復元アイコンを左端の位置に配置します。また、システムは、子ウィンドウのタイトル バー テキストもフレーム ウィンドウのタイトル バー テキストに追加します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.MDITILE">
            <summary>アプリケーションは、WM_MDITILE メッセージを、マルチ ドキュメント インターフェイス (MDI) クライアント ウィンドウに送信し、すべての MDI 子ウィンドウをタイル形式で配置します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.MDICASCADE">
            <summary>アプリケーションは、WM_MDICASCADE メッセージを、マルチ ドキュメント インターフェイス (MDI) クライアント ウィンドウに送信し、すべての子ウィンドウをカスケード形式で配置します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.MDIICONARRANGE">
            <summary>アプリケーションは、WM_MDIICONARRANGE メッセージを、マルチ ドキュメント・インターフェース (MDI) クライアント・ウィンドウに送信して、最小化されたすべての MDI 子ウィンドウを配置します。このことは、最小化されていない子ウィンドウには影響しません。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.MDIGETACTIVE">
            <summary>アプリケーションは、WM_MDIGETACTIVE メッセージを、マルチ ドキュメント インターフェイス (MDI) クライアント ウィンドウに送信して、アクティブな MDI 子ウィンドウへのハンドルを取得します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.MDISETMENU">
            <summary>アプリケーションは、WM_MDISETMENU メッセージを、マルチ ドキュメント インターフェイス (MDI) クライアント ウィンドウに送信し、MDI フレーム ウィンドウのメニュー全体を置き換えるか、フレーム ウィンドウのウィンドウ メニューを置き換えるか、またはその両方を置き換えます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.ENTERSIZEMOVE">
            <summary>WM_ENTERSIZEMOVE メッセージは、移動モーダル ループまたはサイズ変更モーダル ループに入った後、ウィンドウに 1 回送信されます。ウィンドウは、ユーザーがウィンドウのタイトル バーまたはサイズ変更の境界線をクリックすると、またはウィンドウが WM_SYSCOMMAND メッセージを DefWindowProc 関数に渡し、メッセージの wParam パラメータが SC_MOVE または SC_SIZE 値を指定すると、移動またはサイズ変更モーダル ループに入ります。DefWindowProc が返されると操作は完了です。システムは、WM_ENTERSIZEMOVE メッセージを、ウィンドウ全体のドラッグが有効かどうかに関係なく送信します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.EXITSIZEMOVE">
            <summary>WM_EXITSIZEMOVE メッセージは、移動モーダル ループまたはサイズ変更モーダル ループを終了した後、ウィンドウに 1 回送信されます。ウィンドウは、ユーザーがウィンドウのタイトル バーまたはサイズ変更の境界線をクリックすると、またはウィンドウが WM_SYSCOMMAND メッセージを DefWindowProc 関数に渡し、メッセージの wParam パラメータが SC_MOVE または SC_SIZE 値を指定すると、移動またはサイズ変更モーダル ループに入ります。DefWindowProc が返されると操作は完了です。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.DROPFILES">
            <summary>ユーザーが、ドロップされたファイルの受信者として自身を登録した、アプリケーションのウィンドウ上のファイルを削除すると送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.MDIREFRESHMENU">
            <summary>アプリケーションは、WM_MDIREFRESHMENU メッセージを、マルチ ドキュメント インターフェイス (MDI) クライアント ウィンドウに送信して、MDI フレーム ウィンドウのウィンドウ メニューを更新します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.IME_SETCONTEXT">
            <summary>ウィンドウがアクティブ化されると、アプリケーションに送信されます。ウィンドウは、その WindowProc 関数を介してこのメッセージを受信します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.IME_NOTIFY">
            <summary>IME ウィンドウの変更を通知するためにアプリケーションに送信されます。ウィンドウは、その WindowProc 関数を介してこのメッセージを受信します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.IME_CONTROL">
            <summary>IME ウィンドウに、要求されたコマンドを実行するように指示するために、アプリケーションによって送信されます。アプリケーションはこのメッセージを使用して、作成した IME ウィンドウを制御します。このメッセージを送信するために、アプリケーションは次のパラメーターを使用して SendMessage 関数を呼び出します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.IME_COMPOSITIONFULL">
            <summary>IME ウィンドウが、コンポジション ウィンドウの領域を拡張する空間を見つけられないと、アプリケーションに送信されます。ウィンドウは、その WindowProc 関数を介してこのメッセージを受信します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.IME_SELECT">
            <summary>オペレーティング システムが現在の IME を変更しようとすると、アプリケーションに送信されます。ウィンドウは、その WindowProc 関数を介してこのメッセージを受信します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.IME_CHAR">
            <summary>IME が変換結果の文字を取得するとアプリケーションに送信されます。ウィンドウは、その WindowProc 関数を介してこのメッセージを受信します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.IME_REQUEST">
            <summary>コマンドを提供し、情報を要求するためにアプリケーションに送信されます。ウィンドウは、その WindowProc 関数を介してこのメッセージを受信します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.IME_KEYDOWN">
            <summary>アプリケーションにキーが押されたことを通知し、メッセージの順序を維持するために、IME によってアプリケーションに送信されます。ウィンドウは、その WindowProc 関数を介してこのメッセージを受信します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.IME_KEYUP">
            <summary>アプリケーションにキーが開放されたことを通知し、メッセージの順序を維持するために、IME によってアプリケーションに送信されます。ウィンドウは、その WindowProc 関数を介してこのメッセージを受信します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.MOUSEHOVER">
            <summary>WM_MOUSEHOVER メッセージは、TrackMouseEvent の前の呼び出しで指定された時間、ウィンドウのクライアント領域でカーソルがホバーすると、ウィンドウにポストされます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.MOUSELEAVE">
            <summary>WM_MOUSELEAVE メッセージは、カーソルが TrackMouseEvent の前の呼び出しで指定されたウィンドウのクライアント領域を離れると、ウィンドウにポストされます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.NCMOUSEHOVER">
            <summary>WM_NCMOUSEHOVER メッセージは、TrackMouseEvent の前の呼び出しで指定された時間、ウィンドウの非クライアント領域でカーソルをホバーすると、ウィンドウにポストされます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.NCMOUSELEAVE">
            <summary>WM_NCMOUSELEAVE メッセージは、カーソルが TrackMouseEvent の前の呼び出しで指定されたウィンドウの非クライアント領域を離れると、ウィンドウにポストされます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.WTSSESSION_CHANGE">
            <summary>WM_WTSSESSION_CHANGE メッセージは、セッション状態の変更をアプリケーションに知らします。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.CUT">
            <summary>アプリケーションは、編集コントロールまたはコンボ ボックスに WM_CUT メッセージを送信し、編集コントロールに現在の選択範囲がある場合は削除 (カット) し、削除したテキストを CF_TEXT 形式でクリップボードにコピーします。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.COPY">
            <summary>アプリケーションは、編集コントロールまたはコンボ ボックスに WM_COPY メッセージを送信し、現在の選択範囲を CF_TEXT 形式でクリップボードにコピーします。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.PASTE">
            <summary>アプリケーションは編集コントロールまたはコンボ ボックスに WM_PASTE メッセージを送信し、クリップボードの現在の内容を現在のキャレット位置の編集コントロールにコピーします。データが挿入されるのは、クリップボードに CF_TEXT 形式のデータが含まれている場合のみです。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.CLEAR">
            <summary>アプリケーションは、編集コントロールまたはコンボ ボックスに WM_CLEAR メッセージを送信し、現在の選択範囲があれば、 編集コントロールから削除 (クリア) します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.UNDO">
            <summary>アプリケーションは、WM_UNDO メッセージを、最後の操作を元に戻すために編集コントロールに送信します。このメッセージが編集コントロールに送信されると、以前に削除したテキストが復元されるか、または以前に追加したテキストが削除されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.RENDERFORMAT">
            <summary>WM_RENDERFORMAT メッセージは、クリップボード所有者に、特定のクリップボード形式のレンダリングが遅れた場合、およびアプリケーションがその形式でデータを要求した場合に送信されます。クリップボードの所有者は、指定された形式でデータをレンダリングし、SetClipboardData 関数を呼び出してクリップボード上に配置する必要があります。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.RENDERALLFORMATS">
            <summary>WM_RENDERALLFORMATS メッセージは、クリップボードの所有者が 1 つ以上のクリップボード形式のレンダリングを遅らせた場合、クリップボードが破棄される前にその所有者に送信されます。クリップボードの内容を他のアプリケーションで使用できるようにするには、クリップボードの所有者は生成可能なすべての形式のデータをレンダリングし、SetClipboardData 関数を呼び出すことにより、クリップボードにデータを配置する必要があります。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.DESTROYCLIPBOARD">
            <summary>WM_DESTROYCLIPBOARD メッセージは、クリップボードの所有者に、EmptyClip 関数の呼び出しによりクリップボードが空になると送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.DRAWCLIPBOARD">
            <summary>WM_DRAWCLIPBOARD メッセージは、クリップボードの内容が変更されると、クリップボード ビューアー チェーンの最初のウィンドウに送信されます。このことにより、クリップボード ビューアー ウィンドウでクリップボードの新しい内容を表示できます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.PAINTCLIPBOARD">
            <summary>WM_PAINTCLIPBOARD メッセージは、クリップボードに CF_OWNERDISPLAY 形式のデータが含まれ、クリップボード ビューアーのクライアント領域に再描画が必要な場合、クリップボード ビューアー ウィンドウによってクリップボード所有者に送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.VSCROLLCLIPBOARD">
            <summary>WM_VSCROLLCLIPBOARD メッセージは、クリップボードに CF_OWNERDISPLAY 形式のデータが含まれ、クリップボード ビューアーの垂直スクロール バーでイベントが発生すると、クリップボード ビューアー ウィンドウによってクリップボード所有者に送信されます。所有者は、クリップボードイメージをスクロールし、スクロールバーの値を更新する必要があります。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.SIZECLIPBOARD">
            <summary>WM_SIZECLIPBOARD メッセージは、クリップボードに CF_OWNERDISPLAY 形式のデータが含まれ、クリップボード ビューアーのクライアント領域のサイズが変更された場合、がクリップボード ビューアー ウィンドウによってクリップボード所有者に送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.ASKCBFORMATNAME">
            <summary>WM_ASKCBFORMATNAME メッセージは、クリップボード・ビューアー ウィンドウによってクリップボード所有者に送信され、CF_OWNERDISPLAY クリップボード形式の名前を要求します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.CHANGECBCHAIN">
            <summary>WM_CHANGECBCHAIN メッセージは、ウィンドウがチェーンから削除される場合に、クリップボード ビューアー チェーンの最初のウィンドウに送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.HSCROLLCLIPBOARD">
            <summary>WM_HSCROLLCLIPBOARD メッセージは、クリップボード ビューアー ウィンドウによってクリップボード所有者に送信されます。このことは、クリップボードに CF_OWNERDISPLAY 形式のデータが含まれ、クリップボード ビューアの水平スクロール バーでイベントが発生した場合に発生します。所有者は、クリップボードイメージをスクロールし、スクロールバーの値を更新する必要があります。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.QUERYNEWPALETTE">
            <summary>このメッセージは、キーボード フォーカスを受信しようとしていることをウィンドウに通知し、フォーカスを受け取る際にその論理パレットを実現する機会をウィンドウに与えます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.PALETTEISCHANGING">
            <summary>WM_PALETTEISCHANGING メッセージは、アプリケーションに、アプリケーションが論理パレットを実現しようとしていることを通知します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.PALETTECHANGED">
            <summary>このメッセージは、キーボード フォーカスがあるウィンドウが論理パレットを実現した後、OS から、すべての最上位ウィンドウおよび重なり合ったウィンドウに送信されます。このメッセージを使用すると、キーボード フォーカスのないウィンドウが、論理パレットを実現し、そのクライアント領域を更新することができます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.HOTKEY">
            <summary>WM_HOTKEY メッセージは、ユーザーが RegisterHotKey 関数によって登録されたホット キーを押すとポストされます。メッセージは、ホット キーを登録したスレッドに関連付けられたメッセージ キューの先頭に配置されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.PRINT">
            <summary>WM_PRINT メッセージはウィンドウに送信され、指定されたデバイス コンテキスト (ほとんどの場合プリンター デバイス コンテキスト) で、それ自体を描画するように要求します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.PRINTCLIENT">
            <summary>WM_PRINTCLIENT メッセージはウィンドウに送信され、指定されたデバイス コンテキスト (ほとんど場合はプリンター デバイス コンテキスト) で、クライアント領域を描画するように要求します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.APPCOMMAND">
            <summary>WM_APPCOMMAND メッセージは、ウィンドウに、たとえば、マウスを使用してアプリケーションのコマンド ボタンをクリックすることにより、またはキーボードでアプリケーションのコマンド キーを入力することにより、ユーザーがアプリケーション・コマンド・イベントを生成したことをに知らします。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.THEMECHANGED">
            <summary>WM_MEMECHANGED メッセージは、テーマ変更イベント後の、すべてのウィンドウへのブロードキャストです。テーマ変更イベントの例には、テーマのアクティブ化、テーマの非アクティブ化、またはあるテーマから別のテーマへの切り替えがあります。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.CLIPBOARDUPDATE">
            <summary>クリップボードの内容が変更されると送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.DWMCOMPOSITIONCHANGED">
            <summary>システムは、 WM_DWMCOMPOSITIONCHANGED メッセージを、デスクトップ構成の可用性が変更されたことを示すために、ウィンドウに送信します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.DWMNCRENDERINGCHANGED">
            <summary>WM_DWMNCRENDERINGCHANGED は、ウィンドウの非クライアント領域のレンダリング状況が変更されると呼び出されます。フラグ DWM_BLURBEHIND.fTransitionOnMaximized を true に設定したウィンドウのみがこのメッセージを取得します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.DWMCOLORIZATIONCOLORCHANGED">
            <summary>彩色用の色が変更されると、すべての最上位ウィンドウに送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.DWMWINDOWMAXIMIZEDCHANGE">
            <summary>WM_DWMWINDOWMaximizeDCHANGEは、DWMで構成されたウィンドウが最大化されると、それを知らせます。また、このメッセージにも登録する必要があります。このメッセージが送信さたら、他のウィンドウを不透明にしたいとします。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.GETTITLEBARINFOEX">
            <summary>拡張タイトル バー情報を要求するために送信されます。ウィンドウは、その WindowProc 関数を介してこのメッセージを受信します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.APP">
            <summary>WM_APP 定数は、アプリケーションがプライベート メッセージを定義するための一助として使用され、通常は WM_APP+ X の形式 (X は整数値) となります。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.USER">
            <summary>WM_USERP 定数は、アプリケーションが、プライベート ウィンドウ クラスが使用するためのプライベート メッセージを定義するための一助として使用され、通常は WM_USER+ X の形式 (X は整数値) とします。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.CPL_LAUNCH">
            <summary>アプリケーションは、WM_CPL_LAUNCH メッセージを Windows コントロール パネルに送信して、コントロール パネル アプリケーションを起動することを要求します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.CPL_LAUNCHED">
            <summary>WM_CPL_LAUNCHED メッセージは、WM_CPL_LAUNCH メッセージによって起動されたコントロール パネル アプリケーションがクローズされると送信されます。WM_CPL_LAUNCHED メッセージは、アプリケーションを起動した WM_CPL_LAUNCH メッセージの wParam パラメーターによって識別されるウィンドウに送信されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WM.SYSTIMER">
            <summary>WM_SYSTIMER は、よく知られていますが文書化されていないメッセージです。Windows は、 WM_SYSTIMER を、スクロールなどの内部アクションに使用します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WS.BORDER">
            <summary>ウィンドウには細い境界線があります。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WS.CAPTION">
            <summary>ウィンドウにはタイトル バーがあります (WS_BORDER スタイルを含む)。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WS.CHILD">
            <summary>ウィンドウは子ウィンドウです。このスタイルのウィンドウには、メニュー バーを含めることはできません。このスタイルは、WS_POPUP スタイルでは使用できません。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WS.CLIPCHILDREN">
            <summary>親ウィンドウ内で描画が行われると、子ウィンドウが占有する領域を除外します。このスタイルは、親ウィンドウを作成する場合に使用されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WS.CLIPSIBLINGS">
            <summary>子ウィンドウを互いに相対的にクリップします。すなわち、特定の子ウィンドウが WM_PAINT メッセージを受信すると、WS_CLIPSIBLINGS スタイルは、更新する子ウィンドウの領域から、他のすべての重なり合う子ウィンドウをクリップします。WS_CLIPSIBLINGS が指定されず、子ウィンドウが重なっている場合は、子ウィンドウのクライアント領域内で描画する際には、隣接する子ウィンドウのクライアント領域内に描画することができます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WS.DISABLED">
            <summary>ウィンドウは最初は無効になっています。無効なウィンドウは、ユーザーから入力を受信できません。ウィンドウの作成後にこれを変更するには、EnableWindow 関数を使用します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WS.DLGFRAME">
            <summary>ウィンドウには、ダイアログ ボックスで通常使用されるスタイルの境界線があります。このスタイルのウィンドウには、タイトル バーを含めることはできません。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WS.GROUP">
            <summary>ウィンドウは、コントロールのグループの最初のコントロールです。グループは、WS_GROUP スタイルを使用する次のコントロールまで、この最初のコントロールと、その後に定義されたすべてのコントロールで構成されます。それぞれのグループの最初のコントロールには、通常 WS_TABSTOP スタイルがあり、そのためユーザーはグループ間で移動できます。ユーザーは、その後、グループ内の 1 つのコントロールからグループ内の次のコントロールまで、方向キーを使用してキーボード フォーカスを変更できます。このスタイルのオンとオフを切り替えて、ダイアログ ボックスのナビゲーションを変更できます。ウィンドウの作成後にこのスタイルを変更するには、SetWindowLong 関数を使用します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WS.HSCROLL">
            <summary>ウィンドウには水平スクロールバーがあります。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WS.MAXIMIZE">
            <summary>ウィンドウは最初に最大化されます。</summary> 
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WS.MAXIMIZEBOX">
            <summary>ウィンドウには最大化ボタンがあります。WS_EX_CONTEXTHELP スタイルと組み合わせることはできません。WS_SYSMENU スタイルも指定する必要があります。</summary> 
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WS.MINIMIZE">
            <summary>ウィンドウは最初に最小化されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WS.MINIMIZEBOX">
            <summary>ウィンドウには最小化ボタンがあります。WS_EX_CONTEXTHELP スタイルと組み合わせることはできません。WS_SYSMENU スタイルも指定する必要があります。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WS.OVERLAPPED">
            <summary>ウィンドウは重なり合うウィンドウです。重なり合うウィンドウには、タイトル バーと境界線があります。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WS.OVERLAPPEDWINDOW">
            <summary>ウィンドウは重なり合うウィンドウです。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WS.POPUP">
            <summary>ウィンドウはポップアップ ウィンドウです。このスタイルは、WS_CHILD スタイルでは使用できません。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WS.POPUPWINDOW">
            <summary>ウィンドウはポップアップ ウィンドウです。ウィンドウ メニューを表示にするには、WS_CAPTION スタイルと WS_POPUPWINDOW スタイルを組み合わせる必要があります。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WS.SIZEFRAME">
            <summary>ウィンドウにはサイズ変更境界線があります。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WS.SYSMENU">
            <summary>ウィンドウには、タイトル バーにウィンドウ メニューがあります。WS_CAPTION スタイルも指定する必要があります。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WS.TABSTOP">
            <summary>ウィンドウは、ユーザーが TAB キーを押すとキーボード フォーカスを受け取ることができるコントロールです。TAB キーを押すと、キーボード フォーカスは、WS_TABSTOP スタイルの次のコントロールに変更されます。このスタイルのオンとオフを切り替えて、ダイアログ ボックスのナビゲーションを変更できます。ウィンドウの作成後にこのスタイルを変更するには、SetWindowLong 関数を使用します。ユーザーが作成したウィンドウとモードレス ダイアログでタブ ストップを操作するには、メッセージ ループを変更して IsDialogMessage 関数を呼び出します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WS.VISIBLE">
            <summary>ウィンドウは最初に表示になります。このスタイルは、ShowWindow または SetWindowPos 関数を使用してオンとオフを切り替えることができます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WS.VSCROLL">
            <summary>ウィンドウには垂直スクロール バーがあります。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WSEX.ACCEPTFILES">
            <summary>このスタイルで作成されたウィンドウがドラッグ ドロップ ファイルを受け入れるように指定します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WSEX.APPWINDOW">
            <summary>最上位のウィンドウを、ウィンドウが表示になっている間に、タスク バーに強制します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WSEX.CLIENTEDGE">
            <summary>ウィンドウにくぼみ線による境界線を指定します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WSEX.COMPOSITED">
            <summary>Windows XP: ウィンドウのすべての子孫を、ダブル バッファリングを使用して、下から上のペイント順にペイントします。詳細は注釈を参照してください。この方法は、ウィンドウに CS_OWNDC または CS_CLASSDC のいずれかのクラス スタイルがある場合は使用できません。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WSEX.CONTEXTHELP">
            <summary>ウィンドウのタイトル バーに疑問符が表示されます。ユーザーが疑問符をクリックすると、カーソルはポインター付きの疑問符に変わります。ユーザーが子ウィンドウをクリックすると、子は WM_HELP メッセージを受け取ります。子ウィンドウは、親ウィンドウ プロシージャにメッセージを渡す必要がありますが、それはHELP_WM_HELP コマンドを使用して WinHelp 関数を呼び出す必要があります。ヘルプ アプリケーションは、通常子ウィンドウのためのヘルプを含む、ポップアップ ウィンドウを表示します。WS_EX_CONTEXTHELP は、WS_MAXIMIZEBOX または WS_MINIMIZEBOX スタイルでは使用できません。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WSEX.CONTROLPARENT">
            <summary>ウィンドウ自体には、ダイアログ ボックスナビゲーションに参加する必要がある子ウィンドウが含まれます。このスタイルを指定すると、ダイアログ マネージャーは、TAB キー、矢印キー、またはキーボードニーモニックの処理などのナビゲーション操作を実行する場合、このウィンドウの子に再帰します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WSEX.DLGMODALFRAME">
            <summary>二重境界線を持つウィンドウを作成します。ウィンドウは、任意に、dwStyle パラメーターで WS_CAPTION スタイルを指定することにより、タイトル バー付きで作成できます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WSEX.LAYERED">
            <summary>Windows 2000/XP: 階層化されたウィンドウを作成します。このことは、子ウィンドウには使用できないことに注意してください。また、この方法は、ウィンドウに CS_OWNDC または CS_CLASSDC のいずれかのクラス スタイルがある場合は使用できません。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WSEX.LAYOUTRTL">
            <summary>Windows 98/Me、Windows 2000/XP のアラビア語およびヘブライ語バージョン: 水平方向の原点が右端にあるウィンドウを作成します。水平方向の値を大きくすると、左に伸びます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WSEX.LEFT">
            <summary>汎用の左揃えのプロパティを持つウィンドウを作成します。これがデフォルトです。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WSEX.LEFTSCROLLBAR">
            <summary>シェル言語がヘブライ語、アラビア語、または読み取り順序の配置をサポートする別の言語である場合、垂直スクロール バー (存在する場合) はクライアント領域の左側にあります。他の言語では、スタイルは無視されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WSEX.LTRREADING">
            <summary>ウィンドウ テキストは、左から右の読み取り順序プロパティを使用して表示されます。これがデフォルトです。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WSEX.MDICHILD">
            <summary>マルチ ドキュメント インターフェイス (MDI) 子ウィンドウを作成します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WSEX.NOACTIVATE">
            <summary>Windows 2000/XP: このスタイルで作成された最上位ウィンドウは、ユーザーがクリックしても前面のウィンドウにはなりません。システムは、ユーザーが前面のウィンドウを最小化するか閉じても、このウィンドウを前面にはしません。ウィンドウをアクティブにするには、SetActiveWindow または SetForegroundWindow 関数を使用します。デフォルトでは、ウィンドウはタスク バーに表示されません。ウィンドウをタスク バーに強制的に表示するには、WS_EX_APPWINDOW スタイルを使用します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WSEX.NOINHERITLAYOUT">
            <summary>Windows 2000/XP: このスタイルで作成されたウィンドウは、そのウィンドウ レイアウトを子ウィンドウに渡しません。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WSEX.NOPARENTNOTIFY">
            <summary>このスタイルで作成された子ウィンドウは、作成または破棄される際に、WM_PARENTNOTIFY メッセージを親ウィンドウに送信しないように指定します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WSEX.OVERLAPPEDWINDOW">
            <summary>WS_EX_CLIENTEDGE スタイルと WS_EX_WINDOWEDGE スタイルを組み合わせます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WSEX.PALETTEWINDOW">
            <summary>WS_EX_WINDOWEDGE、WS_EX_TOOLWINDOW、および WS_EX_TOPMOST スタイルを組み合わせます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WSEX.RIGHT">
            <summary>ウィンドウには、汎用の &quot;右揃え&quot; プロパティがあります。このことはウィンドウ クラスによります。このスタイルは、シェル言語がヘブライ語、アラビア語、または読み取り順序の配置をサポートする別の言語である場合のみに効果があります。それ以外の場合、スタイルは無視されます。WS_EX_RIGHT スタイルを静的コントロールまたは編集コントロールに使用すると、それぞれ SS_RIGHT スタイルまたは ES_RIGHT スタイルを使用する場合と同じ効果があります。ボタン コントロールでこのスタイルを使用すると、BS_RIGHT スタイルと BS_RIGHTBUTTON スタイルを使用する場合と同じ効果があります。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WSEX.RIGHTSCROLLBAR">
            <summary>垂直スクロール バー (存在する場合) は、クライアント領域の右側にあります。これがデフォルトです。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WSEX.RTLREADING">
            <summary>シェル言語がヘブライ語、アラビア語、または読み取り順序の配置をサポートする別の言語である場合、ウィンドウ テキストは右から左の読み取り順序プロパティを使用して表示されます。他の言語では、スタイルは無視されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WSEX.STATICEDGE">
            <summary>ユーザー入力を受け入れない項目に使用することを目的とした、3 次元境界線スタイルのウィンドウを作成します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WSEX.TOOLWINDOW">
            <summary>ツール ウィンドウを作成します。すなわち、移動可能なツールバーとして使用することを目的としたウィンドウです。ツール ウィンドウには、通常のタイトル バーよりも短いタイトル バーがあり、またウィンドウ タイトルは小さいフォントを使用して描画されます。ツール ウィンドウは、タスク バーや、ユーザーが ALT + TAB キーを押すと表示されるダイアログには表示されません。ツール ウィンドウにシステム メニューがある場合、そのアイコンはタイトル バーに表示されません。ただし、システム メニューは、右クリックするか、ALT + SPACE を押すことにより表示できます。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WSEX.TOPMOST">
            <summary>このスタイルで作成されたウィンドウは、最上位以外のすべてのウィンドウの上に配置され、ウィンドウが非アクティブ化されても、その上に配置されることを指定します。このスタイルを追加または削除するには、SetWindowPos 関数を使用します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WSEX.TRANSPARENT">
            <summary>このスタイルで作成されたウィンドウは、ウィンドウ下の兄弟 (同じスレッドによって作成された) が描画されるまで描画されないように指定します。ウィンドウは、基本兄弟ウィンドウのビットが既に描画されているため、透明に表示されます。このような制限なしで透明にするには、SetWindowRgn 関数を使用します。</summary>
        </member>
        <member name="F:MahApps.Metro.Models.Win32.WSEX.WINDOWEDGE">
            <summary>ウィンドウに浮き出し境界線を指定します。</summary>
        </member>
        <member name="F:MahApps.Metro.Native.Constants.ShowWindowCommands.SW_HIDE">
            <summary>ウィンドウを非表示にし、別のウィンドウをアクティブにします。</summary>
        </member>
        <member name="F:MahApps.Metro.Native.Constants.ShowWindowCommands.SW_SHOWNORMAL">
            <summary>ウィンドウをアクティブにして表示します。ウィンドウが最小化または最大化されると、システムはウィンドウを元のサイズと位置に復元します。アプリケーションは、このフラグを、ウィンドウを初めて表示する際に指定する必要があります。</summary>
        </member>
        <member name="F:MahApps.Metro.Native.Constants.ShowWindowCommands.SW_NORMAL">
            <summary>ウィンドウをアクティブにして表示します。ウィンドウが最小化または最大化されると、システムはウィンドウを元のサイズと位置に復元します。アプリケーションは、このフラグを、ウィンドウを初めて表示する際に指定する必要があります。</summary>
        </member>
        <member name="F:MahApps.Metro.Native.Constants.ShowWindowCommands.SW_SHOWMINIMIZED">
            <summary>ウィンドウをアクティブにし、最小化されたウィンドウとして表示します。</summary>
        </member>
        <member name="F:MahApps.Metro.Native.Constants.ShowWindowCommands.SW_SHOWMAXIMIZED">
            <summary>ウィンドウをアクティブにし、最大化されたウィンドウとして表示します。</summary>
        </member>
        <member name="F:MahApps.Metro.Native.Constants.ShowWindowCommands.SW_MAXIMIZE">
            <summary>指定したウィンドウを最大化します。</summary>
        </member>
        <member name="F:MahApps.Metro.Native.Constants.ShowWindowCommands.SW_SHOWNOACTIVATE">
            <summary>ウィンドウを直近のサイズと位置で表示します。この値は、ウィンドウがアクティブ化されないことを除いて、<see cref="F:MahApps.Metro.Native.Constants.ShowWindowCommands.SW_SHOWNORMAL"/>に似ています。</summary>
        </member>
        <member name="F:MahApps.Metro.Native.Constants.ShowWindowCommands.SW_SHOW">
            <summary>ウィンドウをアクティブにし、現在のサイズと位置で表示します。</summary>
        </member>
        <member name="F:MahApps.Metro.Native.Constants.ShowWindowCommands.SW_MINIMIZE">
            <summary>指定したウィンドウを最小化し、Z オーダーの次の最上位ウィンドウをアクティブにします。</summary>
        </member>
        <member name="F:MahApps.Metro.Native.Constants.ShowWindowCommands.SW_SHOWMINNOACTIVE">
            <summary>ウィンドウを最小化ウィンドウとして表示します。この値は、ウィンドウがアクティブ化されないことを除いて、<see cref="F:MahApps.Metro.Native.Constants.ShowWindowCommands.SW_SHOWMINIMIZED"/>に似ています。</summary>
        </member>
        <member name="F:MahApps.Metro.Native.Constants.ShowWindowCommands.SW_SHOWNA">
            <summary>ウィンドウを現在のサイズと位置で表示します。この値は、ウィンドウがアクティブ化されないことを除いて、<see cref="F:MahApps.Metro.Native.Constants.ShowWindowCommands.SW_SHOW"/>に似ています。</summary>
        </member>
        <member name="F:MahApps.Metro.Native.Constants.ShowWindowCommands.SW_RESTORE">
            <summary>ウィンドウをアクティブにして表示します。ウィンドウが最小化または最大化されると、システムはウィンドウを元のサイズと位置に復元します。アプリケーションは、最小化されたウィンドウを復元する場合は、このフラグを指定する必要があります。</summary>
        </member>
        <member name="F:MahApps.Metro.Native.Constants.RedrawWindowFlags.Invalidate">
            <summary>lprcUpdate または hrgnUpdate で指定した、四角形または領域を無効にします。これらのパラメーターの内 1 つのみを非 NULL 値設定できます。両方が NULL の場合、RDW_INVALIDATE はウィンドウ全体を無効にします。</summary>
        </member>
        <member name="F:MahApps.Metro.Native.Constants.RedrawWindowFlags.InternalPaint">
            <summary>ウィンドウの一部が無効かどうかに関係なく、OS が、ウィンドウに WM_PAINT メッセージをポストする結果となります。</summary>
        </member>
        <member name="F:MahApps.Metro.Native.Constants.RedrawWindowFlags.Erase">
            <summary>ウィンドウの再描画時に、ウィンドウが WM_ERASEBKGND メッセージを受け取る結果となります。この値を RDW_INVALIDATE 値と組み合わせて指定します。それをしなければ、RDW_ERASE は無効になります。</summary>
        </member>
        <member name="F:MahApps.Metro.Native.Constants.RedrawWindowFlags.Validate">
            <summary>lprcUpdate または hrgnUpdate で指定した四角形または領域を検証します。これらのパラメーターの内 1 つのみを非 NULL 値設定できます。両方が NULL の場合、RDW_VALIDATE はウィンドウ全体を検証します。この値は、内部 WM_PAINT メッセージには影響しません。</summary>
        </member>
        <member name="F:MahApps.Metro.Native.Constants.RedrawWindowFlags.NoErase">
            <summary>保留中のどの WM_ERASEBKGND メッセージも抑制します。</summary>
        </member>
        <member name="F:MahApps.Metro.Native.Constants.RedrawWindowFlags.NoChildren">
            <summary>子ウィンドウは、ある場合には、再描画操作から除外されます。</summary>
        </member>
        <member name="F:MahApps.Metro.Native.Constants.RedrawWindowFlags.AllChildren">
            <summary>子ウィンドウは、ある場合には、再描画操作に含まれます。</summary>
        </member>
        <member name="F:MahApps.Metro.Native.Constants.RedrawWindowFlags.UpdateNow">
            <summary>RDW_ALLCHILDREN 値と RDW_NOCHILDREN 値の設定により指定された、影響を受けるウィンドウが、RedrawWindow が必要に応じて返される前に、WM_ERASEBKGND および WM_PAINT メッセージを受信する結果となります。</summary>
        </member>
        <member name="F:MahApps.Metro.Native.Constants.RedrawWindowFlags.EraseNow">
            <summary>RDW_ALLCHILDREN 値と RDW_NOCHILDREN 値の設定により指定された、影響を受けるウィンドウが、必要に応じて、RedrawWindow が返される前に WM_ERASEBKGND メッセージを受信する結果となります。影響を受けるウィンドウは、平時に WM_PAINT メッセージを受信します。</summary>
        </member>
        <member name="M:MahApps.Metro.Native.RECT.Equals(System.Object)">
            <summary>2 RECT が等しいかどうかを判定します (深い比較)</summary>
        </member>
        <member name="M:MahApps.Metro.Native.RECT.GetHashCode">
            <summary>この構造体の HashCode を返します (一意であることは保証されません)</summary>
        </member>
        <member name="T:MahApps.Metro.Native.UnsafeNativeMethods">
            <devdoc>http://msdn.microsoft.com/ja-jp/library/ms182161.aspx</devdoc>
        </member>
        <member name="M:MahApps.Metro.Native.UnsafeNativeMethods.DwmIsCompositionEnabled">
            <devdoc>http://msdn.microsoft.com/ja-jp/library/windows/desktop/aa969518%28v=vs.85%29.aspx</devdoc>
        </member>
        <member name="M:MahApps.Metro.Native.UnsafeNativeMethods.DwmExtendFrameIntoClientArea(System.IntPtr,MahApps.Metro.Native.MARGINS@)">
            <devdoc>http://msdn.microsoft.com/ja-jp/library/windows/desktop/aa969512%28v=vs.85%29.aspx</devdoc>
        </member>
        <member name="M:MahApps.Metro.Native.UnsafeNativeMethods.DwmSetWindowAttribute(System.IntPtr,System.Int32,System.Int32@,System.Int32)">
            <devdoc>http://msdn.microsoft.com/ja-jp/library/windows/desktop/aa969524%28v=vs.85%29.aspx</devdoc>
        </member>
        <member name="M:MahApps.Metro.Native.UnsafeNativeMethods.DefWindowProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
            <devdoc>http://msdn.microsoft.com/ja-jp/library/windows/desktop/ms633572%28v=vs.85%29.aspx</devdoc>
        </member>
        <member name="M:MahApps.Metro.Native.UnsafeNativeMethods.GetMonitorInfo(System.IntPtr,MahApps.Metro.Native.MONITORINFO)">
            <devdoc>http://msdn.microsoft.com/ja-jp/library/dd144901%28v=VS.85%29.aspx</devdoc>
        </member>
        <member name="M:MahApps.Metro.Native.UnsafeNativeMethods.MonitorFromWindow(System.IntPtr,System.Int32)">
            <devdoc>http://msdn.microsoft.com/ja-jp/library/dd145064%28v=VS.85%29.aspx</devdoc>
        </member>
        <member name="M:MahApps.Metro.Native.UnsafeNativeMethods.SetWindowPos(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32)">
            <devdoc>http://msdn.microsoft.com/ja-jp/library/windows/desktop/ms633545(v=vs.85).aspx</devdoc>
        </member>
        <member name="M:MahApps.Metro.Native.UnsafeNativeMethods.LoadString(MahApps.Metro.Native.SafeLibraryHandle,System.UInt32,System.Text.StringBuilder,System.Int32)">
            <devdoc>http://msdn.microsoft.com/ja-jp/library/windows/desktop/ms647486%28v=vs.85%29.aspx</devdoc>
        </member>
        <member name="M:MahApps.Metro.Native.UnsafeNativeMethods.IsWindow(System.IntPtr)">
            <devdoc>http://msdn.microsoft.com/ja-jp/library/windows/desktop/ms633528(v=vs.85).aspx</devdoc>
        </member>
        <member name="M:MahApps.Metro.Native.UnsafeNativeMethods.GetSystemMenu(System.IntPtr,System.Boolean)">
            <devdoc>http://msdn.microsoft.com/ja-jp/library/windows/desktop/ms647985(v=vs.85).aspx</devdoc>
        </member>
        <member name="M:MahApps.Metro.Native.UnsafeNativeMethods.TrackPopupMenuEx(System.IntPtr,System.UInt32,System.Int32,System.Int32,System.IntPtr,System.IntPtr)">
            <devdoc>http://msdn.microsoft.com/ja-jp/library/windows/desktop/ms648003(v=vs.85).aspx</devdoc>
        </member>
        <member name="M:MahApps.Metro.Native.UnsafeNativeMethods._PostMessage(System.IntPtr,System.UInt32,System.IntPtr,System.IntPtr)">
            <devdoc>http://msdn.microsoft.com/ja-jp/library/windows/desktop/ms644944(v=vs.85).aspx</devdoc>
        </member>
        <member name="M:MahApps.Metro.Native.UnsafeNativeMethods.GetCursorPos(MahApps.Metro.Native.POINT@)">
            <devdoc>http://msdn.microsoft.com/ja-jp/library/windows/desktop/ms648390(v=vs.85).aspx</devdoc>
        </member>
        <member name="M:MahApps.Metro.Native.UnsafeNativeMethods.GetDoubleClickTime">
            <devdoc>http://msdn.microsoft.com/ja-jp/library/windows/desktop/ms646258(v=vs.85).aspx</devdoc>
        </member>
        <member name="M:MahApps.Metro.Native.UnsafeNativeMethods.LoadLibrary(System.String)">
            <devdoc>http://msdn.microsoft.com/ja-jp/library/windows/desktop/ms684175%28v=vs.85%29.aspx</devdoc>
        </member>
        <member name="M:MahApps.Metro.Native.UnsafeNativeMethods.FreeLibrary(System.IntPtr)">
            <devdoc>http://msdn.microsoft.com/ja-jp/library/windows/desktop/ms683152%28v=vs.85%29.aspx</devdoc>
        </member>
        <member name="M:MahApps.Metro.Native.UnsafeNativeMethods.SetWindowPlacement(System.IntPtr,MahApps.Metro.Native.WINDOWPLACEMENT@)">
            <summary>指定されたウィンドウの表示状態、および復元、最小化、最大化された位置を設定します。</summary>
            <param name="hWnd">ウィンドウへのハンドルです。</param>
            <param name="lpwndpl">新しい表示状態とウィンドウの位置を指定する WINDOWPLACEMENT 構造体へのポインターです。<para>SetWindowPlacement を呼び出す前に、WINDOWPLACEMENT 構造体の長さメンバーを sizeof(WINDOWPLACEMENT) に設定します。SetWindowPlacement は、長さメンバーが正しく設定されないとエラーになります。</para>
            </param>
            <returns>関数が成功すると、戻り値はゼロ以外です。<para>関数が失敗すると、戻り値はゼロです。拡張エラー情報を取得するには、GetLastError を呼び出します。</para>
            </returns>
        </member>
        <member name="M:MahApps.Metro.Native.UnsafeNativeMethods.GetWindowPlacement(System.IntPtr,MahApps.Metro.Native.WINDOWPLACEMENT@)">
            <summary>指定したウィンドウの表示状態、および復元、最小化、最大化された位置を取得します。</summary>
            <param name="hWnd">ウィンドウへのハンドルです。</param>
            <param name="lpwndpl">表示状態と位置情報を受け取る WINDOWPLACEMENT 構造体へのポインターです。<para>GetWindowPlacement を呼び出す前に、長さメンバーを sizeof(WINDOWPLACEMENT) に設定します。GetWindowPlacement は、lpwndpl-&gt; 長さが正しく設定されていないとエラーになります。</para>
            </param>
            <returns>関数が成功すると、戻り値はゼロ以外です。<para>関数が失敗すると、戻り値はゼロです。拡張エラー情報を取得するには、GetLastError を呼び出します。</para>
            </returns>
        </member>
        <member name="M:MahApps.Metro.Native.UnsafeNativeMethods.EnableMenuItem(System.IntPtr,System.UInt32,System.UInt32)">
            <devdoc>http://msdn.microsoft.com/ja-jp/library/windows/desktop/ms647636(v=vs.85).aspx</devdoc>
        </member>
        <member name="T:MahApps.Metro.ThemeManager">
            <summary>MetroWindow のテーマとアクセントの検出と変更を可能にするクラスです。</summary>
        </member>
        <member name="P:MahApps.Metro.ThemeManager.Accents">
            <summary>すべてのデフォルトのテーマのリストを取得します。</summary>
        </member>
        <member name="P:MahApps.Metro.ThemeManager.AppThemes">
            <summary>すべてのデフォルトのメトロ テーマのリストを取得します。</summary>
        </member>
        <member name="M:MahApps.Metro.ThemeManager.AddAccent(System.String,System.Uri)">
            <summary>指定した名前によりアクセントを追加します。</summary>
            <param name="name"></param>
            <param name="resourceAddress"></param>
            <returns>アクセントが存在せず、追加できる場合は true となります。</returns>
        </member>
        <member name="M:MahApps.Metro.ThemeManager.AddAppTheme(System.String,System.Uri)">
            <summary>指定した名前によりアプリ テーマを追加します。</summary>
            <param name="name"></param>
            <param name="resourceAddress"></param>
            <returns>アプリ テーマが存在せず、追加できる場合は true となります。</returns>
        </member>
        <member name="M:MahApps.Metro.ThemeManager.GetAppTheme(System.Windows.ResourceDictionary)">
            <summary>指定されたリソース ディクショナリを使用してアプリ テーマを取得します。</summary>
            <param name="resources"></param>
            <returns>AppTheme</returns>
        </member>
        <member name="M:MahApps.Metro.ThemeManager.GetAppTheme(System.String)">
            <summary>指定された名前およびテーマのタイプ (淡色または濃色) によりアプリ テーマを取得します。</summary>
            <param name="appThemeName"></param>
            <returns>AppTheme</returns>
        </member>
        <member name="M:MahApps.Metro.ThemeManager.GetInverseAppTheme(MahApps.Metro.AppTheme)">
            <summary>指定された <see cref="T:MahApps.Metro.AppTheme"/>と逆の <see cref="T:MahApps.Metro.AppTheme" /> を取得します。このメソッドは、&quot;Dark&quot; または &quot;Light&quot; 接辞があるかどうかによります。</summary>
            <param name="appTheme">アプリのテーマ。</param>
            <returns>逆 <see cref="T:MahApps.Metro.AppTheme"/> または、それが見つからない場合は <c>null</c> とします。  </returns>
            <remarks>BaseDark が指定されている場合は BaseLight を返し、またはその逆とないます。カスタムテーマは、これを機能させるため、語尾を &quot;Dark&quot; または &quot;Light&quot; とする必要があります。たとえば、&quot;CustomDark&quot; および &quot;CustomLight&quot; となります。</remarks>
        </member>
        <member name="M:MahApps.Metro.ThemeManager.GetAccent(System.String)">
            <summary>指定された名前による <see cref="T:MahApps.Metro.Accent"/> を取得します。</summary>
            <param name="accentName"></param>
            <returns><see cref="T:MahApps.Metro.Accent"/> またはアプリのテーマが見つからない場合 <c>null</c> とします。</returns>
        </member>
        <member name="M:MahApps.Metro.ThemeManager.GetAccent(System.Windows.ResourceDictionary)">
            <summary>指定されたリソース ディクショナリにより <see cref="T:MahApps.Metro.Accent"/> を取得します。</summary>
            <param name="resources"></param>
            <returns><see cref="T:MahApps.Metro.Accent"/> またはアクセントが見つからない場合 <c>null</c> とします。 </returns>
        </member>
        <member name="M:MahApps.Metro.ThemeManager.IsAccentDictionary(System.Windows.ResourceDictionary)">
            <summary>指定されたリソース ディクショナリが <see cref="T:MahApps.Metro.Accent"/> を表わすかどうか判定します。<para />これには、リソース URI がないランタイム アクセントが含まれる場合があります。</summary>
            <param name="resources">リソース。</param>
            <returns>リソースディクショナリが  <see cref="T:MahApps.Metro.Accent"/> であれば
 <c>true</c>、そうでなければ <c>false</c>です。   </returns>
            <exception cref="T:System.ArgumentNullException">リソース</exception>
        </member>
        <member name="M:MahApps.Metro.ThemeManager.GetResourceFromAppStyle(System.Windows.Window,System.String)">
            <summary>検出された AppStyle からリソースを取得します。</summary>
            <param name="window">チェックするウィンドウ。これが null の場合、アプリケーションのソースをチェックします。</param>
            <param name="key">チェックするキー。</param>
            <returns>リソース オブジェクト、またはリソースが見つからない場合は null です。</returns>
        </member>
        <member name="M:MahApps.Metro.ThemeManager.ChangeAppTheme(System.Windows.Application,System.String)">
            <summary>アプリケーション全体のテーマを変更します。</summary>
            <param name="app"></param>
            <param name="themeName"></param>
        </member>
        <member name="M:MahApps.Metro.ThemeManager.ChangeAppTheme(System.Windows.Window,System.String)">
            <summary>指定されたウィンドウのテーマを変更します。</summary>
            <param name="window"></param>
            <param name="themeName"></param>
        </member>
        <member name="M:MahApps.Metro.ThemeManager.ChangeAppStyle(System.Windows.Application,MahApps.Metro.Accent,MahApps.Metro.AppTheme)">
            <summary>アプリケーション全体のアクセントとテーマを変更します。</summary>
            <param name="app">変更するアプリケーションのインスタンス。</param>
            <param name="newAccent">適用するアクセント。</param>
            <param name="newTheme">適用するテーマ。</param>
        </member>
        <member name="M:MahApps.Metro.ThemeManager.ChangeAppStyle(System.Windows.Window,MahApps.Metro.Accent,MahApps.Metro.AppTheme)">
            <summary>指定されたウィンドウのアクセントとテーマを変更します。</summary>
            <param name="window">変更するウィンドウ。</param>
            <param name="newAccent">適用するアクセント。</param>
            <param name="newTheme">適用するテーマ。</param>
        </member>
        <member name="M:MahApps.Metro.ThemeManager.ChangeAppStyle(System.Windows.ResourceDictionary,MahApps.Metro.Accent,MahApps.Metro.AppTheme)">
            <summary>ResourceDictionary ディレクトリのアクセントとテーマを変更します。</summary>
            <param name="resources">変更する ResourceDictionary。</param>
            <param name="newAccent">ResourceDictionary に適用するアクセント。</param>
            <param name="newTheme">ResourceDictionary に適用するテーマ。</param>
        </member>
        <member name="M:MahApps.Metro.ThemeManager.CopyResource(System.Windows.ResourceDictionary,System.Windows.ResourceDictionary)">
            <summary>あるリソースから別のリソースに、すべてのリソース キーをコピーします。</summary>
            <param name="fromRD">送信元リソース ディクショナリ。</param>
            <param name="toRD">送信先リソース ディクショナリ。</param>
            <exception cref="T:System.ArgumentNullException">fromRD または toRD</exception>
        </member>
        <member name="M:MahApps.Metro.ThemeManager.DetectAppStyle">
            <summary>ウィンドウ リソースをスキャンし、アクセントとテーマを返します。</summary>
        </member>
        <member name="M:MahApps.Metro.ThemeManager.DetectAppStyle(System.Windows.Window)">
            <summary>ウィンドウ リソースをスキャンし、アクセントとテーマを返します。</summary>
            <param name="window">スキャンするウィンドウ。</param>
        </member>
        <member name="M:MahApps.Metro.ThemeManager.DetectAppStyle(System.Windows.Application)">
            <summary>アプリケーション リソースをスキャンし、アクセントとテーマを返します。</summary>
            <param name="app">スキャンするアプリケーション インスタンスです。</param>
        </member>
        <member name="M:MahApps.Metro.ThemeManager.DetectAppStyle(System.Windows.ResourceDictionary)">
            <summary>リソースをスキャンし、アクセントとテーマを返します。</summary>
            <param name="resources">チェックする ResourceDictionary。</param>
        </member>
        <member name="E:MahApps.Metro.ThemeManager.IsThemeChanged">
            <summary>このイベントは、アクセントカラーとテーマが変更されると起動されます。これは弱いイベントパターンを使用する必要がありますが、今のところは十分です</summary>
        </member>
        <member name="M:MahApps.Metro.ThemeManager.OnThemeChanged(MahApps.Metro.Accent,MahApps.Metro.AppTheme)">
            <summary>グローバルな色とリソースを無効にします。ContextMenu が色を変更しない場合があります。この問題は解決されます。</summary>
        </member>
        <member name="F:Standard.IID.ApplicationAssociationRegistration">
            <summary>IID_IApplicationAssociationRegistration</summary>
        </member>
        <member name="F:Standard.IID.ConnectionPoint">
            <summary>IID_IConnectionPoint</summary>
        </member>
        <member name="F:Standard.IID.ConnectionPointContainer">
            <summary>IID_IConnectionPointContainer</summary>
        </member>
        <member name="F:Standard.IID.EnumConnectionPoints">
            <summary>IID_IEnumConnectionPoints</summary>
        </member>
        <member name="F:Standard.IID.EnumConnections">
            <summary>IID_IEnumConnections</summary>
        </member>
        <member name="F:Standard.IID.EnumIdList">
            <summary>IID_IEnumIDList</summary>
        </member>
        <member name="F:Standard.IID.EnumObjects">
            <summary>IID_IEnumObjects</summary>
        </member>
        <member name="F:Standard.IID.FileDialog">
            <summary>IID_IFileDialog</summary>
        </member>
        <member name="F:Standard.IID.FileDialogEvents">
            <summary>IID_IFileDialogEvents</summary>
        </member>
        <member name="F:Standard.IID.FileOpenDialog">
            <summary>IID_IFileOpenDialog</summary>
        </member>
        <member name="F:Standard.IID.FileSaveDialog">
            <summary>IID_IFileSaveDialog</summary>
        </member>
        <member name="F:Standard.IID.HtmlDocument">
            <summary>IID_IHTMLDocument</summary>
        </member>
        <member name="F:Standard.IID.HtmlDocument2">
            <summary>IID_IHTMLDocument2</summary>
        </member>
        <member name="F:Standard.IID.ModalWindow">
            <summary>IID_IModalWindow</summary>
        </member>
        <member name="F:Standard.IID.ObjectArray">
            <summary>IID_IObjectArray</summary>
        </member>
        <member name="F:Standard.IID.ObjectCollection">
            <summary>IID_IObjectCollection</summary>
        </member>
        <member name="F:Standard.IID.PropertyNotifySink">
            <summary>IID_IPropertyNotifySink</summary>
        </member>
        <member name="F:Standard.IID.PropertyStore">
            <summary>IID_IPropertyStore</summary>
        </member>
        <member name="F:Standard.IID.ServiceProvider">
            <summary>IID_IServiceProvider</summary>
        </member>
        <member name="F:Standard.IID.ShellFolder">
            <summary>IID_IShellFolder</summary>
        </member>
        <member name="F:Standard.IID.ShellLink">
            <summary>IID_IShellLink</summary>
        </member>
        <member name="F:Standard.IID.ShellItem">
            <summary>IID_IShellItem</summary>
        </member>
        <member name="F:Standard.IID.ShellItem2">
            <summary>IID_IShellItem2</summary>
        </member>
        <member name="F:Standard.IID.ShellItemArray">
            <summary>IID_IShellItemArray</summary>
        </member>
        <member name="F:Standard.IID.TaskbarList">
            <summary>IID_ITaskbarList</summary>
        </member>
        <member name="F:Standard.IID.TaskbarList2">
            <summary>IID_ITaskbarList2</summary>
        </member>
        <member name="F:Standard.IID.Unknown">
            <summary>IID_IUnknown</summary>
        </member>
        <member name="F:Standard.IID.WebBrowser2">
            <summary>IID_IWebBrowser2</summary>
        </member>
        <member name="F:Standard.IID.WebBrowserEvents">
            <summary>DIID_DWebBrowserEvents</summary>
        </member>
        <member name="F:Standard.IID.WebBrowserEvents2">
            <summary>IID_DWebBrowserEvents2</summary>
        </member>
        <member name="F:Standard.IID.WICBitmapDecoder">
            <summary>IID_IWICBitmapDecoder</summary>
        </member>
        <member name="F:Standard.IID.WICBitmapFlipRotator">
            <summary>IID_IWICBitmapFlipRotator</summary>
        </member>
        <member name="F:Standard.IID.WICBitmapFrameDecode">
            <summary>IID_IWICBitmapFrameDecode</summary>
        </member>
        <member name="F:Standard.IID.WICBitmap">
            <summary>IID_IWICBitmap</summary>
        </member>
        <member name="F:Standard.IID.WICBitmapSource">
            <summary>IID_IWICBitmapSource</summary>
        </member>
        <member name="F:Standard.IID.WICFormatConverter">
            <summary>IID_IWICFormatConverter</summary>
        </member>
        <member name="F:Standard.IID.WICImagingFactory">
            <summary>IID_IWICImagingFactory</summary>
        </member>
        <member name="F:Standard.IID.WICStream">
            <summary>IID_IWICStream</summary>
        </member>
        <member name="F:Standard.IID.ApplicationDestinations">
            <summary>IID_IApplicationDestinations</summary>
        </member>
        <member name="F:Standard.IID.ApplicationDocumentLists">
            <summary>IID_IApplicationDocumentLists</summary>
        </member>
        <member name="F:Standard.IID.CustomDestinationList">
            <summary>IID_ICustomDestinationList</summary>
        </member>
        <member name="F:Standard.IID.ObjectWithAppUserModelId">
            <summary>IID_IObjectWithAppUserModelID</summary>
        </member>
        <member name="F:Standard.IID.ObjectWithProgId">
            <summary>IID_IObjectWithProgID</summary>
        </member>
        <member name="F:Standard.IID.TaskbarList3">
            <summary>IID_ITaskbarList3</summary>
        </member>
        <member name="F:Standard.IID.TaskbarList4">
            <summary>IID_ITaskbarList4</summary>
        </member>
        <member name="F:Standard.SID.SWebBrowserApp">
            <summary>SID_SWebBrowserApp</summary>
        </member>
        <member name="F:Standard.CLSID.ApplicationAssociationRegistration">
            <summary>CLSID_ApplicationAssociationRegistration</summary>
            <remarks>IID_IApplicationAssociationRegistration</remarks>
        </member>
        <member name="F:Standard.CLSID.DragDropHelper">
            <summary>CLSID_DragDropHelper</summary>
        </member>
        <member name="F:Standard.CLSID.FileOpenDialog">
            <summary>CLSID_FileOpenDialog</summary>
            <remarks>IID_IFileOpenDialog</remarks>
        </member>
        <member name="F:Standard.CLSID.FileSaveDialog">
            <summary>CLSID_FileSaveDialog</summary>
            <remarks>IID_IFileSaveDialog</remarks>
        </member>
        <member name="F:Standard.CLSID.TaskbarList">
            <summary>CLSID_TaskbarList</summary>
            <remarks>IID_ITaskbarList</remarks>
        </member>
        <member name="F:Standard.CLSID.EnumerableObjectCollection">
            <summary>CLSID_EnumerableObjectCollection</summary>
            <remarks>IID_IEnumObjects.</remarks>
        </member>
        <member name="F:Standard.CLSID.ShellLink">
            <summary>CLSID_ShellLink</summary>
            <remarks>IID_IShellLink</remarks>
        </member>
        <member name="F:Standard.CLSID.WICImagingFactory">
            <summary>CLSID_WICImagingFactory</summary>
        </member>
        <member name="F:Standard.CLSID.DestinationList">
            <summary>CLSID_DestinationList</summary>
            <remarks>IID_ICustomDestinationList</remarks>
        </member>
        <member name="F:Standard.CLSID.ApplicationDestinations">
            <summary>CLSID_ApplicationDestinations</summary>
            <remarks>IID_IApplicationDestinations</remarks>
        </member>
        <member name="F:Standard.CLSID.ApplicationDocumentLists">
            <summary>CLSID_ApplicationDocumentLists</summary>
            <remarks>IID_IApplicationDocumentLists</remarks>
        </member>
        <member name="T:Standard.Assert">
            <summary>前提条件を検証するための静的クラスです。</summary>
        </member>
        <member name="T:Standard.Assert.EvaluateFunction">
            <summary>Assert.Evaluate の関数シグネチャです。</summary>
        </member>
        <member name="T:Standard.Assert.ImplicationFunction">
            <summary>Assert.Implies の関数シグネチャです。</summary>
            <returns>述語の真理を返します。</returns>
        </member>
        <member name="M:Standard.Assert.Evaluate(Standard.Assert.EvaluateFunction)">
            <summary>指定された引数を実行します。</summary>
            <param name="argument">実行する関数です。</param>
        </member>
        <member name="M:Standard.Assert.Equals``1(``0,``0)">
            <summary>古い形式：Assert.Equals の代わりに Standard.Assert.AreEqual を使用します</summary>
            <typeparam name="T">等価性を比較する汎用タイプです。</typeparam>
            <param name="expected">比較する最初の汎用タイプ データです。これは予測値です。</param>
            <param name="actual">比較する 2 番目の汎用タイプ データです。これは実際の値です。</param>
        </member>
        <member name="M:Standard.Assert.AreEqual``1(``0,``0)">
            <summary>2 つの汎用タイプ データが等しいことを検証します。そうでない場合、アサーションは失敗します。</summary>
            <typeparam name="T">等価性を比較する汎用タイプです。</typeparam>
            <param name="expected">比較する最初の汎用タイプ データです。これは予測値です。</param>
            <param name="actual">比較する 2 番目の汎用タイプ データです。これは実際の値です。</param>
            <remarks>アサーションが失敗した場合は、デバッガーへの割り込みが発生します。</remarks>
        </member>
        <member name="M:Standard.Assert.AreNotEqual``1(``0,``0)">
            <summary>2 つの汎用タイプ 型データが等しくないことを検証します。そうである場合、アサーションは失敗します。</summary>
            <typeparam name="T">不等性を比較する汎用タイプ。</typeparam>
            <param name="notExpected">比較する最初の汎用タイプ データです。これは予期されなかった値です。</param>
            <param name="actual">比較する 2 番目の汎用タイプ データです。これは実際の値です。</param>
            <remarks>アサーションが失敗した場合は、デバッガーへの割り込みが発生します。</remarks>
        </member>
        <member name="M:Standard.Assert.Implies(System.Boolean,System.Boolean)">
            <summary>指定した条件が true の場合は、結果もそうであるか検証します。条件が true、ただし結果が false の場合はアサーションは失敗します。</summary>
            <param name="condition"><c>true</c>[条件]に設定した場合。</param>
            <param name="result">2 番目のブール語ステートメント。最初が true であれば、これもそうあるべきです。最初のステートメントが false の場合、この値は無視されます。</param>
            <remarks>アサーションが失敗した場合は、デバッガーへの割り込みが発生します。</remarks>
        </member>
        <member name="M:Standard.Assert.Implies(System.Boolean,Standard.Assert.ImplicationFunction)">
            <summary>遅延評価のオーバーロードです。条件が true の場合は、2 番目の値もそうであることを検証します。</summary>
            <param name="condition">条件付きの値。</param>
            <param name="result">条件引数が true の場合に、真理を評価する関数。</param>
            <remarks>このオーバーロードは、最初の条件が true の場合にのみ結果を評価します。</remarks>
        </member>
        <member name="M:Standard.Assert.IsNeitherNullNorEmpty(System.String)">
            <summary>文字列に内容があることを検証します。すなわち、null ではなく、空ではありません。</summary>
            <param name="value">検証する文字列。</param>
        </member>
        <member name="M:Standard.Assert.IsNeitherNullNorWhitespace(System.String)">
            <summary>文字列に内容があることを検証します。すなわち、null ではなく、純粋な空白文字ではありません。</summary>
            <param name="value">検証する文字列。</param>
        </member>
        <member name="M:Standard.Assert.IsNotNull``1(``0)">
            <summary>指定された値が null でないことを確認します。そうであれば、アサーションは失敗します。</summary>
            <typeparam name="T">汎用参照タイプ。</typeparam>
            <param name="value">null 性をチェックする値です。</param>
            <remarks>アサーションが失敗した場合は、デバッガーへの割り込みが発生します。</remarks>
        </member>
        <member name="M:Standard.Assert.IsFalse(System.Boolean)">
            <summary>指定した条件が false であることを検証します。true であれば、アサーションは失敗します。</summary>
            <param name="condition"><c>false</c>であるべき式</param>
            <remarks>アサーションが失敗した場合は、デバッガーへの割り込みが発生します。</remarks>
        </member>
        <member name="M:Standard.Assert.IsFalse(System.Boolean,System.String)">
            <summary>指定した条件が false であることを検証します。true であれば、アサーションは失敗します。</summary>
            <param name="condition"><c>false</c>であるべき式</param>
            <param name="message">条件が <c>true</c>の場合に表示するメッセージです。</param>
            <remarks>アサーションが失敗した場合は、デバッガーへの割り込みが発生します。</remarks>
        </member>
        <member name="M:Standard.Assert.IsTrue(System.Boolean)">
            <summary>指定した条件が true であることを検証します。そうでなければ、アサーションは失敗します。</summary>
            <param name="condition"><c>true</c>であると予測される条件。</param>
            <remarks>アサーションが失敗した場合は、デバッガーへの割り込みが発生します。</remarks>
        </member>
        <member name="M:Standard.Assert.IsTrue(System.Boolean,System.String)">
            <summary>指定した条件が true であることを検証します。そうでなければ、アサーションは失敗します。</summary>
            <param name="condition"><c>true</c>であると予測される条件。</param>
            <param name="message">条件が <c>false</c>の場合に書き込むメッセージです。</param>
            <remarks>アサーションが失敗した場合は、デバッガーへの割り込みが発生します。</remarks>
        </member>
        <member name="M:Standard.Assert.Fail">
            <summary>この行は絶対に実行しないでください。アサーションは常に失敗します。</summary>
            <remarks>アサーションが失敗した場合は、デバッガーへの割り込みが発生します。</remarks>
        </member>
        <member name="M:Standard.Assert.Fail(System.String)">
            <summary>この行は絶対に実行しないでください。アサーションは常に失敗します。</summary>
            <param name="message">この関数が実行されると表示されるメッセージ。</param>
            <remarks>アサーションが失敗した場合は、デバッガーへの割り込みが発生します。</remarks>
        </member>
        <member name="M:Standard.Assert.IsNull``1(``0)">
            <summary>指定されたオブジェクトが null であることを検証します。そうでなければ、アサーションは失敗します。</summary>
            <param name="item">検証する項目は null です。</param>
        </member>
        <member name="M:Standard.Assert.BoundedDoubleInc(System.Double,System.Double,System.Double)">
            <summary>指定された値が予測範囲内にあることを検証します。そうでなければ、アサーションは失敗します。</summary>
            <param name="lowerBoundInclusive">下限包括値です。</param>
            <param name="value">検証する値です。</param>
            <param name="upperBoundInclusive">上限包括値です。</param>
        </member>
        <member name="M:Standard.Assert.BoundedInteger(System.Int32,System.Int32,System.Int32)">
            <summary>指定された値が予測される範囲内にあることを検証します。そうでなければ、アサーションは失敗します。</summary>
            <param name="lowerBoundInclusive">下限包括値です。</param>
            <param name="value">検証する値です。</param>
            <param name="upperBoundExclusive">上限排他値です。</param>
        </member>
        <member name="M:Standard.Assert.IsApartmentState(System.Threading.ApartmentState)">
            <summary>現在のスレッドのアパートメント状態が予測どおりであることを検証します。そうでなければ、アサーションは失敗します。</summary>
            <param name="expectedState">予想される現在のスレッドのアパートメント状態。</param>
            <remarks>アサーションが失敗した場合は、デバッガーへの割り込みが発生します。</remarks>
        </member>
        <member name="T:Standard.DoubleUtilities">
            <summary>DoubleUtil は固定 eps を使用して、倍精度のあいまい比較機能を提供します。FP ノイズは大きな問題であることに注意してください。これらの比較方法のいずれかを使用することは完全な解決策ではなく、不要な作業を繰り返す可能性を減らす方法です。</summary>
        </member>
        <member name="F:Standard.DoubleUtilities.Epsilon">
            <summary>イプシロン - 多かれ少なかれランダムであり、多かれ少なかれ小さい数です。</summary>
        </member>
        <member name="M:Standard.DoubleUtilities.AreClose(System.Double,System.Double)">
            <summary>AreClose は、2 つの倍精度が &quot;close&quot; であるかどうかを返します。すなわち、それらがお互いにイプシロン内にあるかどうかです。たとえ理論的に同一の数値であっても、これが false を返す方法は多数あります。そのため、これが false を返す場合、これを呼び出すどのコードも処理を失敗することはないはずです。</summary>
            <param name="value1">比較する最初の倍精度。</param>
            <param name="value2">比較する 2 番目の倍精度です。</param>
            <returns>AreClose 比較の結果です。</returns>
        </member>
        <member name="M:Standard.DoubleUtilities.IsStrictlyLessThan(System.Double,System.Double)">
            <summary>LessThan は、最初の倍精度が、2 番目の倍精度より小さいかどうかを返します。すなわち、最初の数字が厳密により小さいかどうか、*且つ* 他の数値のイプシロン以内かどうかです。たとえ理論的に同一の数値であっても、これが false を返す方法は多数あります。そのため、これが false を返す場合、これを呼び出すどのコードも処理を失敗することはないはずです。</summary>
            <param name="value1">比較する最初の倍精度。</param>
            <param name="value2">比較する 2 番目の倍精度です。</param>
            <returns>LessThan 比較の結果です。</returns>
        </member>
        <member name="M:Standard.DoubleUtilities.IsStrictlyGreaterThan(System.Double,System.Double)">
            <summary>GreaterThan は、最初の倍精度が 2 番目の倍精度より大きいかどうかを返します。すなわち、最初の数字が厳密により大きいかどうか、*且つ* 他の数値のイプシロン以内でないかどうかです。たとえ理論的に同一の数値であっても、これが false を返す方法は多数あります。そのため、これが false を返す場合、これを呼び出すどのコードも処理を失敗することはないはずです。</summary>
            <param name="value1">比較する最初の倍精度。</param>
            <param name="value2">比較する 2 番目の倍精度です。</param>
            <returns>GreaterThan 比較の結果です。</returns>
        </member>
        <member name="M:Standard.DoubleUtilities.IsLessThanOrCloseTo(System.Double,System.Double)">
            <summary>LessThanOrClose は、最初の倍精度が 2 番目の倍精度より小さいかどうか、または近いかどうかを返します。すなわち、最初の数字が厳密により小さいかどうか、または 他の数値のイプシロン以内かどうかです。たとえ理論的に同一の数値であっても、これが false を返す方法は多数あります。そのため、これが false を返す場合、これを呼び出すどのコードも処理を失敗することはないはずです。</summary>
            <param name="value1">比較する最初の倍精度。</param>
            <param name="value2">比較する 2 番目の倍精度です。</param>
            <returns>LessThanOrClose 比較の結果。</returns>
        </member>
        <member name="M:Standard.DoubleUtilities.IsGreaterThanOrCloseTo(System.Double,System.Double)">
            <summary>GreaterThanOrClose は、最初の倍精度が 2 番目の倍精度より大きいかどうか、または近いかどうかを返します。すなわち、最初の数字が厳密により大きいかどうか、または 他の数値のイプシロン以内かどうかです。たとえ理論的に同一の数値であっても、これが false を返す方法は多数あります。そのため、これが false を返す場合、これを呼び出すどのコードも処理を失敗することはないはずです。</summary>
            <param name="value1">比較する最初の倍精度。</param>
            <param name="value2">比較する 2 番目の倍精度です。</param>
            <returns>GreaterThanOrClose 比較の結果。</returns>
        </member>
        <member name="M:Standard.DoubleUtilities.IsFinite(System.Double)">
            <summary>倍精度が有限数か調べるためにテストします (NaN または無限大ではありません)。</summary>
            <param name='value'>テストする値です。</param>
            <returns>値が有限数であるかどうか。</returns>
        </member>
        <member name="M:Standard.DoubleUtilities.IsValidSize(System.Double)">
            <summary>倍精度が、有効なサイズの値か調べるためにテストします (有限、且つ &gt; 0)。</summary>
            <param name='value'>テストする値です。</param>
            <returns>値が有効なサイズの値であるかどうか。</returns>
        </member>
        <member name="M:Standard.DpiHelper.LogicalPixelsToDevice(System.Windows.Point)">
            <summary>デバイスに依存しないピクセル (1/96 インチ) のポイントを、システム座標のポイントに変換します。</summary>
            <param name="logicalPoint">論理座標系内のポイントです。</param>
            <returns>システムの座標に、変換されたパラメーターを返します。</returns>
        </member>
        <member name="M:Standard.DpiHelper.DevicePixelsToLogical(System.Windows.Point)">
            <summary>システム座標のポイントを、デバイスに依存しないピクセル (1/96インチ) のポイントに変換します。</summary>
            <param name="devicePoint">物理座標系内のポイントです。</param>
            <returns>デバイスに依存しない座標系に変換されたパラメーターを返します。</returns>
        </member>
        <member name="T:Standard.Win32Error">
            <summary>一般的 Win32 ステータス コードのラッパー。</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_SUCCESS">
            <summary>操作は正常に完了しました。</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_INVALID_FUNCTION">
            <summary>関数が正しくありません。</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_FILE_NOT_FOUND">
            <summary>システムは指定されたファイルを見つけることができません。</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_PATH_NOT_FOUND">
            <summary>システムは指定されたパスを見つけることができません。</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_TOO_MANY_OPEN_FILES">
            <summary>システムはファイルを開くことができません。</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_ACCESS_DENIED">
            <summary>アクセスが拒否されました。</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_INVALID_HANDLE">
            <summary>ハンドルが無効です。</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_OUTOFMEMORY">
            <summary>この操作を完了するのに十分なストレージがありません。</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_NO_MORE_FILES">
            <summary>これ以上ファイルがありません。</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_SHARING_VIOLATION">
            <summary>別のプロセスで使用されているため、プロセスはファイルにアクセスできません。</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_INVALID_PARAMETER">
            <summary>パラメーターが正しくありません。</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_INSUFFICIENT_BUFFER">
            <summary>システムコールに渡されるデータ域が小さすぎます。</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_NESTING_NOT_ALLOWED">
            <summary>LoadModule への呼び出しをネストできません。</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_KEY_DELETED">
            <summary>削除対象としてマークされたレジストリ キーに対して不正な操作が試行されました。</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_NOT_FOUND">
            <summary>要素が見つかりません。</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_NO_MATCH">
            <summary>インデックス内で指定されたキーの一致はありませんでした。</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_BAD_DEVICE">
            <summary>無効なデバイスが指定されました。</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_CANCELLED">
            <summary>操作はユーザーによって取り消されました。</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_CANNOT_FIND_WND_CLASS">
            <summary>ウィンドウ クラスが見つかりません。</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_CLASS_ALREADY_EXISTS">
            <summary>ウィンドウ クラスは既に登録されています。</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_INVALID_DATATYPE">
            <summary>指定された datatype が無効です。</summary>
        </member>
        <member name="M:Standard.Win32Error.#ctor(System.Int32)">
            <summary>新しい Win32 エラーを作成します。</summary>
            <param name="i">エラーの整数値です。</param>
        </member>
        <member name="M:Standard.Win32Error.op_Explicit(Standard.Win32Error)~Standard.HRESULT">
            <summary>HRESULT_FROM_WIN32 変換を実行します。</summary>
            <param name="error">Win32 エラーが HRESULT に変換されます。</param>
            <returns>等価 HRESULT 値。</returns>
        </member>
        <member name="M:Standard.Win32Error.ToHRESULT">
            <summary>HRESULT_FROM_WIN32 変換を実行します。</summary>
            <returns>等価 HRESULT 値。</returns>
        </member>
        <member name="M:Standard.Win32Error.GetLastError">
            <summary>Win32 の GetLastError() 相当を実行します。</summary>
            <returns>ネイティブ GetLastError の結果を持つ Win32Error インスタンス</returns>
        </member>
        <member name="M:Standard.Win32Error.op_Equality(Standard.Win32Error,Standard.Win32Error)">
            <summary>2 つの Win32 エラー コードを比較して、等価性を求めます。</summary>
            <param name="errLeft">比較する最初のエラー コード。</param>
            <param name="errRight">比較する 2 番目のエラー コード。</param>
            <returns>2 つのエラー コードが同じかどうか。</returns>
        </member>
        <member name="M:Standard.Win32Error.op_Inequality(Standard.Win32Error,Standard.Win32Error)">
            <summary>2 つの Win32 エラー コードを比較して、不等性を求めます。</summary>
            <param name="errLeft">比較する最初のエラー コード。</param>
            <param name="errRight">比較する 2 番目のエラー コード。</param>
            <returns>2 つのエラー コードが同じでないかどうか。</returns>
        </member>
        <member name="F:Standard.Facility.Null">
            <summary>FACILITY_NULL</summary>
        </member>
        <member name="F:Standard.Facility.Rpc">
            <summary>FACILITY_RPC</summary>
        </member>
        <member name="F:Standard.Facility.Dispatch">
            <summary>FACILITY_DISPATCH</summary>
        </member>
        <member name="F:Standard.Facility.Storage">
            <summary>FACILITY_STORAGE</summary>
        </member>
        <member name="F:Standard.Facility.Itf">
            <summary>FACILITY_ITF</summary>
        </member>
        <member name="F:Standard.Facility.Win32">
            <summary>FACILITY_WIN32</summary>
        </member>
        <member name="F:Standard.Facility.Windows">
            <summary>FACILITY_WINDOWS</summary>
        </member>
        <member name="F:Standard.Facility.Control">
            <summary>FACILITY_CONTROL</summary>
        </member>
        <member name="F:Standard.Facility.Ese">
            <summary>ESE エラーの MSDN doced ファシリティ コードです。</summary>
        </member>
        <member name="F:Standard.Facility.WinCodec">
            <summary>FACILITY_WINCODEC (WIC)</summary>
        </member>
        <member name="T:Standard.HRESULT">
            <summary>HRESULT ステータス コードのラッパー。</summary>
        </member>
        <member name="F:Standard.HRESULT.S_OK">
            <summary>S_OK</summary>
        </member>
        <member name="F:Standard.HRESULT.S_FALSE">
            <summary>S_FALSE</summary>
        </member>
        <member name="F:Standard.HRESULT.E_PENDING">
            <summary>E_PENDING</summary>
        </member>
        <member name="F:Standard.HRESULT.E_NOTIMPL">
            <summary>E_NOTIMPL</summary>
        </member>
        <member name="F:Standard.HRESULT.E_NOINTERFACE">
            <summary>E_NOINTERFACE</summary>
        </member>
        <member name="F:Standard.HRESULT.E_POINTER">
            <summary>E_POINTER</summary>
        </member>
        <member name="F:Standard.HRESULT.E_ABORT">
            <summary>E_ABORT</summary>
        </member>
        <member name="F:Standard.HRESULT.E_FAIL">
            <summary>E_FAIL</summary>
        </member>
        <member name="F:Standard.HRESULT.E_UNEXPECTED">
            <summary>E_UNEXPECTED</summary>
        </member>
        <member name="F:Standard.HRESULT.STG_E_INVALIDFUNCTION">
            <summary>STG_E_INVALIDFUNCTION</summary>
        </member>
        <member name="F:Standard.HRESULT.REGDB_E_CLASSNOTREG">
            <summary>REGDB_E_CLASSNOTREG</summary>
        </member>
        <member name="F:Standard.HRESULT.DESTS_E_NO_MATCHING_ASSOC_HANDLER">
            <summary>DESTS_E_NO_MATCHING_ASSOC_HANDLER.ジャンプリストのための Win7 内部エラーコード。</summary>
            <remarks>指定されたアプリケーションによって登録された、規定された項目に対する Assoc ハンドラーはありません。</remarks>
        </member>
        <member name="F:Standard.HRESULT.DESTS_E_NORECDOCS">
            <summary>DESTS_E_NORECDOCS.ジャンプリストのための Win7 内部エラーコード。</summary>
            <remarks>規定された項目は、登録時の NoRecDocs ビットによって最近の docs フォルダーから除外されます。</remarks>
        </member>
        <member name="F:Standard.HRESULT.DESTS_E_NOTALLCLEARED">
            <summary>DESTS_E_NOTALLCLEARED.ジャンプリストのための Win7 内部エラーコード。</summary>
            <remarks>必ずしもすべてのアイテムが正常にクリアされませんでした</remarks>
        </member>
        <member name="F:Standard.HRESULT.E_ACCESSDENIED">
            <summary>E_ACCESSDENIED</summary>
            <remarks>Win32Error ERROR_ACCESS_DENIED.</remarks>
        </member>
        <member name="F:Standard.HRESULT.E_OUTOFMEMORY">
            <summary>E_OUTOFMEMORY</summary>
            <remarks>Win32Error ERROR_OUTOFMEMORY.</remarks>
        </member>
        <member name="F:Standard.HRESULT.E_INVALIDARG">
            <summary>E_INVALIDARG</summary>
            <remarks>Win32Error ERROR_INVALID_PARAMETER.</remarks>
        </member>
        <member name="F:Standard.HRESULT.INTSAFE_E_ARITHMETIC_OVERFLOW">
            <summary>INTSAFE_E_ARITHMETIC_OVERFLOW</summary>
        </member>
        <member name="F:Standard.HRESULT.COR_E_OBJECTDISPOSED">
            <summary>COR_E_OBJECTDISPOSED</summary>
        </member>
        <member name="F:Standard.HRESULT.WC_E_GREATERTHAN">
            <summary>WC_E_GREATERTHAN</summary>
        </member>
        <member name="F:Standard.HRESULT.WC_E_SYNTAX">
            <summary>WC_E_SYNTAX</summary>
        </member>
        <member name="M:Standard.HRESULT.#ctor(System.UInt32)">
            <summary>整数値から HRESULT を作成します。</summary>
            <param name="i"></param>
        </member>
        <member name="M:Standard.HRESULT.op_Explicit(Standard.HRESULT)~System.Int32">
            <summary>HRESULT を int に変換します。制御不能の COM インターフェイス宣言に使用されました。</summary>
        </member>
        <member name="P:Standard.HRESULT.Facility">
            <summary>HRESULT_FACILITY の取得</summary>
        </member>
        <member name="P:Standard.HRESULT.Code">
            <summary>HRESULT_CODE の取得</summary>
        </member>
        <member name="M:Standard.HRESULT.ToString">
            <summary>この HRESULT の文字列表現を取得します。</summary>
            <returns></returns>
        </member>
        <member name="M:Standard.HRESULT.ThrowLastError">
            <summary>Win32 GetLastError() の結果を発生した例外に変換します。</summary>
        </member>
        <member name="T:Standard.HCF">
            <summary>HIGHCONTRAST フラグ</summary>
        </member>
        <member name="T:Standard.DROPIMAGETYPE">
            <summary>DROPIMAGE_*</summary>
        </member>
        <member name="T:Standard.BI">
            <summary>BITMAPINFOHEADER 圧縮タイプ。BI_*.</summary>
        </member>
        <member name="T:Standard.RGN">
            <summary>CombingRgn フラグRGN_*</summary>
        </member>
        <member name="F:Standard.RGN.AND">
            <summary>2 つの結合された領域の交差部を作成します。</summary>
        </member>
        <member name="F:Standard.RGN.OR">
            <summary>2 つの結合されたリージョンの結合を作成します。</summary>
        </member>
        <member name="F:Standard.RGN.XOR">
            <summary>重なり合う領域を除く、2 つの結合領域の結合を作成します。</summary>
        </member>
        <member name="F:Standard.RGN.DIFF">
            <summary>hrgnSrc2 の一部ではない hrgnSrc1 の部分を結合します。</summary>
        </member>
        <member name="F:Standard.RGN.COPY">
            <summary>hrgnSrc1 で識別された領域のコピーを作成します。</summary>
        </member>
        <member name="T:Standard.OLECMDEXECOPT">
            <summary>IWebBrowser2 の場合。OLECMDEXECOPT_*</summary>
        </member>
        <member name="T:Standard.OLECMDF">
            <summary>IWebBrowser2 の場合。OLECMDF_*</summary>
        </member>
        <member name="T:Standard.OLECMDID">
            <summary>IWebBrowser2 の場合。OLECMDID_*</summary>
        </member>
        <member name="T:Standard.READYSTATE">
            <summary>IWebBrowser2 の場合。READYSTATE_*</summary>
        </member>
        <member name="T:Standard.DOGIF">
            <summary>DATAOBJ_GET_ITEM_FLAGS.DOGIF_*.</summary>
        </member>
        <member name="F:Standard.ErrorModes.Default">
            <summary>すべてのエラー ダイアログ ボックスを表示する、システムデフォルトを使用します。</summary>
        </member>
        <member name="F:Standard.ErrorModes.FailCriticalErrors">
            <summary>システムは、致命的エラー ハンドラー メッセージ ボックスを表示しません。代わりに、システムは、エラーを呼び出しプロセスに送信します。</summary>
        </member>
        <member name="F:Standard.ErrorModes.NoGpFaultErrorBox">
            <summary>64 ビット Windows:  システムはメモリ アライメント フォルトを自動的に修正し、アプリケーションから非表示にします。システムは、このことを呼び出しプロセスのため、および任意の子孫プロセスのために行います。この値をプロセスに設定すると、値をクリアする、その後の試行は無視されます。</summary>
        </member>
        <member name="F:Standard.ErrorModes.NoAlignmentFaultExcept">
            <summary>システムは、一般保護違反メッセージ ボックスを表示しません。このフラグは、例外ハンドラーを使用して一般的保護 (GP) 違反自体を処理する、デバッグ用アプリケーションのみにより設定される必要があります。</summary>
        </member>
        <member name="F:Standard.ErrorModes.NoOpenFileErrorBox">
            <summary>ファイルの検索に失敗しても、メッセージ ボックスは表示されません。代わりに、エラーが、呼び出しプロセスに返されます。</summary>
        </member>
        <member name="T:Standard.HT">
            <summary>非クライアント ヒット テスト値、HT*</summary>
        </member>
        <member name="T:Standard.GCLP">
            <summary>GetClassLongPtr 値、GCLP_*</summary>
        </member>
        <member name="T:Standard.GWL">
            <summary>GetWindowLongPtr 値、GWL_*</summary>
        </member>
        <member name="T:Standard.SM">
            <summary>SystemMetrics.SM_*</summary>
        </member>
        <member name="T:Standard.SPI">
            <summary>SystemParameterInfo 値、SPI_*</summary>
        </member>
        <member name="T:Standard.SPIF">
            <summary>SystemParameterInfo フラグ値、SPIF_*</summary>
        </member>
        <member name="T:Standard.CS">
            <summary>CS_*</summary>
        </member>
        <member name="T:Standard.WS">
            <summary>WindowStyle 値、WS_*</summary>
        </member>
        <member name="T:Standard.WM">
            <summary>Window message 値、WM_*</summary>
        </member>
        <member name="T:Standard.WS_EX">
            <summary>ウィンドウ スタイルの拡張値、WS_EX_*</summary>
        </member>
        <member name="T:Standard.DeviceCap">
            <summary>GetDeviceCaps nIndex 値。</summary>
        </member>
        <member name="F:Standard.DeviceCap.BITSPIXEL">
            <summary>ピクセルあたりのビット数</summary>
        </member>
        <member name="F:Standard.DeviceCap.PLANES">
            <summary>平面数</summary>
        </member>
        <member name="F:Standard.DeviceCap.LOGPIXELSX">
            <summary>X の論理ピクセルインチ</summary>
        </member>
        <member name="F:Standard.DeviceCap.LOGPIXELSY">
            <summary>Y の論理ピクセルインチ</summary>
        </member>
        <member name="T:Standard.FOF">
            <summary>&quot;FILEOP_FLAGS&quot;, FOF_*.</summary>
        </member>
        <member name="T:Standard.MF">
            <summary>EnableMenuItem uEnable 値、MF_*</summary>
        </member>
        <member name="F:Standard.MF.DOES_NOT_EXIST">
            <summary>EnableMenuItem の可能性がある戻り値</summary>
        </member>
        <member name="T:Standard.WINDOWTHEMEATTRIBUTETYPE">
            <summary>ウィンドウ上で設定する、ビジュアル スタイル属性のタイプを指定します。</summary>
        </member>
        <member name="F:Standard.WINDOWTHEMEATTRIBUTETYPE.WTA_NONCLIENT">
            <summary>非クライアント領域のウィンドウ属性が設定されます。</summary>
        </member>
        <member name="T:Standard.DWMFLIP3D">
            <summary>DWMFLIP3DWINDOWPOLICY.DWMFLIP3D_*</summary>
        </member>
        <member name="T:Standard.DWMNCRP">
            <summary>DWMNCRENDERINGPOLICY.DWMNCRP_*</summary>
        </member>
        <member name="T:Standard.DWMWA">
            <summary>DWMWINDOWATTRIBUTE.DWMWA_*</summary>
        </member>
        <member name="T:Standard.WTNCA">
            <summary>WindowThemeNonClientAttributes</summary>
        </member>
        <member name="F:Standard.WTNCA.NODRAWCAPTION">
            <summary>ウィンドウ キャプションが描画されないようにします。</summary>
        </member>
        <member name="F:Standard.WTNCA.NODRAWICON">
            <summary>システム アイコンが描画されないようにします。</summary>
        </member>
        <member name="F:Standard.WTNCA.NOSYSMENU">
            <summary>システム アイコン メニューが表示されないようにします。</summary>
        </member>
        <member name="F:Standard.WTNCA.NOMIRRORHELP">
            <summary>右から左 (RTL) レイアウトでも、疑問符がミラーリングされないようにします。</summary>
        </member>
        <member name="F:Standard.WTNCA.VALIDBITS">
            <summary>すべての有効ビットを含むマスクです。</summary>
        </member>
        <member name="T:Standard.SWP">
            <summary>SetWindowPos オプション</summary>
        </member>
        <member name="T:Standard.SW">
            <summary>ShowWindow オプション</summary>
        </member>
        <member name="F:Standard.SC.F_ISSECURE">
            <summary>SCF_ISSECURE</summary>
        </member>
        <member name="T:Standard.Status">
            <summary>GDI+ ステータス コード</summary>
        </member>
        <member name="T:Standard.MSGFLT">
            <summary>MSGFLT_*.Vista の新機能。Windows 7 で現実化。</summary>
        </member>
        <member name="T:Standard.NIM">
            <summary>Shell_NotifyIcon メッセージ。NIM_*</summary>
        </member>
        <member name="T:Standard.SHARD">
            <summary>SHAddToRecentDocuments フラグ。SHARD_*</summary>
        </member>
        <member name="T:Standard.NIF">
            <summary>Shell_NotifyIcon フラグ。NIF_*</summary>
        </member>
        <member name="F:Standard.NIF.REALTIME">
            <summary>Vista のみ。</summary>
        </member>
        <member name="F:Standard.NIF.SHOWTIP">
            <summary>Vista のみ。</summary>
        </member>
        <member name="T:Standard.NIIF">
            <summary>Shell_NotifyIcon info フラグ。NIIF_*</summary>
        </member>
        <member name="F:Standard.NIIF.USER">
            <summary>XP SP2 以降。</summary>
        </member>
        <member name="F:Standard.NIIF.NOSOUND">
            <summary>XP 以降。</summary>
        </member>
        <member name="F:Standard.NIIF.LARGE_ICON">
            <summary>Vista 以降。</summary>
        </member>
        <member name="F:Standard.NIIF.NIIF_RESPECT_QUIET_TIME">
            <summary>Windows 7 以降</summary>
        </member>
        <member name="F:Standard.NIIF.XP_ICON_MASK">
            <summary>XP 以降。NIIF_ICON_MASK と呼ばれるネイティブ バージョン。</summary>
        </member>
        <member name="T:Standard.AC">
            <summary>AC_*</summary>
        </member>
        <member name="F:Standard.NOTIFYICONDATA.dwState">
            <summary>アイコンの状態。独立して設定できるフラグが 2 つあります。NIS_HIDDEN = 1.アイコンが非表示になります。NIS_SHAREDICON = 2.アイコンが共有されます。</summary>
        </member>
        <member name="F:Standard.SHARDAPPIDINFOIDLIST.pidl">
            <summary>最近の docs フォルダーに追加する必要があるシェル項目の ID リスト。</summary>
        </member>
        <member name="F:Standard.SHARDAPPIDINFOIDLIST.pszAppID">
            <summary>この最近の doc に関連付けるべきアプリケーションの ID。</summary>
        </member>
        <member name="T:Standard.WTA_OPTIONS">
            <summary>ウィンドウの表示スタイル属性の設定に使用するオプションを定義します。</summary>
        </member>
        <member name="F:Standard.WTA_OPTIONS.dwFlags">
            <summary>ウィンドウのビジュアル スタイル属性を変更するフラグの組み合わせです。WTNCA 定数の組み合わせとすることができます。</summary>
        </member>
        <member name="F:Standard.WTA_OPTIONS.dwMask">
            <summary>dwFlags で指定された値を適用する方法を説明するビットマスクです。dwFlags の値に対応するビットが 0 の場合、そのフラグは削除されます。ビットが 1 の場合、フラグが追加されます。</summary>
        </member>
        <member name="F:Standard.MARGINS.cxLeftWidth">
            <summary>サイズを保持する左の境界線の幅。</summary>
        </member>
        <member name="F:Standard.MARGINS.cxRightWidth">
            <summary>サイズを保持する右の境界線の幅。</summary>
        </member>
        <member name="F:Standard.MARGINS.cyTopHeight">
            <summary>サイズを保持する上部の境界線の高さ。</summary>
        </member>
        <member name="F:Standard.MARGINS.cyBottomHeight">
            <summary>サイズを保持する下部の境界線の高さ。</summary>
        </member>
        <member name="F:Standard.APPBARDATA.cbSize">
            <summary>次の方法を使用してこのフィールドを初期化します。Marshal.SizeOf(typeof(APPBARDATA));</summary>
        </member>
        <member name="T:Standard.WndProc">
            <summary>ネイティブの WndProc シグネチャに一致するデリゲート宣言です。</summary>
        </member>
        <member name="T:Standard.MessageHandler">
            <summary>マネージド WndProc シグネチャに一致するデリゲート宣言です。</summary>
        </member>
        <member name="M:Standard.NativeMethods.SetWindowThemeAttribute(System.IntPtr,Standard.WINDOWTHEMEATTRIBUTETYPE,Standard.WTA_OPTIONS@,System.UInt32)">
            <summary>表示スタイルを指定したウィンドウに適用する方法を制御する属性を設定します。</summary>
            <param name="hwnd">ウィンドウ変更を適用するハンドルです。</param>
            <param name="eAttribute">設定する属性の型を指定する WINDOWMEMEATTRIBUTETYPE タイプの値です。このパラメーターの値によって、pvAttribute パラメーターで渡されるデータのタイプが決まります。次の値を指定できます。<list>WTA_NONCLIENT (非クライアント関連属性を指定します)。</list>pvAttribute は、WTA_OPTIONS タイプのポインターである必要があります。</param>
            <param name="pvAttribute">設定する属性を指定するポインターです。タイプは、eAttribute の値によって決まります。</param>
            <param name="cbAttribute">pvAttribute により指定されるデータのサイズをバイトで指定します。</param>
        </member>
        <member name="M:Standard.NativeMethods._SystemParametersInfo_NONCLIENTMETRICS(Standard.SPI,System.Int32,Standard.NONCLIENTMETRICS@,Standard.SPIF)">
            <summary>NONCLIENT メトリックを取得および設定するための SystemParametersInfo のオーバーロードです。</summary>
        </member>
        <member name="M:Standard.NativeMethods._SystemParametersInfo_HIGHCONTRAST(Standard.SPI,System.Int32,Standard.HIGHCONTRAST@,Standard.SPIF)">
            <summary>HIGHCONTRAST を取得および設定するための SystemParametersInfo のオーバーロードです。</summary>
        </member>
        <member name="M:Standard.NativeMethods.SetCurrentProcessExplicitAppUserModelID(System.String)">
            <summary>現在のプロセスのユーザー モデル AppID を設定し、Windows がこの ID を取得できるようにします。</summary>
            <param name="AppID"></param>
        </member>
        <member name="M:Standard.NativeMethods.GetCurrentProcessExplicitAppUserModelID(System.String@)">
            <summary>SetCurrentProcessExplicitAppModelModelID を介して現在のプロセスに明示的に設定された、ユーザー モデル AppID を取得します。</summary>
            <param name="AppID"></param>
        </member>
        <member name="T:Standard.AL">
            <summary>ASSOCIATIONLEVEL, AL_*</summary>
        </member>
        <member name="T:Standard.AT">
            <summary>ASSOCIATIONTYPE, AT_*</summary>
        </member>
        <member name="T:Standard.FDAP">
            <summary>FileDialog AddPlace オプション。FDAP_*</summary>
        </member>
        <member name="T:Standard.FOS">
            <summary>IFileDialog オプション。FOS_*</summary>
        </member>
        <member name="T:Standard.FDEOR">
            <summary>FDE_OVERWRITE_RESPONSE.FDEOR_*</summary>
        </member>
        <member name="T:Standard.FDESVR">
            <summary>FDE_SHAREVIOLATION_RESPONSE.FDESVR_*</summary>
        </member>
        <member name="T:Standard.SIATTRIBFLAGS">
            <summary>ShellItem 属性フラグ。SIATTRIBFLAGS_*</summary>
        </member>
        <member name="T:Standard.STPF">
            <summary>SetTabProperties のフラグ。STPF_*</summary>
            <remarks>ネイティブ列挙型は STPFLAG と呼ばれしました。</remarks>
        </member>
        <member name="T:Standard.TBPF">
            <summary>Taskbar 進行状況を設定するためのフラグ。TBPF_*</summary>
            <remarks>ネイティブ列挙型は TBPFLAG と呼ばれしました。</remarks>
        </member>
        <member name="T:Standard.THB">
            <summary>THUMBBUTTON マスク。THB_*</summary>
        </member>
        <member name="T:Standard.THBF">
            <summary>THUMBBUTTON フラグ。THBF_*</summary>
        </member>
        <member name="T:Standard.GPS">
            <summary>GetPropertyStoreフラグ。GPS_*。</summary>
            <remarks>これらは Vista 用の新機能ですが、ダウンレベル コンポーネントで使用されます。</remarks>
        </member>
        <member name="T:Standard.KDC">
            <summary>KNOWNDESTCATEGORY.KDC_*</summary>
        </member>
        <member name="F:Standard.SFGAO.CANCOPY">
            <summary>オブジェクトをコピーできます</summary>
            <remarks>DROPEFFECT_COPY</remarks>
        </member>
        <member name="F:Standard.SFGAO.CANMOVE">
            <summary>オブジェクトを移動できます</summary>
            <remarks>DROPEFFECT_MOVE</remarks>
        </member>
        <member name="F:Standard.SFGAO.CANLINK">
            <summary>オブジェクトをリンクできます</summary>
            <remarks>DROPEFFECT_LINK.このビットがシェル フォルダー内の項目に設定されている場合、[ショートカットの作成] メニュー項目が [ファイル] メニューとアイテムのコンテキスト メニューに追加されます。ユーザーがそのコマンドを選択すると、IContextMenu::InvokeCommand() が &apos;link&apos; で呼び出されます。このフラグは、フォルダー内のアイテムを別のフォルダーにドラッグする場合、&apos;ショートカットを作成する&apos; を追加する必要があるかどうかを判断するためにも使用されます。</remarks>
        </member>
        <member name="F:Standard.SFGAO.STORAGE">
            <summary>BindToObject (IID_IStorage) をサポートします。</summary>
        </member>
        <member name="F:Standard.SFGAO.CANRENAME">
            <summary>オブジェクトを名前変更できます。</summary>
        </member>
        <member name="F:Standard.SFGAO.CANDELETE">
            <summary>オブジェクトを削除できます。</summary>
        </member>
        <member name="F:Standard.SFGAO.HASPROPSHEET">
            <summary>オブジェクトにプロパティ シートがあります</summary>
        </member>
        <member name="F:Standard.SFGAO.DROPTARGET">
            <summary>オブジェクトはドロップ先です</summary>
        </member>
        <member name="F:Standard.SFGAO.ENCRYPTED">
            <summary>オブジェクトは暗号化されています (代替色使用)</summary>
        </member>
        <member name="F:Standard.SFGAO.ISSLOW">
            <summary>&apos;低速&apos; オブジェクト</summary>
        </member>
        <member name="F:Standard.SFGAO.GHOSTED">
            <summary>非実体化アイコン</summary>
        </member>
        <member name="F:Standard.SFGAO.LINK">
            <summary>ショートカット (リンク)</summary>
        </member>
        <member name="F:Standard.SFGAO.SHARE">
            <summary>共有</summary>
        </member>
        <member name="F:Standard.SFGAO.READONLY">
            <summary>Read-Only (読み取り専用)</summary>
        </member>
        <member name="F:Standard.SFGAO.HIDDEN">
            <summary>非表示オブジェクト</summary>
        </member>
        <member name="F:Standard.SFGAO.FILESYSANCESTOR">
            <summary>SFGAO_FILESYSTEM を持つ子を含めることができます。</summary>
        </member>
        <member name="F:Standard.SFGAO.FOLDER">
            <summary>BindToObject(IID_IShellFolder) をサポートします</summary>
        </member>
        <member name="F:Standard.SFGAO.FILESYSTEM">
            <summary>win32 ファイル システム オブジェクト (ファイル/フォルダ/ルート) です</summary>
        </member>
        <member name="F:Standard.SFGAO.HASSUBFOLDER">
            <summary>SFGAO_FOLDER を持つ子供を含めることができます (遅い場合があります)</summary>
        </member>
        <member name="F:Standard.SFGAO.VALIDATE">
            <summary>キャッシュされた情報を無効にします (遅い場合があります)</summary>
        </member>
        <member name="F:Standard.SFGAO.REMOVABLE">
            <summary>これは削除可能なメディアですか?</summary>
        </member>
        <member name="F:Standard.SFGAO.COMPRESSED">
            <summary>オブジェクトが圧縮されています(代替色使用)</summary>
        </member>
        <member name="F:Standard.SFGAO.BROWSABLE">
            <summary>IShellFolder をサポートしますが、CreateViewObject() (フォルダー以外のビュー) のみを実装します。</summary>
        </member>
        <member name="F:Standard.SFGAO.NONENUMERATED">
            <summary>非列挙型オブジェクトです (非表示にする必要があります)</summary>
        </member>
        <member name="F:Standard.SFGAO.NEWCONTENT">
            <summary>エクスプローラ ツリーに太字で表示する必要があります。</summary>
        </member>
        <member name="F:Standard.SFGAO.CANMONIKER">
            <summary>古い形式：</summary>
        </member>
        <member name="F:Standard.SFGAO.HASSTORAGE">
            <summary>古い形式：</summary>
        </member>
        <member name="F:Standard.SFGAO.STREAM">
            <summary>BindToObject (IID_IStream) をサポートします</summary>
        </member>
        <member name="F:Standard.SFGAO.STORAGEANCESTOR">
            <summary>SFGAO_STORAGE または SFGAO_STREAM を持つ子供を含めることができます</summary>
        </member>
        <member name="F:Standard.SFGAO.STORAGECAPMASK">
            <summary>ストレージ容量を決定するため、すなわちオープン/セーブセマンティクスのため</summary>
        </member>
        <member name="F:Standard.SFGAO.PKEYSFGAOMASK">
            <summary>PKEY_SFGAOFlags のためにマスクされる属性です。それは計算が遅い原因となる、またはコンテキストが不足していると見なされるためです (SFGAO_VALIDATE |SFGAO_ISSLOW |SFGAO_HASSUBFOLDER、その他)</summary>
        </member>
        <member name="T:Standard.SHCONTF">
            <summary>IShellFolder::EnumObjects grfFlags ビット。SHCONT とも呼ばれます。</summary>
        </member>
        <member name="T:Standard.SHGDN">
            <summary>IShellFolder::GetDisplayNameOf/SetNameOf uFlags.SHGDNF とも呼ばれます。</summary>
            <remarks>SIGDN との互換性を保つために、これらのビットはすべて 下位ワードに含める必要があります。</remarks>
        </member>
        <member name="T:Standard.SICHINT">
            <summary>SHELLITEMCOMPAREHINTF.SICHINT_*.</summary>
        </member>
        <member name="F:Standard.SICHINT.DISPLAY">
            <summary>フォルダ ビューの表示に基づく iOrder</summary>
        </member>
        <member name="F:Standard.SICHINT.ALLFIELDS">
            <summary>正確なインスタンス比較</summary>
        </member>
        <member name="F:Standard.SICHINT.CANONICAL">
            <summary>Canonical 名に基づく iOrder (パフォーマンスの向上)</summary>
        </member>
        <member name="T:Standard.SIGDN">
            <summary>ShellItem 列挙型.SIGDN_*.</summary>
        </member>
        <member name="T:Standard.STR_GPS">
             <summary>STR_GPS_*</summary>
             <remarks>IShellFolder 経由でプロパティ ストアを要求する場合は、null IBindCtx パラメーターを渡すことにより、GPS_DEFAULT 相当を指定できます。このバインド コンテキストで、STGM_READWRITE | STGM_EXCLUSIVE のモードを渡すことにより、GPS_READWRITE 相当を指定できます
。これは、IBindCtx::RegisterObjectParam() を介してIShellFolder::BindToObject()に渡される GPS_ flags の文字列バージョンです。これらのフラグは、IPropertySetStorage または IPropertyStore ハンドラーを要求すると有効になります。
これらのフラグの意味は、上記で説明されています。GPS_TEMP に相当する STR_ は存在しません。それは、
一時プロパティ ストアは IShellItem2 によってのみ提供され、基本 IShellFolder では提供されないためです。</remarks>
        </member>
        <member name="F:Standard.THUMBBUTTON.THBN_CLICKED">
            <summary>クリックされる THUMBBUTTON の WPARAM 値。</summary>
        </member>
        <member name="F:Standard.PKEY._fmtid">
            <summary>fmtid</summary>
        </member>
        <member name="F:Standard.PKEY._pid">
            <summary>Pid</summary>
        </member>
        <member name="F:Standard.PKEY.Title">
            <summary>PKEY_Title</summary>
        </member>
        <member name="F:Standard.PKEY.AppUserModel_ID">
            <summary>PKEY_AppUserModel_ID</summary>
        </member>
        <member name="F:Standard.PKEY.AppUserModel_IsDestListSeparator">
            <summary>PKEY_AppUserModel_IsDestListSeparator</summary>
        </member>
        <member name="F:Standard.PKEY.AppUserModel_RelaunchCommand">
            <summary>PKEY_AppUserModel_RelaunchCommand</summary>
        </member>
        <member name="F:Standard.PKEY.AppUserModel_RelaunchDisplayNameResource">
            <summary>PKEY_AppUserModel_RelaunchDisplayNameResource</summary>
        </member>
        <member name="F:Standard.PKEY.AppUserModel_RelaunchIconResource">
            <summary>PKEY_AppUserModel_RelaunchIconResource</summary>
        </member>
        <member name="T:Standard.IObjectArray">
            <summary>不明なオブジェクト アレイ</summary>
        </member>
        <member name="T:Standard.IShellItem">
            <summary>シェル名前空間ヘルパー</summary>
        </member>
        <member name="T:Standard.IShellItem2">
            <summary>シェル名前空間ヘルパー 2</summary>
        </member>
        <member name="M:Standard.ITaskbarList.HrInit">
            <summary>他のメンバーの使用を検証するには、この関数を最初に呼び出す必要があります。</summary>
        </member>
        <member name="M:Standard.ITaskbarList.AddTab(System.IntPtr)">
            <summary>この関数は、タスク バーに hwnd のタブを追加します。</summary>
            <param name="hwnd">タブを追加する HWND。</param>
        </member>
        <member name="M:Standard.ITaskbarList.DeleteTab(System.IntPtr)">
            <summary>この関数は、タスク バーから hwnd のタブを削除します。</summary>
            <param name="hwnd">タブを削除する HWND。</param>
        </member>
        <member name="M:Standard.ITaskbarList.ActivateTab(System.IntPtr)">
            <summary>この関数は、タスク バーの hwnd に関連付けられたタブをアクティブにします。</summary>
            <param name="hwnd">タブを作動させる HWND。</param>
        </member>
        <member name="M:Standard.ITaskbarList.SetActiveAlt(System.IntPtr)">
            <summary>この関数は、タスク バーの hwnd をアクティブなタブとしてマークします。</summary>
            <param name="hwnd">アクティブ化する HWND。</param>
        </member>
        <member name="M:Standard.ITaskbarList2.MarkFullscreenWindow(System.IntPtr,System.Boolean)">
            <summary>ウィンドウを全画面表示としてマークします。</summary>
            <param name="hwnd">マークするウィンドウのハンドル。</param>
            <param name="fFullscreen">ウィンドウの所定の全画面表示ステータスを示すブール値。</param>
            <remarks>fFullscreen の値を true に設定すると、シェルはこのウィンドウを全画面表示ウィンドウとして扱い、このウィンドウがアクティブな場合はタスク バーが Z オーダーの下部に移動します。fFullscreen の値を false に設定すると、全画面表示のマーキングは削除されますが、 <i></i>シェルは、ウィンドウを、厳密に全画面表示ではないかのようには扱いません。  false fFullscreen 値を使用すると、シェルは自動検出機能に依存してウィンドウの処理方法を指定し、まだ、ウィンドウに全画面表示のフラグが立っている可能性があります。</remarks>
        </member>
        <member name="T:Standard.IApplicationDocumentLists">
            <summary>SHAddToRecentDocsを介して報告されているように、アプリケーションは、そのアプリで開かれる、最新かつ頻繁に使用されるドキュメントを取得することができます</summary>
        </member>
        <member name="M:Standard.IApplicationDocumentLists.SetAppID(System.String)">
            <summary>このリストを取得する、アプリケーションのアプリ ユーザー モデル ID を設定します。AppID がこの方法で規定されない場合、システムはヒューリスティックに決定された ID を使用します。このメソッドは、GetList の前に呼び出す必要があります。</summary>
            <param name="pszAppID">App ID</param>
        </member>
        <member name="M:Standard.IApplicationDocumentLists.GetList(Standard.APPDOCLISTTYPE,System.UInt32,System.Guid@)">
            <summary>IShellItems および/または IShellLinks 用の IEnumObjects または IObjectArray を取得します。項目は、頻繁なリストと最近のリストの両方に表示させることができます。</summary>
            <returns></returns>
        </member>
        <member name="T:Standard.IObjectWithAppUserModelId">
            <summary>この値をサポートするオブジェクトのアプリ ユーザー モデル ID へのアクセスを提供します。</summary>
        </member>
        <member name="T:Standard.IObjectWithProgId">
            <summary>オブジェクトに関連付けられた ProgID へのアクセスを提供します。</summary>
        </member>
        <member name="T:Standard.ComStream">
            <summary>COM から IStream インターフェイス ポインタを .Net で使用できるフォームにラップします。</summary>
            <remarks>この実装は不変ですが、基本ストリームを別のコンテキストで変更することが可能です。</remarks>
        </member>
        <member name="M:Standard.ComStream.#ctor(System.Runtime.InteropServices.ComTypes.IStream@)">
            <summary>ネイティブ IStream インターフェイスを CLR ストリーム サブクラスにラップします。</summary>
            <param name="stream">このオブジェクトがラップするストリームです。</param>
            <remarks>パラメーターは ref によって渡されることに注意してください。正常に作成されると、呼び出し元にゼロになります。このオブジェクトは、ラップされた IStream のライフタイム管理に責任を負います。</remarks>
        </member>
        <member name="T:Standard.ManagedIStream">
            <summary>マネージド ストリーム インスタンスを COM によって使用可能なインターフェイス ポインターにラップします。</summary>
        </member>
        <member name="M:Standard.ManagedIStream.#ctor(System.IO.Stream)">
            <summary>指定されたマネージ ストリーム オブジェクトを使用して、ManagedIStream クラスの新しいインスタンスを初期化します。</summary>
            <param name="source">この IStream 参照がラップしているストリームです。</param>
        </member>
        <member name="M:Standard.ManagedIStream.Clone(System.Runtime.InteropServices.ComTypes.IStream@)">
            <summary>元のストリームと同じバイトを参照する、独自のシーク ポインターを持つ新しいストリーム オブジェクトを作成します。</summary>
            <param name="ppstm">このメソッドが返される場合は、新しいストリーム オブジェクトが含まれます。このパラメータは初期化されないでに渡されます。</param>
            <remarks>詳細については、MSDN ライブラリの IStream::クローンの既存のドキュメントを参照してください。このクラスはクローンを実装しません。使用される場合は、COMException がスローされます。</remarks>
        </member>
        <member name="M:Standard.ManagedIStream.Commit(System.Int32)">
            <summary>トランザクション モードで開いているストリーム オブジェクトに加えられたどの変更も、確実に親ストレージに反映されるようにします。</summary>
            <param name="grfCommitFlags">ストリーム オブジェクトの変更のコミット方法を制御する値です。</param>
            <remarks>詳細については、MSDN ライブラリの IStream::コミットの既存のドキュメントを参照してください。</remarks>
        </member>
        <member name="M:Standard.ManagedIStream.CopyTo(System.Runtime.InteropServices.ComTypes.IStream,System.Int64,System.IntPtr,System.IntPtr)">
            <summary>指定したバイト数を、ストリーム内の現在のシーク ポインターから別のストリーム内の現在のシーク ポインターにコピーします。</summary>
            <param name="pstm">宛先ストリームへの参照。</param>
            <param name="cb">ソース ストリームからコピーするバイト数です。</param>
            <param name="pcbRead">正常に返されると、ソースから読み取られた実際のバイト数が含まれます。(注：ネイティブシグネチャは ULARGE_INTEGER*に対して行われているため、成功時に 64 ビットがこのパラメーターに書き込まれます。)</param>
            <param name="pcbWritten">正常に返されると、宛先に書き込まれた実際のバイト数が含まれます。(注：ネイティブシグネチャは ULARGE_INTEGER*に対して行われているため、成功時に 64 ビットがこのパラメーターに書き込まれます。)</param>
        </member>
        <member name="M:Standard.ManagedIStream.LockRegion(System.Int64,System.Int64,System.Int32)">
            <summary>ストリーム内の指定されたバイト範囲へのアクセスを制限します。</summary>
            <param name="libOffset">範囲の先頭のバイト オフセット。</param>
            <param name="cb">制限する範囲の長さをバイト単位で制限します。</param>
            <param name="dwLockType">範囲へのアクセスに関する要求された制限。</param>
            <remarks>詳細については、MSDN ライブラリの IStream::LockRegion の既存のドキュメントを参照してください。このクラスは LockRegion を実装しません。使用される場合は、COMException がスローされます。</remarks>
        </member>
        <member name="M:Standard.ManagedIStream.Read(System.Byte[],System.Int32,System.IntPtr)">
            <summary>現在の seek ポインターから始まるメモリへのストリーム オブジェクトから、指定されたバイト数を読み取ります。</summary>
            <param name="pv">このメソッドが返されると、ストリームから読み取られたデータが含まれます。このパラメータは初期化されないで渡されます。</param>
            <param name="cb">ストリーム オブジェクトから読み取るバイト数。</param>
            <param name="pcbRead">ストリーム オブジェクトから読み取られた実際のバイト数を受け取る ULONG 変数へのポインター。</param>
            <remarks>詳細については、MsDN ライブラリの ISequentialStream::Read の既存のドキュメントを参照してください。</remarks>
        </member>
        <member name="M:Standard.ManagedIStream.Revert">
            <summary>最後のコミット呼び出し以降にトランザクション ストリームに加えられたすべての変更を破棄します。</summary>
            <remarks>このクラスは、元に戻すことはできません。使用される場合は、COMException がスローされます。</remarks>
        </member>
        <member name="M:Standard.ManagedIStream.Seek(System.Int64,System.Int32,System.IntPtr)">
            <summary>シーク ポインターを、ストリームの先頭、ストリームの末尾、または現在の seek ポインターに対して相対的な新しい位置に変更します。</summary>
            <param name="dlibMove">dwOrigin に追加するディスプレイスメントです。</param>
            <param name="dwOrigin">シークの原点です。原点は、ファイルの先頭、現在のシーク ポインター、またはファイルの末尾とすることができます。</param>
            <param name="plibNewPosition">正常に返されると、ストリームの先頭からのシーク ポインターのオフセットが含まれます。(注：ネイティブシグネチャは ULARGE_INTEGER*に対して行われているため、成功時に 64 ビットがこのパラメーターに書き込まれます。)</param>
            <remarks>詳細については、MSDN ライブラリの IStream::Seek の既存のドキュメントを参照してください。</remarks>
        </member>
        <member name="M:Standard.ManagedIStream.SetSize(System.Int64)">
            <summary>ストリーム オブジェクトのサイズを変更します。</summary>
            <param name="libNewSize">ストリームの新しいサイズを、バイト数として使用します。</param>
            <remarks>詳細については、MSDN ライブラリの IStream::SetSize の既存のドキュメントを参照してください。</remarks>
        </member>
        <member name="M:Standard.ManagedIStream.Stat(System.Runtime.InteropServices.ComTypes.STATSTG@,System.Int32)">
            <summary>このストリームの STATSTG 構造体を取得します。</summary>
            <param name="pstatstg">このメソッドが返されると、このストリーム オブジェクトを記述する STATSTG 構造体が含まれます。このパラメータは初期化されないで渡されます。</param>
            <param name="grfStatFlag">このメソッドが返さない STATSTG 構造体のメンバーは、そのため、一部のメモリー割り当て操作を節減します。</param>
        </member>
        <member name="M:Standard.ManagedIStream.UnlockRegion(System.Int64,System.Int64,System.Int32)">
            <summary>LockRegion メソッドで以前に制限されていたバイトの範囲に対するアクセス制限を削除します。</summary>
            <param name="libOffset">範囲の先頭のバイト オフセット。</param>
            <param name="cb">制限する範囲の長さ (バイト単位)。</param>
            <param name="dwLockType">以前に範囲に課せられたアクセス制限。</param>
            <remarks>詳細については、MSDN ライブラリの IStream::UnlockRegion の既存のドキュメントを参照してください。このクラスは UnlockRegion を実装しません。使用される場合は、COMException がスローされます。</remarks>
        </member>
        <member name="M:Standard.ManagedIStream.Write(System.Byte[],System.Int32,System.IntPtr)">
            <summary>現在のシーク ポインターから始まるストリーム オブジェクトに指定されたバイト数を書き込みます。</summary>
            <param name="pv">このストリームを書き込むバッファー。</param>
            <param name="cb">ストリームに書き込むバイト数。</param>
            <param name="pcbWritten">正常に返されると、ストリーム オブジェクトに書き込まれた実際のバイト数が含まれます。呼び出し元がこのポインタを null に設定した場合、このメソッドは実際に書き込まれたバイト数を提示しません。</param>
        </member>
        <member name="M:Standard.ManagedIStream.Dispose">
            <summary>このオブジェクトによって制御されるリソースを解放します。</summary>
            <remarks>Dispose は複数回呼び出すことができますが、破棄後にオブジェクトを使用しようとすると、通常は ObjectDisposedExceptions がスローされます。</remarks>
        </member>
        <member name="M:Standard.Utility.SafeCopyFile(System.String,System.String,Standard.SafeCopyFileOptions)">
            <summary>File.Copy のラッパーを使用して、ファイルが、存在しなかったためにコピーされなかったかどうかに関するフィードバックを提供します。</summary>
            <returns></returns>
        </member>
        <member name="M:Standard.Utility.SafeDeleteFile(System.String)">
            <summary>File.Delete が null および空の文字列にスローする例外に対する単純なガードです。</summary>
            <param name="path">削除するパスです。File.Delete とは異なり、これは null または空の場合があります。</param>
            <remarks>File.Delete および拡張 SafeDeleteFile は、ファイルが存在しない場合は例外をスローしないことに注意してください。</remarks>
        </member>
        <member name="M:Standard.Utility.GeneratePropertyString(System.Text.StringBuilder,System.String,System.String)">
            <summary>クラスが ToString() を実装するためのプロパティを連結するために役立つユーティリティです。</summary>
            <param name="source">結果を連結する StringBuilder です。</param>
            <param name="propertyName">連結するプロパティの名前です。</param>
            <param name="value">連結するプロパティの値です。</param>
        </member>
        <member name="M:Standard.Utility.GenerateToString``1(``0)">
            <summary>構造体の ToString 機能を生成します。これは、クラスが流動的である間にデバッグのために存在する、それを行うためのコストが高い方法です。最終的には、これは単に削除する必要があり、クラスはリフレクションなしでこれを行う必要があります。</summary>
            <typeparam name="T"></typeparam>
            <param name="object"></param>
            <returns></returns>
        </member>
        <member name="M:Standard.Utility.UrlEncode(System.String)">
            <summary>URL 文字列をエンコードします。System.Web.HttpUtility.URLEncode から複製された機能です。</summary>
            <param name="url"></param>
            <returns></returns>
            <remarks>System.Web はクライアント プロファイルの一部ではないため、System.Web.HttpUtility から複製されます。URL エンコーディングは &apos; &apos; を &apos;+&apos; に置き換え、安全でない ASCII 文字を &apos;%XX&apos; に置き換えます。安全文字は RFC2396 (http://www.ietf.org/rfc/rfc2396.txt) で定義されます。それらは 7 ビット ASCII の英数字と記号文字 &quot;-_.!~*&apos;()&quot; です。この実装では、&apos;~&apos; は System.Web バージョンと整合性のある安全な文字としては扱いません。</remarks>
        </member>
        <member name="M:Standard.Utility.SafeDeleteObject(System.IntPtr@)">
            <summary>GDI の DeleteObject です</summary>
        </member>
        <member name="M:Standard.Utility.SafeDisposeImage(System.IntPtr@)">
            <summary>GDI+&apos; の DisposeImage です</summary>
            <param name="gdipImage"></param>
        </member>
        <member name="M:Standard.Utility._GetBestMatch(System.Collections.Generic.IList{System.Windows.Media.Imaging.BitmapFrame},System.Int32,System.Int32,System.Int32)">BitmapFrames のリストから、要求されたディメンションに最も一致するものを検索します。ここで使用するメソッドは、Win32 ソースからコピーされます。私たちは、システムの動作と一貫性を持ちたいと考えています。</member>
        <member name="M:Standard.Utility.ColorFromArgbDword(System.UInt32)">
            <summary>アルファ チャネルを含む色を表すネイティブ整数を Color 構造体に変換します。</summary>
            <param name="color">色を表す整数です。そのビットは 0xAARRGGBB のフォーマットです。</param>
            <returns>パラメータのカラー表現です。</returns>
        </member>
        <member name="T:Standard.Verify">
            <summary>リテール検証済みアサーションの静的クラスです。デバッガーに割り込む代わりに、例外がスローされます。</summary>
        </member>
        <member name="M:Standard.Verify.IsApartmentState(System.Threading.ApartmentState,System.String)">
            <summary>現在のスレッドのアパートメント状態が予測どおりであることを確認します。</summary>
            <param name="requiredState">現在のスレッドに必要なアパートメント状態です。</param>
            <param name="message">状態が無効な場合にスローされる例外のメッセージ文字列です。</param>
            <exception cref="T:System.InvalidOperationException">呼び出しスレッドのアパートメント状態が requiredStateと同じでない場合にスローされます。</exception>
        </member>
        <member name="M:Standard.Verify.IsNeitherNullNorEmpty(System.String,System.String)">
            <summary>引数が null でも空でもないことを確認します。</summary>
            <param name="value">検証する文字列。</param>
            <param name="name">例外がスローされた場合に表示されるパラメーターの名前です。</param>
        </member>
        <member name="M:Standard.Verify.IsNeitherNullNorWhitespace(System.String,System.String)">
            <summary>引数が null でもなく、空白のみで構成されてもいないことを確認します。</summary>
            <param name="value">検証する文字列。</param>
            <param name="name">例外がスローされた場合に表示されるパラメーターの名前です。</param>
        </member>
        <member name="M:Standard.Verify.IsNotDefault``1(``0,System.String)">
            <summary>引数が null でないことを検証します。</summary>
            <typeparam name="T">検証するオブジェクトのタイプです。クラスである必要があります。</typeparam>
            <param name="obj">検証するオブジェクトです。</param>
            <param name="name">例外がスローされた場合に表示されるパラメーターの名前です。</param>
        </member>
        <member name="M:Standard.Verify.IsNotNull``1(``0,System.String)">
            <summary>引数が null でないことを検証します。</summary>
            <typeparam name="T">検証するオブジェクトのタイプです。クラスである必要があります。</typeparam>
            <param name="obj">検証するオブジェクトです。</param>
            <param name="name">例外がスローされた場合に表示されるパラメーターの名前です。</param>
        </member>
        <member name="M:Standard.Verify.IsNull``1(``0,System.String)">
            <summary>引数が null であることを検証します。</summary>
            <typeparam name="T">検証するオブジェクトのタイプです。クラスである必要があります。</typeparam>
            <param name="obj">検証するオブジェクトです。</param>
            <param name="name">例外がスローされた場合に表示されるパラメーターの名前です。</param>
        </member>
        <member name="M:Standard.Verify.IsTrue(System.Boolean,System.String,System.String)">
            <summary>指定されたステートメントが true であることを検証します。そうでない場合は、ArgumentException をスローします。</summary>
            <param name="statement">true として検証するステートメントです。</param>
            <param name="name">ArgumentException に含めるパラメーターの名前です。</param>
            <param name="message">ArgumentException に含めるメッセージです。</param>
        </member>
        <member name="M:Standard.Verify.BoundedInteger(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>指定された値が予測される範囲内にあることを検証します。そうでなければ、アサーションは失敗します。</summary>
            <param name="lowerBoundInclusive">下限包括値です。</param>
            <param name="value">検証する値です。</param>
            <param name="upperBoundExclusive">上限排他値です。</param>
            <param name="parameterName">現在の例外をもたらしたパラメーターの名前です。</param>
        </member>
        <member name="M:Microsoft.Windows.Shell.SystemCommands.ShowSystemMenu(System.Windows.Window,System.Windows.Point)">
            <summary>指定した場所にシステム メニューを表示します。</summary>
            <param name="window">MetroWindow</param>
            <param name="screenLocation">論理画面座標で、システム メニューを表示する場所です。</param>
        </member>
        <member name="M:Microsoft.Windows.Shell.SystemParameters2.#ctor">
            <summary>非公開コンストラクターです。このクラスにアクセスするパブリックな方法は、静的 Current プロパティを使用することです。</summary>
        </member>
        <member name="P:Microsoft.Windows.Shell.WindowChrome.CaptionHeight">
            <summary>キャプションとして扱うウィンドウの上部の範囲です。</summary>
        </member>
        <member name="F:Microsoft.Windows.Shell.WindowChrome.IgnoreTaskbarOnMaximizeProperty">
            <summary>IgnoreTaskbarOnMaximize の依存関係プロパティです</summary>
        </member>
        <member name="P:Microsoft.Windows.Shell.WindowChrome.IgnoreTaskbarOnMaximize">
            <summary>このプロパティが true で、アタッチされたウィンドウの WindowStyle=None の場合、ウィンドウが最大化されると、タスク バーを含むモニター全体がカバーされます。</summary>
        </member>
        <member name="P:Microsoft.Windows.Shell.WindowChromeWorker.IsPresentationFrameworkVersionLessThan4">
            <summary>WPF4 を使用していますか?</summary>
            <remarks>3.5SP1 以前の Windows には、HWND で WM_NCCALCSIZE を処理する際に、回避策が必要な特定のバグがいくつかあります。</remarks>
        </member>
        <member name="F:Microsoft.Windows.Shell.WindowChromeWorker._window">
            <summary>クロム変更された Windows です。</summary>
        </member>
        <member name="F:Microsoft.Windows.Shell.WindowChromeWorker._hwnd">
            <summary>_window用の基本 HWND です。</summary>
            <SecurityNote>クリティカル：クリティカル メンバー</SecurityNote>
        </member>
        <member name="F:Microsoft.Windows.Shell.WindowChromeWorker._hwndSource">
            <summary>_window用の基本 HWND です。</summary>
            <SecurityNote>クリティカル：クリティカル メンバーは、クリティカルな HWND のウィンドウ メッセージへのアクセスを提供します。</SecurityNote>
        </member>
        <member name="F:Microsoft.Windows.Shell.WindowChromeWorker._chromeInfo">
            <summary>クロムに対して行われている現在の変更を記述するオブジェクトです。</summary>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker.#ctor">
            <SecurityNote>クリティカル：クリティカルなメソッドは、クリティカル コールバック テーブルセーフに保存します。完全信頼のアクセス許可を要求する</SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker.SetWindowChrome(Microsoft.Windows.Shell.WindowChrome)">
            <SecurityNote>クリティカル：クリティカルなメソッドを安全に呼び出します。完全信頼のアクセス許可を要求する</SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._OnChromePropertyChangedThatRequiresRepaint(System.Object,System.EventArgs)">
            <SecurityNote>クリティカル：クリティカルなメソッドを安全に呼び出します。完全信頼のアクセス許可を要求する</SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._OnChromeWorkerChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <SecurityNote>クリティカル：クリティカルなメソッドを安全に呼び出します。完全信頼のアクセス許可を要求する</SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._SetWindow(System.Windows.Window)">
            <SecurityNote>クリティカル：クリティカル メソッドの呼び出し</SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._WindowSourceInitialized(System.Object,System.EventArgs)">
            <SecurityNote>クリティカル：クリティカルなメソッドは、クリティカル コールバック テーブルセーフに保存します。完全信頼のアクセス許可を要求する</SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker.UnsubscribeWindowEvents">
            <SecurityNote>クリティカル：クリティカルなメソッドを参照します</SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._UnsetWindow(System.Object,System.EventArgs)">
            <SecurityNote>クリティカル：クリティカルなメソッドは、クリティカル コールバック テーブルセーフに保存します。完全信頼のアクセス許可を要求する</SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._OnWindowPropertyChangedThatRequiresTemplateFixup(System.Object,System.EventArgs)">
            <SecurityNote>クリティカル：critical_hwnd フィールド セーフにアクセスします。完全信頼のアクセス許可を要求する</SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._ApplyNewCustomChrome">
            <SecurityNote>クリティカル：クリティカル メソッドの呼び出し</SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._FixupTemplateIssues">
            <SecurityNote>クリティカル：クリティカル メソッドの呼び出し</SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._FixupRestoreBounds(System.Object,System.EventArgs)">
            <SecurityNote>クリティカル：クリティカルなメソッドは、クリティカル コールバック テーブルセーフに保存します。完全信頼のアクセス許可を要求する</SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._GetAdjustedWindowRect(Standard.RECT)">
            <SecurityNote>クリティカル：クリティカル メソッドの呼び出し</SecurityNote>
        </member>
        <member name="P:Microsoft.Windows.Shell.WindowChromeWorker._IsWindowDocked">
            <SecurityNote>クリティカル：クリティカルなメソッドの呼び出し</SecurityNote>
        </member>
        <member name="P:Microsoft.Windows.Shell.WindowChromeWorker._MinimizeAnimation">境界線がないウィンドウはアニメがありません。取り戻す対応中です。</member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
            <SecurityNote>クリティカル：critical_hwnd へのアクセス</SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._HandleNCUAHDrawCaption(Standard.WM,System.IntPtr,System.IntPtr,System.Boolean@)">
            <SecurityNote>クリティカル：クリティカル メソッドの呼び出し</SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._HandleRestoreWindow(Standard.WM,System.IntPtr,System.IntPtr,System.Boolean@)">
            <SecurityNote>クリティカル：クリティカル メソッドの呼び出し</SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._HandleNCActivate(Standard.WM,System.IntPtr,System.IntPtr,System.Boolean@)">
            <SecurityNote>クリティカル：クリティカル メソッドの呼び出し</SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker.AdjustWorkingAreaForAutoHide(System.IntPtr,Standard.RECT)">
            <summary>このメソッドは、タスク バーが自動非表示に設定されている場合にウィンドウ サイズを処理します。</summary>
            <SecurityNote>クリティカル：クリティカル メソッドの呼び出し</SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._HandleNCCalcSize(Standard.WM,System.IntPtr,System.IntPtr,System.Boolean@)">
            <SecurityNote>クリティカル：クリティカルな Marshal.PtrToStructure を呼び出します</SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._HandleNCHitTest(Standard.WM,System.IntPtr,System.IntPtr,System.Boolean@)">
            <SecurityNote>クリティカル：クリティカル メソッドの呼び出し</SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._HandleNCRButtonUp(Standard.WM,System.IntPtr,System.IntPtr,System.Boolean@)">
            <SecurityNote>クリティカル：クリティカルなメソッドの呼び出し</SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._HandleSize(Standard.WM,System.IntPtr,System.IntPtr,System.Boolean@)">
            <SecurityNote>クリティカル：クリティカルなメソッドの呼び出し</SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._HandleWindowPosChanging(Standard.WM,System.IntPtr,System.IntPtr,System.Boolean@)">
            <SecurityNote>クリティカル：クリティカルな Marshal.PtrToStructure を呼び出します</SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._HandleWindowPosChanged(Standard.WM,System.IntPtr,System.IntPtr,System.Boolean@)">
            <SecurityNote>クリティカル：クリティカルな Marshal.PtrToStructure を呼び出します</SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._HandleGetMinMaxInfo(Standard.WM,System.IntPtr,System.IntPtr,System.Boolean@)">
            <SecurityNote>クリティカル：クリティカル メソッドの呼び出し</SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._HandleDwmCompositionChanged(Standard.WM,System.IntPtr,System.IntPtr,System.Boolean@)">
            <SecurityNote>クリティカル：クリティカル メソッドの呼び出し</SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._HandleSettingChange(Standard.WM,System.IntPtr,System.IntPtr,System.Boolean@)">
            <SecurityNote>クリティカル：クリティカル メソッドの呼び出し</SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._HandleEnterSizeMove(Standard.WM,System.IntPtr,System.IntPtr,System.Boolean@)">
            <SecurityNote>クリティカル：クリティカル メソッドの呼び出し</SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._HandleEnterSizeMoveForAnimation(Standard.WM,System.IntPtr,System.IntPtr,System.Boolean@)">
            <SecurityNote>クリティカル：クリティカル メソッドの呼び出し</SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._HandleMoveForRealSize(Standard.WM,System.IntPtr,System.IntPtr,System.Boolean@)">
            <SecurityNote>クリティカル：クリティカル メソッドの呼び出し</SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._HandleExitSizeMoveForAnimation(Standard.WM,System.IntPtr,System.IntPtr,System.Boolean@)">
            <SecurityNote>クリティカル：クリティカル メソッドの呼び出し</SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._ModifyStyle(Standard.WS,Standard.WS)">
            <summary>HWND からネイティブな WindowStyle を追加および削除します。</summary>
            <param name="removeStyle">削除するスタイルです。これらはビットごとに組み合わせることが可能です。</param>
            <param name="addStyle">追加するスタイルです。これらはビットごとに組み合わせることが可能です。</param>
            <returns>この呼び出しの結果としてHWND のスタイルが変更されたかどうか。</returns>
            <SecurityNote>クリティカル：クリティカル メソッドの呼び出し</SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._GetHwndState">
            <summary>WindowState を、ネイティブ HWND が知っている方法で取得します。これは、Windows が考えていることと必ずしも同じではありません。</summary>
            <SecurityNote>クリティカル：クリティカル メソッドの呼び出し</SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._GetWindowRect">
            <summary>物理座標でウィンドウの境界四角形を取得します。</summary>
            <returns>ウィンドウ用の境界四角形。</returns>
            <SecurityNote>クリティカル：クリティカル メソッドの呼び出し</SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._UpdateSystemMenu(System.Nullable{System.Windows.WindowState})">
            <summary>システム メニューの項目を、現在の、または想定される WindowState に基づいて更新します。</summary>
            <param name="assumeState">Windows が入っていることを前提とする状態。これは、Windows の状態をクエリするために null とすることができます。</param>
            <remarks>キャプションを再描画するかどうかを操作しながら、メニューを更新します。</remarks>
            <SecurityNote>クリティカル：クリティカル メソッドの呼び出し</SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._UpdateFrameState(System.Boolean)">
            <SecurityNote>クリティカル：クリティカル メソッドの呼び出し</SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._ClearRoundingRegion">
            <SecurityNote>クリティカル：クリティカル メソッドの呼び出し</SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._GetClientRectRelativeToWindowRect(System.IntPtr)">
            <SecurityNote>クリティカル：クリティカル メソッドの呼び出し</SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._SetRoundingRegion(System.Nullable{Standard.WINDOWPOS})">
            <SecurityNote>クリティカル：クリティカル メソッドの呼び出し</SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._CreateRoundRectRgn(System.Windows.Rect,System.Double)">
            <SecurityNote>クリティカル：クリティカル メソッドの呼び出し</SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._CreateAndCombineRoundRectRgn(System.IntPtr,System.Windows.Rect,System.Double)">
            <SecurityNote>クリティカル：クリティカル メソッドの呼び出し</SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._ExtendGlassFrame">
            <SecurityNote>クリティカル：クリティカル メソッドの呼び出し</SecurityNote>
        </member>
        <member name="F:Microsoft.Windows.Shell.WindowChromeWorker._HitTestBorders">
            <summary>NC ウィンドウ メッセージに応答する場合に返す HT 値のマトリックスです。</summary>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._RestoreStandardChromeState(System.Boolean)">
            <SecurityNote>クリティカル：クリティカル メソッドの呼び出し</SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._UnhookCustomChrome">
            <SecurityNote>クリティカル：critical_hwndSource からのイベント ハンドラーのサブスクライブを解除します。</SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._RestoreFrameworkIssueFixups">
            <SecurityNote>クリティカル：クリティカルなイベント ハンドラーのサブスクライブを解除します。</SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._RestoreGlassFrame">
            <SecurityNote>クリティカル：クリティカル メソッドの呼び出し</SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._RestoreHrgn">
            <SecurityNote>クリティカル：クリティカル メソッドの呼び出し</SecurityNote>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>GeneratedInternalTypeHelper</summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>Createinstance</summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>GetPropertyValue</summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>SetPropertyValue</summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>CreateDelegate</summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>AddEventHandler</summary>
        </member>
    </members>
</doc>